{"mappings":"A,C,KCUI,CAAA,AAAuC,SAAvC,aAAa,OAAA,CAAQ,eACpB,OAAO,UAAA,CAAW,gCAAgC,OAAA,EAClD,CAAC,aAAa,OAAA,CAAQ,aAAA,GAGvB,SAAS,eAAA,CAAgB,YAAA,CAAa,aAAc,QAIxD,IAAM,EAAkB,AAAC,IAGrB,GAFA,QAAQ,GAAA,CAAI,SAEP,AAAwD,SAAxD,SAAS,eAAA,CAAgB,YAAA,CAAa,cAA2B,CAErE,SAAS,eAAA,CAAgB,YAAA,CAAa,aAAc,SAGvD,aAAa,OAAA,CAAQ,aAAc,SACnC,MACD,CAIG,SAAS,eAAA,CAAgB,YAAA,CAAa,aAAc,QAGvD,aAAa,OAAA,CAAQ,aAAc,OACpC,EAEA,OAAO,gBAAA,CAAiB,OAAQ,WACxB,SAAS,aAAA,CAAc,iBACvB,SAAS,aAAA,CAAc,gBAAgB,gBAAA,CAAiB,QAAS,SAAS,CAAK,EAC3E,GACJ,EAER,E,C","sources":["<anon>","src/_js/darkmode.js"],"sourcesContent":["(() => {\n//\n//\n// DARK MODE\n//\n//\n// This code assumes a Light Mode default\nif (/* This condition checks whether the user has set a site preference for dark mode OR a OS-level preference for Dark Mode AND no site preference */ localStorage.getItem(\"color-mode\") === \"dark\" || window.matchMedia(\"(prefers-color-scheme: dark)\").matches && !localStorage.getItem(\"color-mode\")) // if true, set the site to Dark Mode\ndocument.documentElement.setAttribute(\"color-mode\", \"dark\");\nconst $672703c9f0923f8d$var$toggleColorMode = (eL)=>{\n    console.log(\"yo yo\");\n    // Switch to Light Mode\n    if (document.documentElement.getAttribute(\"color-mode\") === \"dark\") {\n        // Sets the custom HTML attribute\n        document.documentElement.setAttribute(\"color-mode\", \"light\");\n        //Sets the user's preference in local storage\n        localStorage.setItem(\"color-mode\", \"light\");\n        return;\n    }\n    /* Switch to Dark Mode\n    Sets the custom HTML attribute */ document.documentElement.setAttribute(\"color-mode\", \"dark\");\n    // Sets the user's preference in local storage\n    localStorage.setItem(\"color-mode\", \"dark\");\n};\nwindow.addEventListener(\"load\", function() {\n    if (document.querySelector(\".mode-toggle\")) document.querySelector(\".mode-toggle\").addEventListener(\"click\", function(event) {\n        $672703c9f0923f8d$var$toggleColorMode();\n    });\n});\n\n})();\n//# sourceMappingURL=darkmode.js.map\n","\n//\n//\n// DARK MODE\n//\n//\n\n// This code assumes a Light Mode default\nif (\n    /* This condition checks whether the user has set a site preference for dark mode OR a OS-level preference for Dark Mode AND no site preference */\n    localStorage.getItem('color-mode') === 'dark' ||\n    (window.matchMedia('(prefers-color-scheme: dark)').matches &&\n     !localStorage.getItem('color-mode'))\n) {\n    // if true, set the site to Dark Mode\n    document.documentElement.setAttribute('color-mode', 'dark')\n}\n\n\nconst toggleColorMode = (eL) => {\n    console.log(\"yo yo\");\n    // Switch to Light Mode\n    if ( document.documentElement.getAttribute(\"color-mode\") === \"dark\" ) {\n    \t// Sets the custom HTML attribute\n    \tdocument.documentElement.setAttribute(\"color-mode\", \"light\");\n\n\t\t//Sets the user's preference in local storage\n\t\tlocalStorage.setItem(\"color-mode\", \"light\")\n\t\treturn;\n\t}\n    \n    /* Switch to Dark Mode\n    Sets the custom HTML attribute */\n    document.documentElement.setAttribute(\"color-mode\", \"dark\");\n\n\t// Sets the user's preference in local storage\n\tlocalStorage.setItem(\"color-mode\", \"dark\");\n};\n\nwindow.addEventListener('load', function () {\n    if (document.querySelector(\".mode-toggle\")) {\n        document.querySelector(\".mode-toggle\").addEventListener('click', function(event) {\n            toggleColorMode();\n        });\n    }\n})"],"names":["localStorage","getItem","window","matchMedia","matches","document","documentElement","setAttribute","$672703c9f0923f8d$var$toggleColorMode","eL","console","log","getAttribute","setItem","addEventListener","querySelector","event"],"version":3,"file":"darkmode.js.map"}