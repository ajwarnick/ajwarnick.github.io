{"mappings":"A,C,K,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,Q,S,C,C,C,ECAA,a,E,E,O,C,W,I,E,A,G,E,G,E,E,O,C,U,I,E,A,G,E,GAEA,IAcA,EACA,EAfI,EAAU,CAAC,EAcf,EAbA,SAAkB,CAAK,EAErB,IAAK,IADD,EAAO,OAAO,IAAA,CAAK,GACd,EAAI,EAAG,EAAI,EAAK,MAAA,CAAQ,IAC/B,CAAO,CAAC,CAAI,CAAC,EAAE,CAAC,CAAG,CAAK,CAAC,CAAI,CAAC,EAAE,CAAC,AAErC,EASA,EARA,SAAiB,CAAE,EACjB,IAAI,EAAW,CAAO,CAAC,EAAG,CAC1B,GAAI,AAAY,MAAZ,EACF,MAAM,AAAI,MAAM,oCAAsC,GAExD,OAAO,CACT,C,G,E,Q,C,Q,S,C,C,C,ECfA,EAAA,OAAA,CAAkB,AAAA,EAAA,SAAuC,AAAA,EAAA,SAAA,YAAA,CAA6C,SAAW,AAAA,EAAA,SAAA,OAAA,CAA6C,UAAW,IAAA,CAAK,IAAM,EAAc,S,G,E,Q,C,Q,S,C,C,C,ECAlM,a,I,E,E,QAGA,CAAA,EAAA,OAAA,CAAiB,EAAY,SAAU,CAAM,EAC3C,OAAO,IAAI,QAAQ,SAAU,CAAO,CAAE,CAAM,EAG1C,GAAI,EAAE,CAAC,MAAA,CADe,SAAS,oBAAA,CAAqB,WACrB,IAAA,CAAK,SAAyB,CAAM,EACjE,OAAO,EAAO,GAAA,GAAQ,CACxB,GAAI,CACF,IACA,MACF,CACA,IAAI,EAAc,SAAS,aAAA,CAAc,OACzC,CAAA,EAAY,IAAA,CAAO,EACnB,EAAY,GAAA,CAAM,UAClB,EAAY,EAAA,CAAK,SACjB,SAAS,IAAA,CA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,EAmD3ByV,EAnD2BtU,GAAA3H,OAAAC,cAAAA,CAmD3Bgc,EAnD2B,YAAA,CAAArV,SAAA,CAAA,CAAA,GAwb1BqV,CAAA,EAnbqCsM,EAAAA,OAmbrC,CAnb6CxnB,CAAAA,EAAAA,OAAA,CAAAkb,EAAAhb,EAAAF,OAAAA,CAAAA,EAAAmF,OAAAjF,A,E,qB,C,E,K,a,S,E,C,E,M,A,C,E,Y,O,Q,U,O,O,Q,C,S,C,E,O,O,C,E,S,C,E,O,G,Y,O,Q,E,W,G,Q,I,O,S,C,S,O,C,C,E,E,C,S,E,C,C,C,E,I,I,E,E,E,E,M,C,I,C,I,E,C,C,E,A,C,E,U,C,E,U,E,C,E,E,Y,C,C,E,U,G,C,E,Q,C,C,C,E,O,c,C,E,A,S,C,E,I,E,A,S,C,C,C,E,G,A,W,E,I,A,O,E,O,E,I,E,C,C,O,W,C,C,G,A,K,I,E,C,I,E,E,I,C,E,G,W,G,A,W,E,G,O,C,O,A,U,+C,C,M,A,C,A,W,E,O,M,E,E,E,E,U,M,A,W,E,G,E,O,E,E,E,G,E,E,C,C,O,c,C,E,a,C,M,C,C,G,E,O,C,K,ECNlD,IAKqBue,EALrB,e,E,EASI,SAAAA,IAAc5X,A,C,S,C,C,C,E,G,C,C,a,C,E,M,A,U,oC,C,EAAA,IAAA,CAAA4X,GACV,IAAI,CAACC,cAAL,EACJ,CAkHC,O,EAhHD6jB,CAAAA,CAAAv8B,IAAAA,iBAAAzC,MAGA,WAOI,IAAI,CAACob,eAAAA,CAAkB,EAAE,CAMzB,IAAI,CAACC,eAAAA,CAAkB,EAC3B,CAEA,EAAA,CAAA5Y,IAAAA,sBAAAzC,MAQA,SAAoBzC,CAAM,CAAEsG,CAAK,CAAEC,CAAG,EAC9BvG,GAAU,IAAI,CAAC8d,eAAAA,GACf,IAAI,CAACF,cAAL,GACA,IAAI,CAACE,eAAAA,CAAkB9d,GAO3B,IAHA,IAAI+d,EAAiB,EAAE,CACnBhe,EAAI,EAGJA,EAAI,IAAI,CAAC8d,eAAAA,CAAgB7d,MAAAA,EACzB,IAAI,CAAC6d,eAAe,CAAC9d,EAAE,CAAGuG,GAE1BvG,IASJ,IAHIA,EAAI,GAAK,GACTge,EAAe7J,IAAAA,CAAK5N,GAGpBvG,EAAI,IAAI,CAAC8d,eAAAA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AGJ,CAAC,EAAA,CAjE6BkD,EAAAsB,AAkB9Bqa,EAlB8B5b,SAAAA,CAAAmB,GAAAC,GAAAnB,EAkB9B2b,EAlB8Bxa,GAAA3H,OAAAC,cAAAA,CAkB9BkiB,EAlB8B,YAAA,CAAAvb,SAAA,CAAA,CAAA,GAiE7Bub,CAAA,GAwJJlhB,CAAAA,EAAAF,OAAAA,CAAAA,EAAAmF,OAAAjF,A,E,sB,C,E,E,K,a,O,c,C,E,a,C,M,C,C,G,E,O,CCnNc,SAAeqiB,CAAI,EAC9B,OAAO,WAAA,IAAA,IAAAC,EAAArf,UAAArC,MAAAA,CAAI2hB,EAAI,AAAArK,MAAAoK,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,CAAI,CAAAC,EAAA,CAAAvf,SAAA,CAAAuf,EAAJD,CAAI,MAAK,AAAA,CAAA,EAAAwgB,EAAAA,OAAAA,AAAAA,EAAkB,WAAA,OAAM1gB,EAAIrf,KAAAA,CAAA,KAAA,EAAIuf,EAAK,EAAC,CAC9D,EAZA,IAAAE,EAAA5d,AAA0D,SAAAE,CAAA,EAAA,OAAAA,GAAAA,EAAAC,UAAAA,CAAAD,EAAA,CAAAE,QAAAF,CAAA,CAAA,EAA1Dq9B,EAAA,yCAYCpiC,CAAAA,EAAAF,OAAAA,CAAAA,EAAAmF,OAAAjF,A,E,uB,C,E,K,a,O,c,C,E,a,C,M,C,C,G,E,O,CCDc,SAAe0iB,CAAM,EAIhC,OAHetc,KAAAA,IAAXsc,GACAA,CAAAA,EAAS,aADb,EAIIA,EACA1Y,KAAK2Y,MAAAA,GACAC,QAAAA,CAAS,IACTC,SAAAA,CAAU,EAEvB,EAAC7iB,EAAAF,OAAAA,CAAAA,EAAAmF,OAAAjF,A,E,sB,C,E,E,K,a,O,c,C,E,a,C,M,C,C,G,O,c,C,E,W,C,W,C,E,I,W,O,E,O,A,C,G,O,c,C,E,S,C,W,C,E,I,W,O,E,O,A,C,G,O,c,C,E,Q,C,W,C,E,I,W,O,E,O,A,C,G,O,c,C,E,W,C,W,C,E,I,W,O,E,O,A,C,G,O,c,C,E,Y,C,W,C,E,I,W,O,E,O,A,C,G,O,c,C,E,Q,C,W,C,E,I,W,O,E,O,A,C,G,O,c,C,E,Q,C,W,C,E,I,W,O,E,O,A,C,G,O,c,C,E,oB,C,W,C,E,I,W,O,E,O,A,C,G,O,c,C,E,M,C,W,C,E,I,W,O,E,O,A,C,G,O,c,C,E,M,C,W,C,E,I,W,O,E,O,A,C,G,O,c,C,E,e,C,W,C,E,I,W,O,E,O,A,C,G,O,c,C,E,wB,C,W,C,E,I,W,O,E,O,A,C,G,O,c,C,E,Q,C,W,C,E,I,W,O,E,O,A,C,G,O,c,C,E,kB,C,W,C,E,I,W,O,E,O,A,C,GCrBD,IAAA8E,EAAAD,EAAAu9B,EAAA,yBACAhjB,EAAAva,EAAAu9B,EAAA,sBACA/iB,EAAAxa,EAAAu9B,EAAA,sBACArf,EAAAle,EAAAu9B,EAAA,yBACA7iB,EAAA1a,EAAAu9B,EAAA,2BACAx9B,EAAAC,EAAAu9B,EAAA,wBACA3f,EAAA5d,EAAAu9B,EAAA,0CACAjf,EAAAte,EAAAu9B,EAAA,wBACAnf,EAAApe,EAAAu9B,EAAA,qCACA/e,EAAAxe,EAAAu9B,EAAA,gCACAlf,EAAAre,EAAAu9B,EAAA,wBACApf,EAAAne,EAAAu9B,EAAA,wBACA9e,EAAAze,EAAAu9B,EAAA,8BACAhf,EAAAve,EAAAu9B,EAAA,+BAA8D,SAAAv9B,EAAAE,CAAA,EAAA,OAAAA,GAAAA,EAAAC,UAAAA,CAAAD,EAAA,CAAAE,QAAAF,CAAA,CAAA,C,E,oB,C,E,K,a,O,c,C,E,a,C,M,C,C,G,E,O,CCN/C,SAAaoa,CAAM,EAC9B,IAAIoE,EAAU,CAAC/F,IAMf,OALAze,OAAO2B,IAAAA,CAAKye,GAAQ1W,OAAAA,CAAQ,SAAA9H,CAAC,EACrBwe,CAAM,CAACxe,EAAE,CAAG4iB,GACZA,CAAAA,EAAUpE,CAAM,CAACxe,EAAE,AAAFA,CAEzB,GACO4iB,CACX,EAACvjB,EAAAF,OAAAA,CAAAA,EAAAmF,OAAAjF,A,E,oB,C,E,K,a,O,c,C,E,a,C,M,C,C,G,E,O,CCRc,SAAamf,CAAM,EAC9B,IAAIqE,EAAWjd,OAAOiX,KAMtB,OALAze,OAAO2B,IAAAA,CAAKye,GAAQ1W,OAAAA,CAAQ,SAAA9H,CAAC,EACrBwe,CAAM,CAACxe,EAAE,CAAG6iB,GACZA,CAAAA,EAAWrE,CAAM,CAACxe,EAAE,AAAFA,CAE1B,GACO6iB,CACX,EAACxjB,EAAAF,OAAAA,CAAAA,EAAAmF,OAAAjF,A,E,yB,C,E,K,a,S,E,C,E,M,A,C,E,Y,O,Q,U,O,O,Q,C,S,C,E,O,O,C,E,S,C,E,O,G,Y,O,Q,E,W,G,Q,I,O,S,C,S,O,C,C,E,E,C,S,E,C,C,C,E,I,I,E,E,E,E,M,C,I,C,I,E,C,C,E,A,C,E,U,C,E,U,E,C,E,E,Y,C,C,E,U,G,C,E,Q,C,C,C,E,O,c,C,E,A,S,C,E,I,E,A,S,C,C,C,E,G,A,W,E,I,A,O,E,O,E,I,E,C,C,O,W,C,C,G,A,K,I,E,C,I,E,E,I,C,E,G,W,G,A,W,E,G,O,C,O,A,U,+C,C,M,A,C,A,W,E,O,M,E,E,E,E,U,M,A,W,E,G,E,O,E,E,E,G,E,E,C,C,O,c,C,E,a,C,M,C,C,G,E,O,C,K,ECRD,IAGqByS,EAHrB,e,E,EAOI,SAAAA,IAAc9L,A,C,S,C,C,C,E,G,C,C,a,C,E,M,A,U,oC,C,EAAA,IAAA,CAAA8L,GAMV,IAAI,CAACgR,uBAAAA,CAA0B,EAAE,CACjC,IAAI,CAACC,QAAAA,CAAW,IACpB,CAwHC,O,EAvHD2e,CAAAA,CAAAv8B,IAAAA,KAAAzC,MAOA,SAAG8Y,CAAK,CAAErE,CAAE,EAAE,IAAAjN,EAAA,IAAA,AACL,CAAA,IAAI,CAAC6Y,QAAAA,EACN,CAAA,IAAI,CAACA,QAAAA,CAAW,CAAC,CAAA,EAGrB,IAAIA,EAAW,IAAI,CAACA,QAAQ,CAACvH,EAAM,CAOnC,OANKuH,GACDA,CAAAA,EAAW,IAAI,CAACA,QAAQ,CAACvH,EAAM,CAAG,EAAE,AAAF,EAEtCuH,EAAS5O,IAAAA,CAAKgD,GAGP,CACH1Q,KAAM+U,EACNwH,SAAU7L,EACVoG,GAAI,SAACvf,CAAC,CAAEmZ,CAAE,EAAA,OAAKjN,EAAKqT,EAAAA,CAAGvf,EAAGmZ,EAAG,CACjC,CACJ,CAEA,EAAA,CAAAhS,IAAAA,KAAAzC,MAOA,SAAG8Y,CAAK,CAAErE,CAAE,EACR,GAAK,IAAI,CAAC4L,QAAAA,EAIV,IACI/iB,EADE+iB,EAAW,IAAI,CAACA,QAAQ,CAACvH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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-efd9416aca0917ea.js","node_modules/@parcel/runtime-js/lib/helpers/browser/js-loader.js","node_modules/@parcel/runtime-js/lib/helpers/cacheLoader.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-b21c93ea84094fcc.js","src/_js/script.js","node_modules/wavesurfer.js/dist/wavesurfer.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/webpack/universalModuleDefinition","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/drawer.canvasentry.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/drawer.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/drawer.multicanvas.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/mediaelement-webaudio.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/mediaelement.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/peakcache.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/absMax.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/clamp.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/fetch.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/frame.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/get-id.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/index.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/max.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/min.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/observer.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/orientation.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/prevent-click.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/request-animation-frame.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/silence-mode.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/style.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/wavesurfer.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/webaudio.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/node_modules/debounce/index.js","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/webpack/bootstrap","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/webpack/before-startup","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/webpack/startup","node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/webpack/after-startup","node_modules/photoswipe/dist/photoswipe-lightbox.esm.js","src/js/util/util.js","src/js/core/eventable.js","src/js/slide/placeholder.js","src/js/slide/content.js","src/js/util/viewport-size.js","src/js/slide/zoom-level.js","src/js/slide/loader.js","src/js/core/base.js","src/js/lightbox/lightbox.js"],"sourcesContent":["(() => {\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire17c5\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire17c5\"] = parcelRequire;\n}\nparcelRequire.register(\"kI8SP\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $f13ecebb1f16f955$export$6503ec6e8aabbaf, (v) => $f13ecebb1f16f955$export$6503ec6e8aabbaf = v);\n$parcel$export(module.exports, \"resolve\", () => $f13ecebb1f16f955$export$f7ad0328861e2f03, (v) => $f13ecebb1f16f955$export$f7ad0328861e2f03 = v);\nvar $f13ecebb1f16f955$export$6503ec6e8aabbaf;\nvar $f13ecebb1f16f955$export$f7ad0328861e2f03;\n\"use strict\";\nvar $f13ecebb1f16f955$var$mapping = {};\nfunction $f13ecebb1f16f955$var$register(pairs) {\n    var keys = Object.keys(pairs);\n    for(var i = 0; i < keys.length; i++)$f13ecebb1f16f955$var$mapping[keys[i]] = pairs[keys[i]];\n}\nfunction $f13ecebb1f16f955$var$resolve(id) {\n    var resolved = $f13ecebb1f16f955$var$mapping[id];\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return resolved;\n}\n$f13ecebb1f16f955$export$6503ec6e8aabbaf = $f13ecebb1f16f955$var$register;\n$f13ecebb1f16f955$export$f7ad0328861e2f03 = $f13ecebb1f16f955$var$resolve;\n\n});\n\nparcelRequire.register(\"fuROB\", function(module, exports) {\n\n\n\nmodule.exports = (parcelRequire(\"dNLwc\"))((parcelRequire(\"hIarR\")).getBundleURL(\"dlC1N\") + (parcelRequire(\"kI8SP\")).resolve(\"bUyT7\")).then(()=>parcelRequire(\"Mmk6f\"));\n\n});\nparcelRequire.register(\"dNLwc\", function(module, exports) {\n\"use strict\";\n\nvar $7lV8K = parcelRequire(\"7lV8K\");\nmodule.exports = $7lV8K(function(bundle) {\n    return new Promise(function(resolve, reject) {\n        // Don't insert the same script twice (e.g. if it was already in the HTML)\n        var existingScripts = document.getElementsByTagName(\"script\");\n        if ([].concat(existingScripts).some(function isCurrentBundle(script) {\n            return script.src === bundle;\n        })) {\n            resolve();\n            return;\n        }\n        var preloadLink = document.createElement(\"link\");\n        preloadLink.href = bundle;\n        preloadLink.rel = \"preload\";\n        preloadLink.as = \"script\";\n        document.head.appendChild(preloadLink);\n        var script = document.createElement(\"script\");\n        script.async = true;\n        script.type = \"text/javascript\";\n        script.src = bundle;\n        script.onerror = function(e) {\n            var error = new TypeError(\"Failed to fetch dynamically imported module: \".concat(bundle, \". Error: \").concat(e.message));\n            script.onerror = script.onload = null;\n            script.remove();\n            reject(error);\n        };\n        script.onload = function() {\n            script.onerror = script.onload = null;\n            resolve();\n        };\n        document.getElementsByTagName(\"head\")[0].appendChild(script);\n    });\n});\n\n});\nparcelRequire.register(\"7lV8K\", function(module, exports) {\n\"use strict\";\nvar $55a6d16921f8ab25$var$cachedBundles = {};\nvar $55a6d16921f8ab25$var$cachedPreloads = {};\nvar $55a6d16921f8ab25$var$cachedPrefetches = {};\nfunction $55a6d16921f8ab25$var$getCache(type) {\n    switch(type){\n        case \"preload\":\n            return $55a6d16921f8ab25$var$cachedPreloads;\n        case \"prefetch\":\n            return $55a6d16921f8ab25$var$cachedPrefetches;\n        default:\n            return $55a6d16921f8ab25$var$cachedBundles;\n    }\n}\nmodule.exports = function(loader, type) {\n    return function(bundle) {\n        var cache = $55a6d16921f8ab25$var$getCache(type);\n        if (cache[bundle]) return cache[bundle];\n        return cache[bundle] = loader.apply(null, arguments).catch(function(e) {\n            delete cache[bundle];\n            throw e;\n        });\n    };\n};\n\n});\n\n\nparcelRequire.register(\"hIarR\", function(module, exports) {\n\n$parcel$export(module.exports, \"getBundleURL\", () => $ce4ea6902f7a0721$export$bdfd709ae4826697, (v) => $ce4ea6902f7a0721$export$bdfd709ae4826697 = v);\nvar $ce4ea6902f7a0721$export$bdfd709ae4826697;\nvar $ce4ea6902f7a0721$export$c9e73fbda7da57b6;\nvar $ce4ea6902f7a0721$export$5a759dc7a1cfb72a;\n\"use strict\";\nvar $ce4ea6902f7a0721$var$bundleURL = {};\nfunction $ce4ea6902f7a0721$var$getBundleURLCached(id) {\n    var value = $ce4ea6902f7a0721$var$bundleURL[id];\n    if (!value) {\n        value = $ce4ea6902f7a0721$var$getBundleURL();\n        $ce4ea6902f7a0721$var$bundleURL[id] = value;\n    }\n    return value;\n}\nfunction $ce4ea6902f7a0721$var$getBundleURL() {\n    try {\n        throw new Error();\n    } catch (err) {\n        var matches = (\"\" + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n        if (matches) // The first two stack frames will be this function and getBundleURLCached.\n        // Use the 3rd one, which will be a runtime in the original bundle.\n        return $ce4ea6902f7a0721$var$getBaseURL(matches[2]);\n    }\n    return \"/\";\n}\nfunction $ce4ea6902f7a0721$var$getBaseURL(url) {\n    return (\"\" + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, \"$1\") + \"/\";\n}\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction $ce4ea6902f7a0721$var$getOrigin(url) {\n    var matches = (\"\" + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n    if (!matches) throw new Error(\"Origin not found\");\n    return matches[0];\n}\n$ce4ea6902f7a0721$export$bdfd709ae4826697 = $ce4ea6902f7a0721$var$getBundleURLCached;\n$ce4ea6902f7a0721$export$c9e73fbda7da57b6 = $ce4ea6902f7a0721$var$getBaseURL;\n$ce4ea6902f7a0721$export$5a759dc7a1cfb72a = $ce4ea6902f7a0721$var$getOrigin;\n\n});\n\n\nvar $e4383b50421ca2b5$exports = {};\n\n(parcelRequire(\"kI8SP\")).register(JSON.parse('{\"dlC1N\":\"script.js\",\"bUyT7\":\"photoswipe.esm.bee3cbe3.js\"}'));\n\nvar $87196e333c431a48$exports = {};\n/*!\n * wavesurfer.js 6.6.4 (2023-06-10)\n * https://wavesurfer-js.org\n * @license BSD-3-Clause\n */ (function webpackUniversalModuleDefinition(root, factory) {\n    $87196e333c431a48$exports = factory();\n})(self, ()=>{\n    return /******/ (()=>{\n        /******/ var __webpack_modules__ = {\n            /***/ \"./src/drawer.canvasentry.js\": /*!***********************************!*\\\n  !*** ./src/drawer.canvasentry.js ***!\n  \\***********************************/ /***/ (module1, exports, __webpack_require__)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = void 0;\n                var _style = _interopRequireDefault(__webpack_require__(/*! ./util/style */ \"./src/util/style.js\"));\n                var _getId = _interopRequireDefault(__webpack_require__(/*! ./util/get-id */ \"./src/util/get-id.js\"));\n                function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                        default: obj\n                    };\n                }\n                function _typeof(obj) {\n                    \"@babel/helpers - typeof\";\n                    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n                        return typeof obj;\n                    } : function(obj) {\n                        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    }, _typeof(obj);\n                }\n                function _classCallCheck(instance, Constructor) {\n                    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n                }\n                function _defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n                    }\n                }\n                function _createClass(Constructor, protoProps, staticProps) {\n                    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) _defineProperties(Constructor, staticProps);\n                    Object.defineProperty(Constructor, \"prototype\", {\n                        writable: false\n                    });\n                    return Constructor;\n                }\n                function _toPropertyKey(arg) {\n                    var key = _toPrimitive(arg, \"string\");\n                    return _typeof(key) === \"symbol\" ? key : String(key);\n                }\n                function _toPrimitive(input, hint) {\n                    if (_typeof(input) !== \"object\" || input === null) return input;\n                    var prim = input[Symbol.toPrimitive];\n                    if (prim !== undefined) {\n                        var res = prim.call(input, hint || \"default\");\n                        if (_typeof(res) !== \"object\") return res;\n                        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                    }\n                    return (hint === \"string\" ? String : Number)(input);\n                }\n                /**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */ var CanvasEntry = /*#__PURE__*/ function() {\n                    function CanvasEntry() {\n                        _classCallCheck(this, CanvasEntry);\n                        /**\n     * The wave node\n     *\n     * @type {HTMLCanvasElement}\n     */ this.wave = null;\n                        /**\n     * The wave canvas rendering context\n     *\n     * @type {CanvasRenderingContext2D}\n     */ this.waveCtx = null;\n                        /**\n     * The (optional) progress wave node\n     *\n     * @type {HTMLCanvasElement}\n     */ this.progress = null;\n                        /**\n     * The (optional) progress wave canvas rendering context\n     *\n     * @type {CanvasRenderingContext2D}\n     */ this.progressCtx = null;\n                        /**\n     * Start of the area the canvas should render, between 0 and 1\n     *\n     * @type {number}\n     */ this.start = 0;\n                        /**\n     * End of the area the canvas should render, between 0 and 1\n     *\n     * @type {number}\n     */ this.end = 1;\n                        /**\n     * Unique identifier for this entry\n     *\n     * @type {string}\n     */ this.id = (0, _getId.default)(typeof this.constructor.name !== \"undefined\" ? this.constructor.name.toLowerCase() + \"_\" : \"canvasentry_\");\n                        /**\n     * Canvas 2d context attributes\n     *\n     * @type {object}\n     */ this.canvasContextAttributes = {};\n                    }\n                    /**\n   * Store the wave canvas element and create the 2D rendering context\n   *\n   * @param {HTMLCanvasElement} element The wave `canvas` element.\n   */ _createClass(CanvasEntry, [\n                        {\n                            key: \"initWave\",\n                            value: function initWave(element) {\n                                this.wave = element;\n                                this.waveCtx = this.wave.getContext(\"2d\", this.canvasContextAttributes);\n                            }\n                        },\n                        {\n                            key: \"initProgress\",\n                            value: function initProgress(element) {\n                                this.progress = element;\n                                this.progressCtx = this.progress.getContext(\"2d\", this.canvasContextAttributes);\n                            }\n                        },\n                        {\n                            key: \"updateDimensions\",\n                            value: function updateDimensions(elementWidth, totalWidth, width, height) {\n                                // where the canvas starts and ends in the waveform, represented as a\n                                // decimal between 0 and 1\n                                this.start = this.wave.offsetLeft / totalWidth || 0;\n                                this.end = this.start + elementWidth / totalWidth;\n                                // set wave canvas dimensions\n                                this.wave.width = width;\n                                this.wave.height = height;\n                                var elementSize = {\n                                    width: elementWidth + \"px\"\n                                };\n                                (0, _style.default)(this.wave, elementSize);\n                                if (this.hasProgressCanvas) {\n                                    // set progress canvas dimensions\n                                    this.progress.width = width;\n                                    this.progress.height = height;\n                                    (0, _style.default)(this.progress, elementSize);\n                                }\n                            }\n                        },\n                        {\n                            key: \"clearWave\",\n                            value: function clearWave() {\n                                // wave\n                                this.waveCtx.clearRect(0, 0, this.waveCtx.canvas.width, this.waveCtx.canvas.height);\n                                // progress\n                                if (this.hasProgressCanvas) this.progressCtx.clearRect(0, 0, this.progressCtx.canvas.width, this.progressCtx.canvas.height);\n                            }\n                        },\n                        {\n                            key: \"setFillStyles\",\n                            value: function setFillStyles(waveColor, progressColor) {\n                                this.waveCtx.fillStyle = this.getFillStyle(this.waveCtx, waveColor);\n                                if (this.hasProgressCanvas) this.progressCtx.fillStyle = this.getFillStyle(this.progressCtx, progressColor);\n                            }\n                        },\n                        {\n                            key: \"getFillStyle\",\n                            value: function getFillStyle(ctx, color) {\n                                if (typeof color == \"string\" || color instanceof CanvasGradient) return color;\n                                var waveGradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\n                                color.forEach(function(value, index) {\n                                    return waveGradient.addColorStop(index / color.length, value);\n                                });\n                                return waveGradient;\n                            }\n                        },\n                        {\n                            key: \"applyCanvasTransforms\",\n                            value: function applyCanvasTransforms(vertical) {\n                                if (vertical) {\n                                    // Reflect the waveform across the line y = -x\n                                    this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n                                    if (this.hasProgressCanvas) this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n                                }\n                            }\n                        },\n                        {\n                            key: \"fillRects\",\n                            value: function fillRects(x, y, width, height, radius) {\n                                this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n                                if (this.hasProgressCanvas) this.fillRectToContext(this.progressCtx, x, y, width, height, radius);\n                            }\n                        },\n                        {\n                            key: \"fillRectToContext\",\n                            value: function fillRectToContext(ctx, x, y, width, height, radius) {\n                                if (!ctx) return;\n                                if (radius) this.drawRoundedRect(ctx, x, y, width, height, radius);\n                                else ctx.fillRect(x, y, width, height);\n                            }\n                        },\n                        {\n                            key: \"drawRoundedRect\",\n                            value: function drawRoundedRect(ctx, x, y, width, height, radius) {\n                                if (height === 0) return;\n                                // peaks are float values from -1 to 1. Use absolute height values in\n                                // order to correctly calculate rounded rectangle coordinates\n                                if (height < 0) {\n                                    height *= -1;\n                                    y -= height;\n                                }\n                                ctx.beginPath();\n                                ctx.moveTo(x + radius, y);\n                                ctx.lineTo(x + width - radius, y);\n                                ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n                                ctx.lineTo(x + width, y + height - radius);\n                                ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n                                ctx.lineTo(x + radius, y + height);\n                                ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n                                ctx.lineTo(x, y + radius);\n                                ctx.quadraticCurveTo(x, y, x + radius, y);\n                                ctx.closePath();\n                                ctx.fill();\n                            }\n                        },\n                        {\n                            key: \"drawLines\",\n                            value: function drawLines(peaks, absmax, halfH, offsetY, start, end) {\n                                this.drawLineToContext(this.waveCtx, peaks, absmax, halfH, offsetY, start, end);\n                                if (this.hasProgressCanvas) this.drawLineToContext(this.progressCtx, peaks, absmax, halfH, offsetY, start, end);\n                            }\n                        },\n                        {\n                            key: \"drawLineToContext\",\n                            value: function drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n                                if (!ctx) return;\n                                var length = peaks.length / 2;\n                                var first = Math.round(length * this.start);\n                                // use one more peak value to make sure we join peaks at ends -- unless,\n                                // of course, this is the last canvas\n                                var last = Math.round(length * this.end) + 1;\n                                var canvasStart = first;\n                                var canvasEnd = last;\n                                var scale = this.wave.width / (canvasEnd - canvasStart - 1);\n                                // optimization\n                                var halfOffset = halfH + offsetY;\n                                var absmaxHalf = absmax / halfH;\n                                ctx.beginPath();\n                                ctx.moveTo((canvasStart - first) * scale, halfOffset);\n                                ctx.lineTo((canvasStart - first) * scale, halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf));\n                                var i, peak, h;\n                                for(i = canvasStart; i < canvasEnd; i++){\n                                    peak = peaks[2 * i] || 0;\n                                    h = Math.round(peak / absmaxHalf);\n                                    ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n                                }\n                                // draw the bottom edge going backwards, to make a single\n                                // closed hull to fill\n                                var j = canvasEnd - 1;\n                                for(j; j >= canvasStart; j--){\n                                    peak = peaks[2 * j + 1] || 0;\n                                    h = Math.round(peak / absmaxHalf);\n                                    ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n                                }\n                                ctx.lineTo((canvasStart - first) * scale, halfOffset - Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf));\n                                ctx.closePath();\n                                ctx.fill();\n                            }\n                        },\n                        {\n                            key: \"destroy\",\n                            value: function destroy() {\n                                this.waveCtx = null;\n                                this.wave = null;\n                                this.progressCtx = null;\n                                this.progress = null;\n                            }\n                        },\n                        {\n                            key: \"getImage\",\n                            value: function getImage(format, quality, type) {\n                                var _this = this;\n                                if (type === \"blob\") return new Promise(function(resolve) {\n                                    _this.wave.toBlob(resolve, format, quality);\n                                });\n                                else if (type === \"dataURL\") return this.wave.toDataURL(format, quality);\n                            }\n                        }\n                    ]);\n                    return CanvasEntry;\n                }();\n                exports[\"default\"] = CanvasEntry;\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/drawer.js\": /*!***********************!*\\\n  !*** ./src/drawer.js ***!\n  \\***********************/ /***/ (module1, exports, __webpack_require__)=>{\n                \"use strict\";\n                function _typeof(obj) {\n                    \"@babel/helpers - typeof\";\n                    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n                        return typeof obj;\n                    } : function(obj) {\n                        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    }, _typeof(obj);\n                }\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = void 0;\n                var util = _interopRequireWildcard(__webpack_require__(/*! ./util */ \"./src/util/index.js\"));\n                function _getRequireWildcardCache(nodeInterop) {\n                    if (typeof WeakMap !== \"function\") return null;\n                    var cacheBabelInterop = new WeakMap();\n                    var cacheNodeInterop = new WeakMap();\n                    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n                        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n                    })(nodeInterop);\n                }\n                function _interopRequireWildcard(obj, nodeInterop) {\n                    if (!nodeInterop && obj && obj.__esModule) return obj;\n                    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") return {\n                        default: obj\n                    };\n                    var cache = _getRequireWildcardCache(nodeInterop);\n                    if (cache && cache.has(obj)) return cache.get(obj);\n                    var newObj = {};\n                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n                    for(var key in obj)if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n                        else newObj[key] = obj[key];\n                    }\n                    newObj.default = obj;\n                    if (cache) cache.set(obj, newObj);\n                    return newObj;\n                }\n                function _classCallCheck(instance, Constructor) {\n                    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n                }\n                function _defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n                    }\n                }\n                function _createClass(Constructor, protoProps, staticProps) {\n                    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) _defineProperties(Constructor, staticProps);\n                    Object.defineProperty(Constructor, \"prototype\", {\n                        writable: false\n                    });\n                    return Constructor;\n                }\n                function _toPropertyKey(arg) {\n                    var key = _toPrimitive(arg, \"string\");\n                    return _typeof(key) === \"symbol\" ? key : String(key);\n                }\n                function _toPrimitive(input, hint) {\n                    if (_typeof(input) !== \"object\" || input === null) return input;\n                    var prim = input[Symbol.toPrimitive];\n                    if (prim !== undefined) {\n                        var res = prim.call(input, hint || \"default\");\n                        if (_typeof(res) !== \"object\") return res;\n                        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                    }\n                    return (hint === \"string\" ? String : Number)(input);\n                }\n                function _inherits(subClass, superClass) {\n                    if (typeof superClass !== \"function\" && superClass !== null) throw new TypeError(\"Super expression must either be null or a function\");\n                    subClass.prototype = Object.create(superClass && superClass.prototype, {\n                        constructor: {\n                            value: subClass,\n                            writable: true,\n                            configurable: true\n                        }\n                    });\n                    Object.defineProperty(subClass, \"prototype\", {\n                        writable: false\n                    });\n                    if (superClass) _setPrototypeOf(subClass, superClass);\n                }\n                function _setPrototypeOf(o, p) {\n                    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n                        o.__proto__ = p;\n                        return o;\n                    };\n                    return _setPrototypeOf(o, p);\n                }\n                function _createSuper(Derived) {\n                    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n                    return function _createSuperInternal() {\n                        var Super = _getPrototypeOf(Derived), result;\n                        if (hasNativeReflectConstruct) {\n                            var NewTarget = _getPrototypeOf(this).constructor;\n                            result = Reflect.construct(Super, arguments, NewTarget);\n                        } else result = Super.apply(this, arguments);\n                        return _possibleConstructorReturn(this, result);\n                    };\n                }\n                function _possibleConstructorReturn(self1, call) {\n                    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) return call;\n                    else if (call !== void 0) throw new TypeError(\"Derived constructors may only return object or undefined\");\n                    return _assertThisInitialized(self1);\n                }\n                function _assertThisInitialized(self1) {\n                    if (self1 === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                    return self1;\n                }\n                function _isNativeReflectConstruct() {\n                    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n                    if (Reflect.construct.sham) return false;\n                    if (typeof Proxy === \"function\") return true;\n                    try {\n                        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n                        return true;\n                    } catch (e) {\n                        return false;\n                    }\n                }\n                function _getPrototypeOf(o) {\n                    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n                        return o.__proto__ || Object.getPrototypeOf(o);\n                    };\n                    return _getPrototypeOf(o);\n                }\n                /**\n * Parent class for renderers\n *\n * @extends {Observer}\n */ var Drawer = /*#__PURE__*/ function(_util$Observer) {\n                    _inherits(Drawer, _util$Observer);\n                    var _super = _createSuper(Drawer);\n                    /**\n   * @param {HTMLElement} container The container node of the wavesurfer instance\n   * @param {WavesurferParams} params The wavesurfer initialisation options\n   */ function Drawer(container, params) {\n                        var _this;\n                        _classCallCheck(this, Drawer);\n                        _this = _super.call(this);\n                        _this.container = util.withOrientation(container, params.vertical);\n                        /**\n     * @type {WavesurferParams}\n     */ _this.params = params;\n                        /**\n     * The width of the renderer\n     * @type {number}\n     */ _this.width = 0;\n                        /**\n     * The height of the renderer\n     * @type {number}\n     */ _this.height = params.height * _this.params.pixelRatio;\n                        _this.lastPos = 0;\n                        /**\n     * The `<wave>` element which is added to the container\n     * @type {HTMLElement}\n     */ _this.wrapper = null;\n                        return _this;\n                    }\n                    /**\n   * Alias of `util.style`\n   *\n   * @param {HTMLElement} el The element that the styles will be applied to\n   * @param {Object} styles The map of propName: attribute, both are used as-is\n   * @return {HTMLElement} el\n   */ _createClass(Drawer, [\n                        {\n                            key: \"style\",\n                            value: function style(el, styles) {\n                                return util.style(el, styles);\n                            }\n                        },\n                        {\n                            key: \"createWrapper\",\n                            value: function createWrapper() {\n                                this.wrapper = util.withOrientation(this.container.appendChild(document.createElement(\"wave\")), this.params.vertical);\n                                this.style(this.wrapper, {\n                                    display: \"block\",\n                                    position: \"relative\",\n                                    userSelect: \"none\",\n                                    webkitUserSelect: \"none\",\n                                    height: this.params.height + \"px\"\n                                });\n                                if (this.params.fillParent || this.params.scrollParent) this.style(this.wrapper, {\n                                    width: \"100%\",\n                                    cursor: this.params.hideCursor ? \"none\" : \"auto\",\n                                    overflowX: this.params.hideScrollbar ? \"hidden\" : \"auto\",\n                                    overflowY: \"hidden\"\n                                });\n                                this.setupWrapperEvents();\n                            }\n                        },\n                        {\n                            key: \"handleEvent\",\n                            value: function handleEvent(e, noPrevent) {\n                                !noPrevent && e.preventDefault();\n                                var clientX = util.withOrientation(e.targetTouches ? e.targetTouches[0] : e, this.params.vertical).clientX;\n                                var bbox = this.wrapper.getBoundingClientRect();\n                                var nominalWidth = this.width;\n                                var parentWidth = this.getWidth();\n                                var progressPixels = this.getProgressPixels(bbox, clientX);\n                                var progress;\n                                if (!this.params.fillParent && nominalWidth < parentWidth) progress = progressPixels * (this.params.pixelRatio / nominalWidth) || 0;\n                                else progress = (progressPixels + this.wrapper.scrollLeft) / this.wrapper.scrollWidth || 0;\n                                return util.clamp(progress, 0, 1);\n                            }\n                        },\n                        {\n                            key: \"getProgressPixels\",\n                            value: function getProgressPixels(wrapperBbox, clientX) {\n                                if (this.params.rtl) return wrapperBbox.right - clientX;\n                                else return clientX - wrapperBbox.left;\n                            }\n                        },\n                        {\n                            key: \"setupWrapperEvents\",\n                            value: function setupWrapperEvents() {\n                                var _this2 = this;\n                                this.wrapper.addEventListener(\"click\", function(e) {\n                                    var orientedEvent = util.withOrientation(e, _this2.params.vertical);\n                                    var scrollbarHeight = _this2.wrapper.offsetHeight - _this2.wrapper.clientHeight;\n                                    if (scrollbarHeight !== 0) {\n                                        // scrollbar is visible.  Check if click was on it\n                                        var bbox = _this2.wrapper.getBoundingClientRect();\n                                        if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) // ignore mousedown as it was on the scrollbar\n                                        return;\n                                    }\n                                    if (_this2.params.interact) _this2.fireEvent(\"click\", e, _this2.handleEvent(e));\n                                });\n                                this.wrapper.addEventListener(\"dblclick\", function(e) {\n                                    if (_this2.params.interact) _this2.fireEvent(\"dblclick\", e, _this2.handleEvent(e));\n                                });\n                                this.wrapper.addEventListener(\"scroll\", function(e) {\n                                    return _this2.fireEvent(\"scroll\", e);\n                                });\n                            }\n                        },\n                        {\n                            key: \"drawPeaks\",\n                            value: function drawPeaks(peaks, length, start, end) {\n                                if (!this.setWidth(length)) this.clearWave();\n                                this.params.barWidth ? this.drawBars(peaks, 0, start, end) : this.drawWave(peaks, 0, start, end);\n                            }\n                        },\n                        {\n                            key: \"resetScroll\",\n                            value: function resetScroll() {\n                                if (this.wrapper !== null) this.wrapper.scrollLeft = 0;\n                            }\n                        },\n                        {\n                            key: \"recenter\",\n                            value: function recenter(percent) {\n                                var position = this.wrapper.scrollWidth * percent;\n                                this.recenterOnPosition(position, true);\n                            }\n                        },\n                        {\n                            key: \"recenterOnPosition\",\n                            value: function recenterOnPosition(position, immediate) {\n                                var scrollLeft = this.wrapper.scrollLeft;\n                                var half = ~~(this.wrapper.clientWidth / 2);\n                                var maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n                                var target = position - half;\n                                var offset = target - scrollLeft;\n                                if (maxScroll == 0) // no need to continue if scrollbar is not there\n                                return;\n                                // if the cursor is currently visible...\n                                if (!immediate && -half <= offset && offset < half) {\n                                    // set rate at which waveform is centered\n                                    var rate = this.params.autoCenterRate;\n                                    // make rate depend on width of view and length of waveform\n                                    rate /= half;\n                                    rate *= maxScroll;\n                                    offset = Math.max(-rate, Math.min(rate, offset));\n                                    target = scrollLeft + offset;\n                                }\n                                // limit target to valid range (0 to maxScroll)\n                                target = Math.max(0, Math.min(maxScroll, target));\n                                // no use attempting to scroll if we're not moving\n                                if (target != scrollLeft) this.wrapper.scrollLeft = target;\n                            }\n                        },\n                        {\n                            key: \"getScrollX\",\n                            value: function getScrollX() {\n                                var x = 0;\n                                if (this.wrapper) {\n                                    var pixelRatio = this.params.pixelRatio;\n                                    x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n                                    // In cases of elastic scroll (safari with mouse wheel) you can\n                                    // scroll beyond the limits of the container\n                                    // Calculate and floor the scrollable extent to make sure an out\n                                    // of bounds value is not returned\n                                    // Ticket #1312\n                                    if (this.params.scrollParent) {\n                                        var maxScroll = ~~(this.wrapper.scrollWidth * pixelRatio - this.getWidth());\n                                        x = Math.min(maxScroll, Math.max(0, x));\n                                    }\n                                }\n                                return x;\n                            }\n                        },\n                        {\n                            key: \"getWidth\",\n                            value: function getWidth() {\n                                return Math.round(this.container.clientWidth * this.params.pixelRatio);\n                            }\n                        },\n                        {\n                            key: \"setWidth\",\n                            value: function setWidth(width) {\n                                if (this.width == width) return false;\n                                this.width = width;\n                                if (this.params.fillParent || this.params.scrollParent) this.style(this.wrapper, {\n                                    width: \"\"\n                                });\n                                else {\n                                    var newWidth = ~~(this.width / this.params.pixelRatio) + \"px\";\n                                    this.style(this.wrapper, {\n                                        width: newWidth\n                                    });\n                                }\n                                this.updateSize();\n                                return true;\n                            }\n                        },\n                        {\n                            key: \"setHeight\",\n                            value: function setHeight(height) {\n                                if (height == this.height) return false;\n                                this.height = height;\n                                this.style(this.wrapper, {\n                                    height: ~~(this.height / this.params.pixelRatio) + \"px\"\n                                });\n                                this.updateSize();\n                                return true;\n                            }\n                        },\n                        {\n                            key: \"progress\",\n                            value: function progress(_progress) {\n                                var minPxDelta = 1 / this.params.pixelRatio;\n                                var pos = Math.round(_progress * this.width) * minPxDelta;\n                                if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n                                    this.lastPos = pos;\n                                    if (this.params.scrollParent && this.params.autoCenter) {\n                                        var newPos = ~~(this.wrapper.scrollWidth * _progress);\n                                        this.recenterOnPosition(newPos, this.params.autoCenterImmediately);\n                                    }\n                                    this.updateProgress(pos);\n                                }\n                            }\n                        },\n                        {\n                            key: \"destroy\",\n                            value: function destroy() {\n                                this.unAll();\n                                if (this.wrapper) {\n                                    if (this.wrapper.parentNode == this.container.domElement) this.container.removeChild(this.wrapper.domElement);\n                                    this.wrapper = null;\n                                }\n                            }\n                        },\n                        {\n                            key: \"updateCursor\",\n                            value: function updateCursor() {}\n                        },\n                        {\n                            key: \"updateSize\",\n                            value: function updateSize() {}\n                        },\n                        {\n                            key: \"drawBars\",\n                            value: function drawBars(peaks, channelIndex, start, end) {}\n                        },\n                        {\n                            key: \"drawWave\",\n                            value: function drawWave(peaks, channelIndex, start, end) {}\n                        },\n                        {\n                            key: \"clearWave\",\n                            value: function clearWave() {}\n                        },\n                        {\n                            key: \"updateProgress\",\n                            value: function updateProgress(position) {}\n                        }\n                    ]);\n                    return Drawer;\n                }(util.Observer);\n                exports[\"default\"] = Drawer;\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/drawer.multicanvas.js\": /*!***********************************!*\\\n  !*** ./src/drawer.multicanvas.js ***!\n  \\***********************************/ /***/ (module1, exports, __webpack_require__)=>{\n                \"use strict\";\n                function _typeof(obj) {\n                    \"@babel/helpers - typeof\";\n                    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n                        return typeof obj;\n                    } : function(obj) {\n                        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    }, _typeof(obj);\n                }\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = void 0;\n                var _drawer = _interopRequireDefault(__webpack_require__(/*! ./drawer */ \"./src/drawer.js\"));\n                var util = _interopRequireWildcard(__webpack_require__(/*! ./util */ \"./src/util/index.js\"));\n                var _drawer2 = _interopRequireDefault(__webpack_require__(/*! ./drawer.canvasentry */ \"./src/drawer.canvasentry.js\"));\n                function _getRequireWildcardCache(nodeInterop) {\n                    if (typeof WeakMap !== \"function\") return null;\n                    var cacheBabelInterop = new WeakMap();\n                    var cacheNodeInterop = new WeakMap();\n                    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n                        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n                    })(nodeInterop);\n                }\n                function _interopRequireWildcard(obj, nodeInterop) {\n                    if (!nodeInterop && obj && obj.__esModule) return obj;\n                    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") return {\n                        default: obj\n                    };\n                    var cache = _getRequireWildcardCache(nodeInterop);\n                    if (cache && cache.has(obj)) return cache.get(obj);\n                    var newObj = {};\n                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n                    for(var key in obj)if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n                        else newObj[key] = obj[key];\n                    }\n                    newObj.default = obj;\n                    if (cache) cache.set(obj, newObj);\n                    return newObj;\n                }\n                function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                        default: obj\n                    };\n                }\n                function _classCallCheck(instance, Constructor) {\n                    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n                }\n                function _defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n                    }\n                }\n                function _createClass(Constructor, protoProps, staticProps) {\n                    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) _defineProperties(Constructor, staticProps);\n                    Object.defineProperty(Constructor, \"prototype\", {\n                        writable: false\n                    });\n                    return Constructor;\n                }\n                function _toPropertyKey(arg) {\n                    var key = _toPrimitive(arg, \"string\");\n                    return _typeof(key) === \"symbol\" ? key : String(key);\n                }\n                function _toPrimitive(input, hint) {\n                    if (_typeof(input) !== \"object\" || input === null) return input;\n                    var prim = input[Symbol.toPrimitive];\n                    if (prim !== undefined) {\n                        var res = prim.call(input, hint || \"default\");\n                        if (_typeof(res) !== \"object\") return res;\n                        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                    }\n                    return (hint === \"string\" ? String : Number)(input);\n                }\n                function _inherits(subClass, superClass) {\n                    if (typeof superClass !== \"function\" && superClass !== null) throw new TypeError(\"Super expression must either be null or a function\");\n                    subClass.prototype = Object.create(superClass && superClass.prototype, {\n                        constructor: {\n                            value: subClass,\n                            writable: true,\n                            configurable: true\n                        }\n                    });\n                    Object.defineProperty(subClass, \"prototype\", {\n                        writable: false\n                    });\n                    if (superClass) _setPrototypeOf(subClass, superClass);\n                }\n                function _setPrototypeOf(o, p) {\n                    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n                        o.__proto__ = p;\n                        return o;\n                    };\n                    return _setPrototypeOf(o, p);\n                }\n                function _createSuper(Derived) {\n                    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n                    return function _createSuperInternal() {\n                        var Super = _getPrototypeOf(Derived), result;\n                        if (hasNativeReflectConstruct) {\n                            var NewTarget = _getPrototypeOf(this).constructor;\n                            result = Reflect.construct(Super, arguments, NewTarget);\n                        } else result = Super.apply(this, arguments);\n                        return _possibleConstructorReturn(this, result);\n                    };\n                }\n                function _possibleConstructorReturn(self1, call) {\n                    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) return call;\n                    else if (call !== void 0) throw new TypeError(\"Derived constructors may only return object or undefined\");\n                    return _assertThisInitialized(self1);\n                }\n                function _assertThisInitialized(self1) {\n                    if (self1 === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                    return self1;\n                }\n                function _isNativeReflectConstruct() {\n                    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n                    if (Reflect.construct.sham) return false;\n                    if (typeof Proxy === \"function\") return true;\n                    try {\n                        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n                        return true;\n                    } catch (e) {\n                        return false;\n                    }\n                }\n                function _getPrototypeOf(o) {\n                    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n                        return o.__proto__ || Object.getPrototypeOf(o);\n                    };\n                    return _getPrototypeOf(o);\n                }\n                /**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */ var MultiCanvas = /*#__PURE__*/ function(_Drawer) {\n                    _inherits(MultiCanvas, _Drawer);\n                    var _super = _createSuper(MultiCanvas);\n                    /**\n   * @param {HTMLElement} container The container node of the wavesurfer instance\n   * @param {WavesurferParams} params The wavesurfer initialisation options\n   */ function MultiCanvas(container, params) {\n                        var _this;\n                        _classCallCheck(this, MultiCanvas);\n                        _this = _super.call(this, container, params);\n                        /**\n     * @type {number}\n     */ _this.maxCanvasWidth = params.maxCanvasWidth;\n                        /**\n     * @type {number}\n     */ _this.maxCanvasElementWidth = Math.round(params.maxCanvasWidth / params.pixelRatio);\n                        /**\n     * Whether or not the progress wave is rendered. If the `waveColor`\n     * and `progressColor` are the same color it is not.\n     *\n     * @type {boolean}\n     */ _this.hasProgressCanvas = params.waveColor != params.progressColor;\n                        /**\n     * @type {number}\n     */ _this.halfPixel = 0.5 / params.pixelRatio;\n                        /**\n     * List of `CanvasEntry` instances.\n     *\n     * @type {Array}\n     */ _this.canvases = [];\n                        /**\n     * @type {HTMLElement}\n     */ _this.progressWave = null;\n                        /**\n     * Class used to generate entries.\n     *\n     * @type {function}\n     */ _this.EntryClass = _drawer2.default;\n                        /**\n     * Canvas 2d context attributes.\n     *\n     * @type {object}\n     */ _this.canvasContextAttributes = params.drawingContextAttributes;\n                        /**\n     * Overlap added between entries to prevent vertical white stripes\n     * between `canvas` elements.\n     *\n     * @type {number}\n     */ _this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n                        /**\n     * The radius of the wave bars. Makes bars rounded\n     *\n     * @type {number}\n     */ _this.barRadius = params.barRadius || 0;\n                        /**\n     * Whether to render the waveform vertically. Defaults to false.\n     *\n     * @type {boolean}\n     */ _this.vertical = params.vertical;\n                        return _this;\n                    }\n                    /**\n   * Initialize the drawer\n   */ _createClass(MultiCanvas, [\n                        {\n                            key: \"init\",\n                            value: function init() {\n                                this.createWrapper();\n                                this.createElements();\n                            }\n                        },\n                        {\n                            key: \"createElements\",\n                            value: function createElements() {\n                                this.progressWave = util.withOrientation(this.wrapper.appendChild(document.createElement(\"wave\")), this.params.vertical);\n                                this.style(this.progressWave, {\n                                    position: \"absolute\",\n                                    zIndex: 3,\n                                    left: 0,\n                                    top: 0,\n                                    bottom: 0,\n                                    overflow: \"hidden\",\n                                    width: \"0\",\n                                    display: \"none\",\n                                    boxSizing: \"border-box\",\n                                    borderRightStyle: \"solid\",\n                                    pointerEvents: \"none\"\n                                });\n                                this.addCanvas();\n                                this.updateCursor();\n                            }\n                        },\n                        {\n                            key: \"updateCursor\",\n                            value: function updateCursor() {\n                                this.style(this.progressWave, {\n                                    borderRightWidth: this.params.cursorWidth + \"px\",\n                                    borderRightColor: this.params.cursorColor\n                                });\n                            }\n                        },\n                        {\n                            key: \"updateSize\",\n                            value: function updateSize() {\n                                var _this2 = this;\n                                var totalWidth = Math.round(this.width / this.params.pixelRatio);\n                                var requiredCanvases = Math.ceil(totalWidth / (this.maxCanvasElementWidth + this.overlap));\n                                // add required canvases\n                                while(this.canvases.length < requiredCanvases)this.addCanvas();\n                                // remove older existing canvases, if any\n                                while(this.canvases.length > requiredCanvases)this.removeCanvas();\n                                var canvasWidth = this.maxCanvasWidth + this.overlap;\n                                var lastCanvas = this.canvases.length - 1;\n                                this.canvases.forEach(function(entry, i) {\n                                    if (i == lastCanvas) canvasWidth = _this2.width - _this2.maxCanvasWidth * lastCanvas;\n                                    _this2.updateDimensions(entry, canvasWidth, _this2.height);\n                                    entry.clearWave();\n                                });\n                            }\n                        },\n                        {\n                            key: \"addCanvas\",\n                            value: function addCanvas() {\n                                var entry = new this.EntryClass();\n                                entry.canvasContextAttributes = this.canvasContextAttributes;\n                                entry.hasProgressCanvas = this.hasProgressCanvas;\n                                entry.halfPixel = this.halfPixel;\n                                var leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n                                // wave\n                                var wave = util.withOrientation(this.wrapper.appendChild(document.createElement(\"canvas\")), this.params.vertical);\n                                this.style(wave, {\n                                    position: \"absolute\",\n                                    zIndex: 2,\n                                    left: leftOffset + \"px\",\n                                    top: 0,\n                                    bottom: 0,\n                                    height: \"100%\",\n                                    pointerEvents: \"none\"\n                                });\n                                entry.initWave(wave);\n                                // progress\n                                if (this.hasProgressCanvas) {\n                                    var progress = util.withOrientation(this.progressWave.appendChild(document.createElement(\"canvas\")), this.params.vertical);\n                                    this.style(progress, {\n                                        position: \"absolute\",\n                                        left: leftOffset + \"px\",\n                                        top: 0,\n                                        bottom: 0,\n                                        height: \"100%\"\n                                    });\n                                    entry.initProgress(progress);\n                                }\n                                this.canvases.push(entry);\n                            }\n                        },\n                        {\n                            key: \"removeCanvas\",\n                            value: function removeCanvas() {\n                                var lastEntry = this.canvases[this.canvases.length - 1];\n                                // wave\n                                lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\n                                // progress\n                                if (this.hasProgressCanvas) lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n                                // cleanup\n                                if (lastEntry) {\n                                    lastEntry.destroy();\n                                    lastEntry = null;\n                                }\n                                this.canvases.pop();\n                            }\n                        },\n                        {\n                            key: \"updateDimensions\",\n                            value: function updateDimensions(entry, width, height) {\n                                var elementWidth = Math.round(width / this.params.pixelRatio);\n                                var totalWidth = Math.round(this.width / this.params.pixelRatio);\n                                // update canvas dimensions\n                                entry.updateDimensions(elementWidth, totalWidth, width, height);\n                                // style element\n                                this.style(this.progressWave, {\n                                    display: \"block\"\n                                });\n                            }\n                        },\n                        {\n                            key: \"clearWave\",\n                            value: function clearWave() {\n                                var _this3 = this;\n                                util.frame(function() {\n                                    _this3.canvases.forEach(function(entry) {\n                                        return entry.clearWave();\n                                    });\n                                })();\n                            }\n                        },\n                        {\n                            key: \"drawBars\",\n                            value: function drawBars(peaks, channelIndex, start, end) {\n                                var _this4 = this;\n                                return this.prepareDraw(peaks, channelIndex, start, end, function(_ref) {\n                                    var absmax = _ref.absmax, hasMinVals = _ref.hasMinVals, height = _ref.height, offsetY = _ref.offsetY, halfH = _ref.halfH, peaks = _ref.peaks, ch = _ref.channelIndex;\n                                    // if drawBars was called within ws.empty we don't pass a start and\n                                    // don't want anything to happen\n                                    if (start === undefined) return;\n                                    // Skip every other value if there are negatives.\n                                    var peakIndexScale = hasMinVals ? 2 : 1;\n                                    var length = peaks.length / peakIndexScale;\n                                    var bar = _this4.params.barWidth * _this4.params.pixelRatio;\n                                    var gap = _this4.params.barGap === null ? Math.max(_this4.params.pixelRatio, ~~(bar / 2)) : Math.max(_this4.params.pixelRatio, _this4.params.barGap * _this4.params.pixelRatio);\n                                    var step = bar + gap;\n                                    var scale = length / _this4.width;\n                                    var first = start;\n                                    var last = end;\n                                    var peakIndex = first;\n                                    for(peakIndex; peakIndex < last; peakIndex += step){\n                                        // search for the highest peak in the range this bar falls into\n                                        var peak = 0;\n                                        var peakIndexRange = Math.floor(peakIndex * scale) * peakIndexScale; // start index\n                                        var peakIndexEnd = Math.floor((peakIndex + step) * scale) * peakIndexScale;\n                                        do {\n                                            // do..while makes sure at least one peak is always evaluated\n                                            var newPeak = Math.abs(peaks[peakIndexRange]); // for arrays starting with negative values\n                                            if (newPeak > peak) peak = newPeak; // higher\n                                            peakIndexRange += peakIndexScale; // skip every other value for negatives\n                                        }while (peakIndexRange < peakIndexEnd);\n                                        // calculate the height of this bar according to the highest peak found\n                                        var h = Math.round(peak / absmax * halfH);\n                                        // raise the bar height to the specified minimum height\n                                        // Math.max is used to replace any value smaller than barMinHeight (not just 0) with barMinHeight\n                                        if (_this4.params.barMinHeight) h = Math.max(h, _this4.params.barMinHeight);\n                                        _this4.fillRect(peakIndex + _this4.halfPixel, halfH - h + offsetY, bar + _this4.halfPixel, h * 2, _this4.barRadius, ch);\n                                    }\n                                });\n                            }\n                        },\n                        {\n                            key: \"drawWave\",\n                            value: function drawWave(peaks, channelIndex, start, end) {\n                                var _this5 = this;\n                                return this.prepareDraw(peaks, channelIndex, start, end, function(_ref2) {\n                                    var absmax = _ref2.absmax, hasMinVals = _ref2.hasMinVals, height = _ref2.height, offsetY = _ref2.offsetY, halfH = _ref2.halfH, peaks = _ref2.peaks, channelIndex = _ref2.channelIndex;\n                                    if (!hasMinVals) {\n                                        var reflectedPeaks = [];\n                                        var len = peaks.length;\n                                        var i = 0;\n                                        for(i; i < len; i++){\n                                            reflectedPeaks[2 * i] = peaks[i];\n                                            reflectedPeaks[2 * i + 1] = -peaks[i];\n                                        }\n                                        peaks = reflectedPeaks;\n                                    }\n                                    // if drawWave was called within ws.empty we don't pass a start and\n                                    // end and simply want a flat line\n                                    if (start !== undefined) _this5.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                                    // always draw a median line\n                                    _this5.fillRect(0, halfH + offsetY - _this5.halfPixel, _this5.width, _this5.halfPixel, _this5.barRadius, channelIndex);\n                                });\n                            }\n                        },\n                        {\n                            key: \"drawLine\",\n                            value: function drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n                                var _this6 = this;\n                                var _ref3 = this.params.splitChannelsOptions.channelColors[channelIndex] || {}, waveColor = _ref3.waveColor, progressColor = _ref3.progressColor;\n                                this.canvases.forEach(function(entry, i) {\n                                    _this6.setFillStyles(entry, waveColor, progressColor);\n                                    _this6.applyCanvasTransforms(entry, _this6.params.vertical);\n                                    entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n                                });\n                            }\n                        },\n                        {\n                            key: \"fillRect\",\n                            value: function fillRect(x, y, width, height, radius, channelIndex) {\n                                var startCanvas = Math.floor(x / this.maxCanvasWidth);\n                                var endCanvas = Math.min(Math.ceil((x + width) / this.maxCanvasWidth) + 1, this.canvases.length);\n                                var i = startCanvas;\n                                for(i; i < endCanvas; i++){\n                                    var entry = this.canvases[i];\n                                    var leftOffset = i * this.maxCanvasWidth;\n                                    var intersection = {\n                                        x1: Math.max(x, i * this.maxCanvasWidth),\n                                        y1: y,\n                                        x2: Math.min(x + width, i * this.maxCanvasWidth + entry.wave.width),\n                                        y2: y + height\n                                    };\n                                    if (intersection.x1 < intersection.x2) {\n                                        var _ref4 = this.params.splitChannelsOptions.channelColors[channelIndex] || {}, waveColor = _ref4.waveColor, progressColor = _ref4.progressColor;\n                                        this.setFillStyles(entry, waveColor, progressColor);\n                                        this.applyCanvasTransforms(entry, this.params.vertical);\n                                        entry.fillRects(intersection.x1 - leftOffset, intersection.y1, intersection.x2 - intersection.x1, intersection.y2 - intersection.y1, radius);\n                                    }\n                                }\n                            }\n                        },\n                        {\n                            key: \"hideChannel\",\n                            value: function hideChannel(channelIndex) {\n                                return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n                            }\n                        },\n                        {\n                            key: \"prepareDraw\",\n                            value: function prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n                                var _this7 = this;\n                                return util.frame(function() {\n                                    // Split channels and call this function with the channelIndex set\n                                    if (peaks[0] instanceof Array) {\n                                        var channels = peaks;\n                                        if (_this7.params.splitChannels) {\n                                            var filteredChannels = channels.filter(function(c, i) {\n                                                return !_this7.hideChannel(i);\n                                            });\n                                            if (!_this7.params.splitChannelsOptions.overlay) _this7.setHeight(Math.max(filteredChannels.length, 1) * _this7.params.height * _this7.params.pixelRatio);\n                                            var overallAbsMax;\n                                            if (_this7.params.splitChannelsOptions && _this7.params.splitChannelsOptions.relativeNormalization) // calculate maximum peak across channels to use for normalization\n                                            overallAbsMax = util.max(channels.map(function(channelPeaks) {\n                                                return util.absMax(channelPeaks);\n                                            }));\n                                            return channels.forEach(function(channelPeaks, i) {\n                                                return _this7.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax);\n                                            });\n                                        }\n                                        peaks = channels[0];\n                                    }\n                                    // Return and do not draw channel peaks if hidden.\n                                    if (_this7.hideChannel(channelIndex)) return;\n                                    // calculate maximum modulation value, either from the barHeight\n                                    // parameter or if normalize=true from the largest value in the peak\n                                    // set\n                                    var absmax = 1 / _this7.params.barHeight;\n                                    if (_this7.params.normalize) absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n                                    // Bar wave draws the bottom only as a reflection of the top,\n                                    // so we don't need negative values\n                                    var hasMinVals = [].some.call(peaks, function(val) {\n                                        return val < 0;\n                                    });\n                                    var height = _this7.params.height * _this7.params.pixelRatio;\n                                    var halfH = height / 2;\n                                    var offsetY = height * drawIndex || 0;\n                                    // Override offsetY if overlay is true\n                                    if (_this7.params.splitChannelsOptions && _this7.params.splitChannelsOptions.overlay) offsetY = 0;\n                                    return fn({\n                                        absmax: absmax,\n                                        hasMinVals: hasMinVals,\n                                        height: height,\n                                        offsetY: offsetY,\n                                        halfH: halfH,\n                                        peaks: peaks,\n                                        channelIndex: channelIndex\n                                    });\n                                })();\n                            }\n                        },\n                        {\n                            key: \"setFillStyles\",\n                            value: function setFillStyles(entry) {\n                                var waveColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.waveColor;\n                                var progressColor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.params.progressColor;\n                                entry.setFillStyles(waveColor, progressColor);\n                            }\n                        },\n                        {\n                            key: \"applyCanvasTransforms\",\n                            value: function applyCanvasTransforms(entry) {\n                                var vertical = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                                entry.applyCanvasTransforms(vertical);\n                            }\n                        },\n                        {\n                            key: \"getImage\",\n                            value: function getImage(format, quality, type) {\n                                if (type === \"blob\") return Promise.all(this.canvases.map(function(entry) {\n                                    return entry.getImage(format, quality, type);\n                                }));\n                                else if (type === \"dataURL\") {\n                                    var images = this.canvases.map(function(entry) {\n                                        return entry.getImage(format, quality, type);\n                                    });\n                                    return images.length > 1 ? images : images[0];\n                                }\n                            }\n                        },\n                        {\n                            key: \"updateProgress\",\n                            value: function updateProgress(position) {\n                                this.style(this.progressWave, {\n                                    width: position + \"px\"\n                                });\n                            }\n                        }\n                    ]);\n                    return MultiCanvas;\n                }(_drawer.default);\n                exports[\"default\"] = MultiCanvas;\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/mediaelement-webaudio.js\": /*!**************************************!*\\\n  !*** ./src/mediaelement-webaudio.js ***!\n  \\**************************************/ /***/ (module1, exports, __webpack_require__)=>{\n                \"use strict\";\n                function _typeof(obj) {\n                    \"@babel/helpers - typeof\";\n                    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n                        return typeof obj;\n                    } : function(obj) {\n                        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    }, _typeof(obj);\n                }\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = void 0;\n                var _mediaelement = _interopRequireDefault(__webpack_require__(/*! ./mediaelement */ \"./src/mediaelement.js\"));\n                function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                        default: obj\n                    };\n                }\n                function _classCallCheck(instance, Constructor) {\n                    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n                }\n                function _defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n                    }\n                }\n                function _createClass(Constructor, protoProps, staticProps) {\n                    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) _defineProperties(Constructor, staticProps);\n                    Object.defineProperty(Constructor, \"prototype\", {\n                        writable: false\n                    });\n                    return Constructor;\n                }\n                function _toPropertyKey(arg) {\n                    var key = _toPrimitive(arg, \"string\");\n                    return _typeof(key) === \"symbol\" ? key : String(key);\n                }\n                function _toPrimitive(input, hint) {\n                    if (_typeof(input) !== \"object\" || input === null) return input;\n                    var prim = input[Symbol.toPrimitive];\n                    if (prim !== undefined) {\n                        var res = prim.call(input, hint || \"default\");\n                        if (_typeof(res) !== \"object\") return res;\n                        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                    }\n                    return (hint === \"string\" ? String : Number)(input);\n                }\n                function _get() {\n                    if (typeof Reflect !== \"undefined\" && Reflect.get) _get = Reflect.get.bind();\n                    else _get = function _get(target, property, receiver) {\n                        var base = _superPropBase(target, property);\n                        if (!base) return;\n                        var desc = Object.getOwnPropertyDescriptor(base, property);\n                        if (desc.get) return desc.get.call(arguments.length < 3 ? target : receiver);\n                        return desc.value;\n                    };\n                    return _get.apply(this, arguments);\n                }\n                function _superPropBase(object, property) {\n                    while(!Object.prototype.hasOwnProperty.call(object, property)){\n                        object = _getPrototypeOf(object);\n                        if (object === null) break;\n                    }\n                    return object;\n                }\n                function _inherits(subClass, superClass) {\n                    if (typeof superClass !== \"function\" && superClass !== null) throw new TypeError(\"Super expression must either be null or a function\");\n                    subClass.prototype = Object.create(superClass && superClass.prototype, {\n                        constructor: {\n                            value: subClass,\n                            writable: true,\n                            configurable: true\n                        }\n                    });\n                    Object.defineProperty(subClass, \"prototype\", {\n                        writable: false\n                    });\n                    if (superClass) _setPrototypeOf(subClass, superClass);\n                }\n                function _setPrototypeOf(o, p) {\n                    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n                        o.__proto__ = p;\n                        return o;\n                    };\n                    return _setPrototypeOf(o, p);\n                }\n                function _createSuper(Derived) {\n                    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n                    return function _createSuperInternal() {\n                        var Super = _getPrototypeOf(Derived), result;\n                        if (hasNativeReflectConstruct) {\n                            var NewTarget = _getPrototypeOf(this).constructor;\n                            result = Reflect.construct(Super, arguments, NewTarget);\n                        } else result = Super.apply(this, arguments);\n                        return _possibleConstructorReturn(this, result);\n                    };\n                }\n                function _possibleConstructorReturn(self1, call) {\n                    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) return call;\n                    else if (call !== void 0) throw new TypeError(\"Derived constructors may only return object or undefined\");\n                    return _assertThisInitialized(self1);\n                }\n                function _assertThisInitialized(self1) {\n                    if (self1 === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                    return self1;\n                }\n                function _isNativeReflectConstruct() {\n                    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n                    if (Reflect.construct.sham) return false;\n                    if (typeof Proxy === \"function\") return true;\n                    try {\n                        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n                        return true;\n                    } catch (e) {\n                        return false;\n                    }\n                }\n                function _getPrototypeOf(o) {\n                    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n                        return o.__proto__ || Object.getPrototypeOf(o);\n                    };\n                    return _getPrototypeOf(o);\n                }\n                /**\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\n * of the webaudio API.\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\n *\n * @since 3.2.0\n */ var MediaElementWebAudio = /*#__PURE__*/ function(_MediaElement) {\n                    _inherits(MediaElementWebAudio, _MediaElement);\n                    var _super = _createSuper(MediaElementWebAudio);\n                    /**\n   * Construct the backend\n   *\n   * @param {WavesurferParams} params Wavesurfer parameters\n   */ function MediaElementWebAudio(params) {\n                        var _this;\n                        _classCallCheck(this, MediaElementWebAudio);\n                        _this = _super.call(this, params);\n                        /** @private */ _this.params = params;\n                        /** @private */ _this.sourceMediaElement = null;\n                        return _this;\n                    }\n                    /**\n   * Initialise the backend, called in `wavesurfer.createBackend()`\n   */ _createClass(MediaElementWebAudio, [\n                        {\n                            key: \"init\",\n                            value: function init() {\n                                this.setPlaybackRate(this.params.audioRate);\n                                this.createTimer();\n                                this.createVolumeNode();\n                                this.createScriptNode();\n                                this.createAnalyserNode();\n                            }\n                        },\n                        {\n                            key: \"_load\",\n                            value: function _load(media, peaks, preload) {\n                                _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"_load\", this).call(this, media, peaks, preload);\n                                this.createMediaElementSource(media);\n                            }\n                        },\n                        {\n                            key: \"createMediaElementSource\",\n                            value: function createMediaElementSource(mediaElement) {\n                                this.sourceMediaElement = this.ac.createMediaElementSource(mediaElement);\n                                this.sourceMediaElement.connect(this.analyser);\n                            }\n                        },\n                        {\n                            key: \"play\",\n                            value: function play(start, end) {\n                                this.resumeAudioContext();\n                                return _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"play\", this).call(this, start, end);\n                            }\n                        },\n                        {\n                            key: \"destroy\",\n                            value: function destroy() {\n                                _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"destroy\", this).call(this);\n                                this.destroyWebAudio();\n                            }\n                        }\n                    ]);\n                    return MediaElementWebAudio;\n                }(_mediaelement.default);\n                exports[\"default\"] = MediaElementWebAudio;\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/mediaelement.js\": /*!*****************************!*\\\n  !*** ./src/mediaelement.js ***!\n  \\*****************************/ /***/ (module1, exports, __webpack_require__)=>{\n                \"use strict\";\n                function _typeof(obj) {\n                    \"@babel/helpers - typeof\";\n                    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n                        return typeof obj;\n                    } : function(obj) {\n                        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    }, _typeof(obj);\n                }\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = void 0;\n                var _webaudio = _interopRequireDefault(__webpack_require__(/*! ./webaudio */ \"./src/webaudio.js\"));\n                var util = _interopRequireWildcard(__webpack_require__(/*! ./util */ \"./src/util/index.js\"));\n                function _getRequireWildcardCache(nodeInterop) {\n                    if (typeof WeakMap !== \"function\") return null;\n                    var cacheBabelInterop = new WeakMap();\n                    var cacheNodeInterop = new WeakMap();\n                    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n                        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n                    })(nodeInterop);\n                }\n                function _interopRequireWildcard(obj, nodeInterop) {\n                    if (!nodeInterop && obj && obj.__esModule) return obj;\n                    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") return {\n                        default: obj\n                    };\n                    var cache = _getRequireWildcardCache(nodeInterop);\n                    if (cache && cache.has(obj)) return cache.get(obj);\n                    var newObj = {};\n                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n                    for(var key in obj)if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n                        else newObj[key] = obj[key];\n                    }\n                    newObj.default = obj;\n                    if (cache) cache.set(obj, newObj);\n                    return newObj;\n                }\n                function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                        default: obj\n                    };\n                }\n                function _classCallCheck(instance, Constructor) {\n                    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n                }\n                function _defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n                    }\n                }\n                function _createClass(Constructor, protoProps, staticProps) {\n                    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) _defineProperties(Constructor, staticProps);\n                    Object.defineProperty(Constructor, \"prototype\", {\n                        writable: false\n                    });\n                    return Constructor;\n                }\n                function _toPropertyKey(arg) {\n                    var key = _toPrimitive(arg, \"string\");\n                    return _typeof(key) === \"symbol\" ? key : String(key);\n                }\n                function _toPrimitive(input, hint) {\n                    if (_typeof(input) !== \"object\" || input === null) return input;\n                    var prim = input[Symbol.toPrimitive];\n                    if (prim !== undefined) {\n                        var res = prim.call(input, hint || \"default\");\n                        if (_typeof(res) !== \"object\") return res;\n                        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                    }\n                    return (hint === \"string\" ? String : Number)(input);\n                }\n                function _get() {\n                    if (typeof Reflect !== \"undefined\" && Reflect.get) _get = Reflect.get.bind();\n                    else _get = function _get(target, property, receiver) {\n                        var base = _superPropBase(target, property);\n                        if (!base) return;\n                        var desc = Object.getOwnPropertyDescriptor(base, property);\n                        if (desc.get) return desc.get.call(arguments.length < 3 ? target : receiver);\n                        return desc.value;\n                    };\n                    return _get.apply(this, arguments);\n                }\n                function _superPropBase(object, property) {\n                    while(!Object.prototype.hasOwnProperty.call(object, property)){\n                        object = _getPrototypeOf(object);\n                        if (object === null) break;\n                    }\n                    return object;\n                }\n                function _inherits(subClass, superClass) {\n                    if (typeof superClass !== \"function\" && superClass !== null) throw new TypeError(\"Super expression must either be null or a function\");\n                    subClass.prototype = Object.create(superClass && superClass.prototype, {\n                        constructor: {\n                            value: subClass,\n                            writable: true,\n                            configurable: true\n                        }\n                    });\n                    Object.defineProperty(subClass, \"prototype\", {\n                        writable: false\n                    });\n                    if (superClass) _setPrototypeOf(subClass, superClass);\n                }\n                function _setPrototypeOf(o, p) {\n                    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n                        o.__proto__ = p;\n                        return o;\n                    };\n                    return _setPrototypeOf(o, p);\n                }\n                function _createSuper(Derived) {\n                    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n                    return function _createSuperInternal() {\n                        var Super = _getPrototypeOf(Derived), result;\n                        if (hasNativeReflectConstruct) {\n                            var NewTarget = _getPrototypeOf(this).constructor;\n                            result = Reflect.construct(Super, arguments, NewTarget);\n                        } else result = Super.apply(this, arguments);\n                        return _possibleConstructorReturn(this, result);\n                    };\n                }\n                function _possibleConstructorReturn(self1, call) {\n                    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) return call;\n                    else if (call !== void 0) throw new TypeError(\"Derived constructors may only return object or undefined\");\n                    return _assertThisInitialized(self1);\n                }\n                function _assertThisInitialized(self1) {\n                    if (self1 === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                    return self1;\n                }\n                function _isNativeReflectConstruct() {\n                    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n                    if (Reflect.construct.sham) return false;\n                    if (typeof Proxy === \"function\") return true;\n                    try {\n                        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n                        return true;\n                    } catch (e) {\n                        return false;\n                    }\n                }\n                function _getPrototypeOf(o) {\n                    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n                        return o.__proto__ || Object.getPrototypeOf(o);\n                    };\n                    return _getPrototypeOf(o);\n                }\n                /**\n * MediaElement backend\n */ var MediaElement = /*#__PURE__*/ function(_WebAudio) {\n                    _inherits(MediaElement, _WebAudio);\n                    var _super = _createSuper(MediaElement);\n                    /**\n   * Construct the backend\n   *\n   * @param {WavesurferParams} params Wavesurfer parameters\n   */ function MediaElement(params) {\n                        var _this;\n                        _classCallCheck(this, MediaElement);\n                        _this = _super.call(this, params);\n                        /** @private */ _this.params = params;\n                        /**\n     * Initially a dummy media element to catch errors. Once `_load` is\n     * called, this will contain the actual `HTMLMediaElement`.\n     * @private\n     */ _this.media = {\n                            currentTime: 0,\n                            duration: 0,\n                            paused: true,\n                            playbackRate: 1,\n                            play: function play() {},\n                            pause: function pause() {},\n                            volume: 0\n                        };\n                        /** @private */ _this.mediaType = params.mediaType.toLowerCase();\n                        /** @private */ _this.elementPosition = params.elementPosition;\n                        /** @private */ _this.peaks = null;\n                        /** @private */ _this.playbackRate = 1;\n                        /** @private */ _this.volume = 1;\n                        /** @private */ _this.isMuted = false;\n                        /** @private */ _this.buffer = null;\n                        /** @private */ _this.onPlayEnd = null;\n                        /** @private */ _this.mediaListeners = {};\n                        return _this;\n                    }\n                    /**\n   * Initialise the backend, called in `wavesurfer.createBackend()`\n   */ _createClass(MediaElement, [\n                        {\n                            key: \"init\",\n                            value: function init() {\n                                this.setPlaybackRate(this.params.audioRate);\n                                this.createTimer();\n                            }\n                        },\n                        {\n                            key: \"_setupMediaListeners\",\n                            value: function _setupMediaListeners() {\n                                var _this2 = this;\n                                this.mediaListeners.error = function() {\n                                    _this2.fireEvent(\"error\", \"Error loading media element\");\n                                };\n                                this.mediaListeners.waiting = function() {\n                                    _this2.fireEvent(\"waiting\");\n                                };\n                                this.mediaListeners.canplay = function() {\n                                    _this2.fireEvent(\"canplay\");\n                                };\n                                this.mediaListeners.ended = function() {\n                                    _this2.fireEvent(\"finish\");\n                                };\n                                // listen to and relay play, pause and seeked events to enable\n                                // playback control from the external media element\n                                this.mediaListeners.play = function() {\n                                    _this2.fireEvent(\"play\");\n                                };\n                                this.mediaListeners.pause = function() {\n                                    _this2.fireEvent(\"pause\");\n                                };\n                                this.mediaListeners.seeked = function(event) {\n                                    _this2.fireEvent(\"seek\");\n                                };\n                                this.mediaListeners.volumechange = function(event) {\n                                    _this2.isMuted = _this2.media.muted;\n                                    if (_this2.isMuted) _this2.volume = 0;\n                                    else _this2.volume = _this2.media.volume;\n                                    _this2.fireEvent(\"volume\");\n                                };\n                                // reset event listeners\n                                Object.keys(this.mediaListeners).forEach(function(id) {\n                                    _this2.media.removeEventListener(id, _this2.mediaListeners[id]);\n                                    _this2.media.addEventListener(id, _this2.mediaListeners[id]);\n                                });\n                            }\n                        },\n                        {\n                            key: \"createTimer\",\n                            value: function createTimer() {\n                                var _this3 = this;\n                                var onAudioProcess = function onAudioProcess() {\n                                    if (_this3.isPaused()) return;\n                                    _this3.fireEvent(\"audioprocess\", _this3.getCurrentTime());\n                                    // Call again in the next frame\n                                    util.frame(onAudioProcess)();\n                                };\n                                this.on(\"play\", onAudioProcess);\n                                // Update the progress one more time to prevent it from being stuck in\n                                // case of lower framerates\n                                this.on(\"pause\", function() {\n                                    _this3.fireEvent(\"audioprocess\", _this3.getCurrentTime());\n                                });\n                            }\n                        },\n                        {\n                            key: \"load\",\n                            value: function load(url, container, peaks, preload) {\n                                var media = document.createElement(this.mediaType);\n                                media.controls = this.params.mediaControls;\n                                media.autoplay = this.params.autoplay || false;\n                                media.preload = preload == null ? \"auto\" : preload;\n                                media.src = url;\n                                media.style.width = \"100%\";\n                                var prevMedia = container.querySelector(this.mediaType);\n                                if (prevMedia) container.removeChild(prevMedia);\n                                container.appendChild(media);\n                                this._load(media, peaks, preload);\n                            }\n                        },\n                        {\n                            key: \"loadElt\",\n                            value: function loadElt(elt, peaks) {\n                                elt.controls = this.params.mediaControls;\n                                elt.autoplay = this.params.autoplay || false;\n                                this._load(elt, peaks, elt.preload);\n                            }\n                        },\n                        {\n                            key: \"_load\",\n                            value: function _load(media, peaks, preload) {\n                                // verify media element is valid\n                                if (!(media instanceof HTMLMediaElement) || typeof media.addEventListener === \"undefined\") throw new Error(\"media parameter is not a valid media element\");\n                                // load must be called manually on iOS, otherwise peaks won't draw\n                                // until a user interaction triggers load --> 'ready' event\n                                //\n                                // note that we avoid calling media.load here when given peaks and preload == 'none'\n                                // as this almost always triggers some browser fetch of the media.\n                                if (typeof media.load == \"function\" && !(peaks && preload == \"none\")) // Resets the media element and restarts the media resource. Any\n                                // pending events are discarded. How much media data is fetched is\n                                // still affected by the preload attribute.\n                                media.load();\n                                this.media = media;\n                                this._setupMediaListeners();\n                                this.peaks = peaks;\n                                this.onPlayEnd = null;\n                                this.buffer = null;\n                                this.isMuted = media.muted;\n                                this.setPlaybackRate(this.playbackRate);\n                                this.setVolume(this.volume);\n                            }\n                        },\n                        {\n                            key: \"isPaused\",\n                            value: function isPaused() {\n                                return !this.media || this.media.paused;\n                            }\n                        },\n                        {\n                            key: \"getDuration\",\n                            value: function getDuration() {\n                                if (this.explicitDuration) return this.explicitDuration;\n                                var duration = (this.buffer || this.media).duration;\n                                if (duration >= Infinity) // streaming audio\n                                duration = this.media.seekable.end(0);\n                                return duration;\n                            }\n                        },\n                        {\n                            key: \"getCurrentTime\",\n                            value: function getCurrentTime() {\n                                return this.media && this.media.currentTime;\n                            }\n                        },\n                        {\n                            key: \"getPlayedPercents\",\n                            value: function getPlayedPercents() {\n                                return this.getCurrentTime() / this.getDuration() || 0;\n                            }\n                        },\n                        {\n                            key: \"getPlaybackRate\",\n                            value: function getPlaybackRate() {\n                                return this.playbackRate || this.media.playbackRate;\n                            }\n                        },\n                        {\n                            key: \"setPlaybackRate\",\n                            value: function setPlaybackRate(value) {\n                                this.playbackRate = value || 1;\n                                this.media.playbackRate = this.playbackRate;\n                            }\n                        },\n                        {\n                            key: \"seekTo\",\n                            value: function seekTo(start) {\n                                if (start != null && !isNaN(start)) this.media.currentTime = start;\n                                this.clearPlayEnd();\n                            }\n                        },\n                        {\n                            key: \"play\",\n                            value: function play(start, end) {\n                                this.seekTo(start);\n                                var promise = this.media.play();\n                                end && this.setPlayEnd(end);\n                                return promise;\n                            }\n                        },\n                        {\n                            key: \"pause\",\n                            value: function pause() {\n                                var promise;\n                                if (this.media) promise = this.media.pause();\n                                this.clearPlayEnd();\n                                return promise;\n                            }\n                        },\n                        {\n                            key: \"setPlayEnd\",\n                            value: function setPlayEnd(end) {\n                                var _this4 = this;\n                                this.clearPlayEnd();\n                                this._onPlayEnd = function(time) {\n                                    if (time >= end) {\n                                        _this4.pause();\n                                        _this4.seekTo(end);\n                                    }\n                                };\n                                this.on(\"audioprocess\", this._onPlayEnd);\n                            }\n                        },\n                        {\n                            key: \"clearPlayEnd\",\n                            value: function clearPlayEnd() {\n                                if (this._onPlayEnd) {\n                                    this.un(\"audioprocess\", this._onPlayEnd);\n                                    this._onPlayEnd = null;\n                                }\n                            }\n                        },\n                        {\n                            key: \"getPeaks\",\n                            value: function getPeaks(length, first, last) {\n                                if (this.buffer) return _get(_getPrototypeOf(MediaElement.prototype), \"getPeaks\", this).call(this, length, first, last);\n                                return this.peaks || [];\n                            }\n                        },\n                        {\n                            key: \"setSinkId\",\n                            value: function setSinkId(deviceId) {\n                                if (deviceId) {\n                                    if (!this.media.setSinkId) return Promise.reject(new Error(\"setSinkId is not supported in your browser\"));\n                                    return this.media.setSinkId(deviceId);\n                                }\n                                return Promise.reject(new Error(\"Invalid deviceId: \" + deviceId));\n                            }\n                        },\n                        {\n                            key: \"getVolume\",\n                            value: function getVolume() {\n                                return this.volume;\n                            }\n                        },\n                        {\n                            key: \"setVolume\",\n                            value: function setVolume(value) {\n                                this.volume = value;\n                                // no need to change when it's already at that volume\n                                if (this.media.volume !== this.volume) this.media.volume = this.volume;\n                            }\n                        },\n                        {\n                            key: \"setMute\",\n                            value: function setMute(muted) {\n                                // This causes a volume change to be emitted too through the\n                                // volumechange event listener.\n                                this.isMuted = this.media.muted = muted;\n                            }\n                        },\n                        {\n                            key: \"destroy\",\n                            value: function destroy() {\n                                var _this5 = this;\n                                this.pause();\n                                this.unAll();\n                                this.destroyed = true;\n                                // cleanup media event listeners\n                                Object.keys(this.mediaListeners).forEach(function(id) {\n                                    if (_this5.media) _this5.media.removeEventListener(id, _this5.mediaListeners[id]);\n                                });\n                                if (this.params.removeMediaElementOnDestroy && this.media && this.media.parentNode) this.media.parentNode.removeChild(this.media);\n                                this.media = null;\n                            }\n                        }\n                    ]);\n                    return MediaElement;\n                }(_webaudio.default);\n                exports[\"default\"] = MediaElement;\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/peakcache.js\": /*!**************************!*\\\n  !*** ./src/peakcache.js ***!\n  \\**************************/ /***/ (module1, exports)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = void 0;\n                function _typeof(obj) {\n                    \"@babel/helpers - typeof\";\n                    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n                        return typeof obj;\n                    } : function(obj) {\n                        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    }, _typeof(obj);\n                }\n                function _classCallCheck(instance, Constructor) {\n                    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n                }\n                function _defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n                    }\n                }\n                function _createClass(Constructor, protoProps, staticProps) {\n                    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) _defineProperties(Constructor, staticProps);\n                    Object.defineProperty(Constructor, \"prototype\", {\n                        writable: false\n                    });\n                    return Constructor;\n                }\n                function _toPropertyKey(arg) {\n                    var key = _toPrimitive(arg, \"string\");\n                    return _typeof(key) === \"symbol\" ? key : String(key);\n                }\n                function _toPrimitive(input, hint) {\n                    if (_typeof(input) !== \"object\" || input === null) return input;\n                    var prim = input[Symbol.toPrimitive];\n                    if (prim !== undefined) {\n                        var res = prim.call(input, hint || \"default\");\n                        if (_typeof(res) !== \"object\") return res;\n                        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                    }\n                    return (hint === \"string\" ? String : Number)(input);\n                }\n                /**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */ var PeakCache = /*#__PURE__*/ function() {\n                    /**\n   * Instantiate cache\n   */ function PeakCache() {\n                        _classCallCheck(this, PeakCache);\n                        this.clearPeakCache();\n                    }\n                    /**\n   * Empty the cache\n   */ _createClass(PeakCache, [\n                        {\n                            key: \"clearPeakCache\",\n                            value: function clearPeakCache() {\n                                /**\n       * Flat array with entries that are always in pairs to mark the\n       * beginning and end of each subrange.  This is a convenience so we can\n       * iterate over the pairs for easy set difference operations.\n       * @private\n       */ this.peakCacheRanges = [];\n                                /**\n       * Length of the entire cachable region, used for resetting the cache\n       * when this changes (zoom events, for instance).\n       * @private\n       */ this.peakCacheLength = -1;\n                            }\n                        },\n                        {\n                            key: \"addRangeToPeakCache\",\n                            value: function addRangeToPeakCache(length, start, end) {\n                                if (length != this.peakCacheLength) {\n                                    this.clearPeakCache();\n                                    this.peakCacheLength = length;\n                                }\n                                // Return ranges that weren't in the cache before the call.\n                                var uncachedRanges = [];\n                                var i = 0;\n                                // Skip ranges before the current start.\n                                while(i < this.peakCacheRanges.length && this.peakCacheRanges[i] < start)i++;\n                                // If |i| is even, |start| falls after an existing range.  Otherwise,\n                                // |start| falls between an existing range, and the uncached region\n                                // starts when we encounter the next node in |peakCacheRanges| or\n                                // |end|, whichever comes first.\n                                if (i % 2 == 0) uncachedRanges.push(start);\n                                while(i < this.peakCacheRanges.length && this.peakCacheRanges[i] <= end){\n                                    uncachedRanges.push(this.peakCacheRanges[i]);\n                                    i++;\n                                }\n                                // If |i| is even, |end| is after all existing ranges.\n                                if (i % 2 == 0) uncachedRanges.push(end);\n                                // Filter out the 0-length ranges.\n                                uncachedRanges = uncachedRanges.filter(function(item, pos, arr) {\n                                    if (pos == 0) return item != arr[pos + 1];\n                                    else if (pos == arr.length - 1) return item != arr[pos - 1];\n                                    return item != arr[pos - 1] && item != arr[pos + 1];\n                                });\n                                // Merge the two ranges together, uncachedRanges will either contain\n                                // wholly new points, or duplicates of points in peakCacheRanges.  If\n                                // duplicates are detected, remove both and extend the range.\n                                this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n                                this.peakCacheRanges = this.peakCacheRanges.sort(function(a, b) {\n                                    return a - b;\n                                }).filter(function(item, pos, arr) {\n                                    if (pos == 0) return item != arr[pos + 1];\n                                    else if (pos == arr.length - 1) return item != arr[pos - 1];\n                                    return item != arr[pos - 1] && item != arr[pos + 1];\n                                });\n                                // Push the uncached ranges into an array of arrays for ease of\n                                // iteration in the functions that call this.\n                                var uncachedRangePairs = [];\n                                for(i = 0; i < uncachedRanges.length; i += 2)uncachedRangePairs.push([\n                                    uncachedRanges[i],\n                                    uncachedRanges[i + 1]\n                                ]);\n                                return uncachedRangePairs;\n                            }\n                        },\n                        {\n                            key: \"getCacheRanges\",\n                            value: function getCacheRanges() {\n                                var peakCacheRangePairs = [];\n                                var i;\n                                for(i = 0; i < this.peakCacheRanges.length; i += 2)peakCacheRangePairs.push([\n                                    this.peakCacheRanges[i],\n                                    this.peakCacheRanges[i + 1]\n                                ]);\n                                return peakCacheRangePairs;\n                            }\n                        }\n                    ]);\n                    return PeakCache;\n                }();\n                exports[\"default\"] = PeakCache;\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/util/absMax.js\": /*!****************************!*\\\n  !*** ./src/util/absMax.js ***!\n  \\****************************/ /***/ (module1, exports, __webpack_require__)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = absMax;\n                var _max = _interopRequireDefault(__webpack_require__(/*! ./max */ \"./src/util/max.js\"));\n                var _min = _interopRequireDefault(__webpack_require__(/*! ./min */ \"./src/util/min.js\"));\n                function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                        default: obj\n                    };\n                }\n                /**\r\n * Get the largest absolute value in an array\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n * @since 4.3.0\r\n */ function absMax(values) {\n                    var max = (0, _max.default)(values);\n                    var min = (0, _min.default)(values);\n                    return -min > max ? -min : max;\n                }\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/util/clamp.js\": /*!***************************!*\\\n  !*** ./src/util/clamp.js ***!\n  \\***************************/ /***/ (module1, exports)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = clamp;\n                /**\n * Returns a number limited to the given range.\n *\n * @param {number} val The number to be limited to a range\n * @param {number} min The lower boundary of the limit range\n * @param {number} max The upper boundary of the limit range\n * @returns {number} A number in the range [min, max]\n */ function clamp(val, min, max) {\n                    return Math.min(Math.max(min, val), max);\n                }\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/util/fetch.js\": /*!***************************!*\\\n  !*** ./src/util/fetch.js ***!\n  \\***************************/ /***/ (module1, exports, __webpack_require__)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = fetchFile;\n                var _observer = _interopRequireDefault(__webpack_require__(/*! ./observer */ \"./src/util/observer.js\"));\n                function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                        default: obj\n                    };\n                }\n                function _typeof(obj) {\n                    \"@babel/helpers - typeof\";\n                    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n                        return typeof obj;\n                    } : function(obj) {\n                        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    }, _typeof(obj);\n                }\n                function _classCallCheck(instance, Constructor) {\n                    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n                }\n                function _defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n                    }\n                }\n                function _createClass(Constructor, protoProps, staticProps) {\n                    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) _defineProperties(Constructor, staticProps);\n                    Object.defineProperty(Constructor, \"prototype\", {\n                        writable: false\n                    });\n                    return Constructor;\n                }\n                function _toPropertyKey(arg) {\n                    var key = _toPrimitive(arg, \"string\");\n                    return _typeof(key) === \"symbol\" ? key : String(key);\n                }\n                function _toPrimitive(input, hint) {\n                    if (_typeof(input) !== \"object\" || input === null) return input;\n                    var prim = input[Symbol.toPrimitive];\n                    if (prim !== undefined) {\n                        var res = prim.call(input, hint || \"default\");\n                        if (_typeof(res) !== \"object\") return res;\n                        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                    }\n                    return (hint === \"string\" ? String : Number)(input);\n                }\n                var ProgressHandler = /*#__PURE__*/ function() {\n                    /**\n   * Instantiate ProgressHandler\n   *\n   * @param {Observer} instance The `fetchFile` observer instance.\n   * @param {Number} contentLength Content length.\n   * @param {Response} response Response object.\n   */ function ProgressHandler(instance, contentLength, response) {\n                        _classCallCheck(this, ProgressHandler);\n                        this.instance = instance;\n                        this.instance._reader = response.body.getReader();\n                        this.total = parseInt(contentLength, 10);\n                        this.loaded = 0;\n                    }\n                    /**\n   * A method that is called once, immediately after the `ReadableStream``\n   * is constructed.\n   *\n   * @param {ReadableStreamDefaultController} controller Controller instance\n   *     used to control the stream.\n   */ _createClass(ProgressHandler, [\n                        {\n                            key: \"start\",\n                            value: function start(controller) {\n                                var _this = this;\n                                var read = function read() {\n                                    // instance._reader.read() returns a promise that resolves\n                                    // when a value has been received\n                                    _this.instance._reader.read().then(function(_ref) {\n                                        var done = _ref.done, value = _ref.value;\n                                        // result objects contain two properties:\n                                        // done  - true if the stream has already given you all its data.\n                                        // value - some data. Always undefined when done is true.\n                                        if (done) {\n                                            // ensure onProgress called when content-length=0\n                                            if (_this.total === 0) _this.instance.onProgress.call(_this.instance, {\n                                                loaded: _this.loaded,\n                                                total: _this.total,\n                                                lengthComputable: false\n                                            });\n                                            // no more data needs to be consumed, close the stream\n                                            controller.close();\n                                            return;\n                                        }\n                                        _this.loaded += value.byteLength;\n                                        _this.instance.onProgress.call(_this.instance, {\n                                            loaded: _this.loaded,\n                                            total: _this.total,\n                                            lengthComputable: !(_this.total === 0)\n                                        });\n                                        // enqueue the next data chunk into our target stream\n                                        controller.enqueue(value);\n                                        read();\n                                    }).catch(function(error) {\n                                        controller.error(error);\n                                    });\n                                };\n                                read();\n                            }\n                        }\n                    ]);\n                    return ProgressHandler;\n                }();\n                /**\n * Load a file using `fetch`.\n *\n * @param {object} options Request options to use. See example below.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     url: undefined,\n *     method: 'GET',\n *     mode: 'cors',\n *     credentials: 'same-origin',\n *     cache: 'default',\n *     responseType: 'json',\n *     requestHeaders: [],\n *     redirect: 'follow',\n *     referrer: 'client'\n * };\n *\n * // override some options\n * options.url = '../media/demo.wav';\n\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n * options.responseType = 'arraybuffer';\n *\n * // make fetch call\n * let request = util.fetchFile(options);\n *\n * // listen for events\n * request.on('progress', e => {\n *     console.log('progress', e);\n * });\n *\n * request.on('success', data => {\n *     console.log('success!', data);\n * });\n *\n * request.on('error', e => {\n *     console.warn('fetchFile error: ', e);\n * });\n */ function fetchFile(options) {\n                    if (!options) throw new Error(\"fetch options missing\");\n                    else if (!options.url) throw new Error(\"fetch url missing\");\n                    var instance = new _observer.default();\n                    var fetchHeaders = new Headers();\n                    var fetchRequest = new Request(options.url);\n                    // add ability to abort\n                    instance.controller = new AbortController();\n                    // check if headers have to be added\n                    if (options && options.requestHeaders) // add custom request headers\n                    options.requestHeaders.forEach(function(header) {\n                        fetchHeaders.append(header.key, header.value);\n                    });\n                    // parse fetch options\n                    var responseType = options.responseType || \"json\";\n                    var fetchOptions = {\n                        method: options.method || \"GET\",\n                        headers: fetchHeaders,\n                        mode: options.mode || \"cors\",\n                        credentials: options.credentials || \"same-origin\",\n                        cache: options.cache || \"default\",\n                        redirect: options.redirect || \"follow\",\n                        referrer: options.referrer || \"client\",\n                        signal: instance.controller.signal\n                    };\n                    fetch(fetchRequest, fetchOptions).then(function(response) {\n                        // store response reference\n                        instance.response = response;\n                        var progressAvailable = true;\n                        if (!response.body) // ReadableStream is not yet supported in this browser\n                        // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                        progressAvailable = false;\n                        // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n                        var contentLength = response.headers.get(\"content-length\");\n                        if (contentLength === null) // Content-Length server response header missing.\n                        // Don't evaluate download progress if we can't compare against a total size\n                        // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                        progressAvailable = false;\n                        if (!progressAvailable) // not able to check download progress so skip it\n                        return response;\n                        // fire progress event when during load\n                        instance.onProgress = function(e) {\n                            instance.fireEvent(\"progress\", e);\n                        };\n                        return new Response(new ReadableStream(new ProgressHandler(instance, contentLength, response)), fetchOptions);\n                    }).then(function(response) {\n                        var errMsg;\n                        if (response.ok) switch(responseType){\n                            case \"arraybuffer\":\n                                return response.arrayBuffer();\n                            case \"json\":\n                                return response.json();\n                            case \"blob\":\n                                return response.blob();\n                            case \"text\":\n                                return response.text();\n                            default:\n                                errMsg = \"Unknown responseType: \" + responseType;\n                                break;\n                        }\n                        if (!errMsg) errMsg = \"HTTP error status: \" + response.status;\n                        throw new Error(errMsg);\n                    }).then(function(response) {\n                        instance.fireEvent(\"success\", response);\n                    }).catch(function(error) {\n                        instance.fireEvent(\"error\", error);\n                    });\n                    // return the fetch request\n                    instance.fetchRequest = fetchRequest;\n                    return instance;\n                }\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/util/frame.js\": /*!***************************!*\\\n  !*** ./src/util/frame.js ***!\n  \\***************************/ /***/ (module1, exports, __webpack_require__)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = frame;\n                var _requestAnimationFrame = _interopRequireDefault(__webpack_require__(/*! ./request-animation-frame */ \"./src/util/request-animation-frame.js\"));\n                function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                        default: obj\n                    };\n                }\n                /**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */ function frame(func) {\n                    return function() {\n                        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n                        return (0, _requestAnimationFrame.default)(function() {\n                            return func.apply(void 0, args);\n                        });\n                    };\n                }\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/util/get-id.js\": /*!****************************!*\\\n  !*** ./src/util/get-id.js ***!\n  \\****************************/ /***/ (module1, exports)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = getId;\n                /**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */ function getId(prefix) {\n                    if (prefix === undefined) prefix = \"wavesurfer_\";\n                    return prefix + Math.random().toString(32).substring(2);\n                }\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/util/index.js\": /*!***************************!*\\\n  !*** ./src/util/index.js ***!\n  \\***************************/ /***/ (__unused_webpack_module, exports, __webpack_require__)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                Object.defineProperty(exports, \"Observer\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _observer.default;\n                    }\n                });\n                Object.defineProperty(exports, \"absMax\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _absMax.default;\n                    }\n                });\n                Object.defineProperty(exports, \"clamp\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _clamp.default;\n                    }\n                });\n                Object.defineProperty(exports, \"debounce\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _debounce.default;\n                    }\n                });\n                Object.defineProperty(exports, \"fetchFile\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _fetch.default;\n                    }\n                });\n                Object.defineProperty(exports, \"frame\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _frame.default;\n                    }\n                });\n                Object.defineProperty(exports, \"getId\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _getId.default;\n                    }\n                });\n                Object.defineProperty(exports, \"ignoreSilenceMode\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _silenceMode.default;\n                    }\n                });\n                Object.defineProperty(exports, \"max\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _max.default;\n                    }\n                });\n                Object.defineProperty(exports, \"min\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _min.default;\n                    }\n                });\n                Object.defineProperty(exports, \"preventClick\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _preventClick.default;\n                    }\n                });\n                Object.defineProperty(exports, \"requestAnimationFrame\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _requestAnimationFrame.default;\n                    }\n                });\n                Object.defineProperty(exports, \"style\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _style.default;\n                    }\n                });\n                Object.defineProperty(exports, \"withOrientation\", {\n                    enumerable: true,\n                    get: function get() {\n                        return _orientation.default;\n                    }\n                });\n                var _getId = _interopRequireDefault(__webpack_require__(/*! ./get-id */ \"./src/util/get-id.js\"));\n                var _max = _interopRequireDefault(__webpack_require__(/*! ./max */ \"./src/util/max.js\"));\n                var _min = _interopRequireDefault(__webpack_require__(/*! ./min */ \"./src/util/min.js\"));\n                var _absMax = _interopRequireDefault(__webpack_require__(/*! ./absMax */ \"./src/util/absMax.js\"));\n                var _observer = _interopRequireDefault(__webpack_require__(/*! ./observer */ \"./src/util/observer.js\"));\n                var _style = _interopRequireDefault(__webpack_require__(/*! ./style */ \"./src/util/style.js\"));\n                var _requestAnimationFrame = _interopRequireDefault(__webpack_require__(/*! ./request-animation-frame */ \"./src/util/request-animation-frame.js\"));\n                var _frame = _interopRequireDefault(__webpack_require__(/*! ./frame */ \"./src/util/frame.js\"));\n                var _debounce = _interopRequireDefault(__webpack_require__(/*! debounce */ \"./node_modules/debounce/index.js\"));\n                var _preventClick = _interopRequireDefault(__webpack_require__(/*! ./prevent-click */ \"./src/util/prevent-click.js\"));\n                var _fetch = _interopRequireDefault(__webpack_require__(/*! ./fetch */ \"./src/util/fetch.js\"));\n                var _clamp = _interopRequireDefault(__webpack_require__(/*! ./clamp */ \"./src/util/clamp.js\"));\n                var _orientation = _interopRequireDefault(__webpack_require__(/*! ./orientation */ \"./src/util/orientation.js\"));\n                var _silenceMode = _interopRequireDefault(__webpack_require__(/*! ./silence-mode */ \"./src/util/silence-mode.js\"));\n                function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                        default: obj\n                    };\n                }\n            /***/ },\n            /***/ \"./src/util/max.js\": /*!*************************!*\\\n  !*** ./src/util/max.js ***!\n  \\*************************/ /***/ (module1, exports)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = max;\n                /**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */ function max(values) {\n                    var largest = -Infinity;\n                    Object.keys(values).forEach(function(i) {\n                        if (values[i] > largest) largest = values[i];\n                    });\n                    return largest;\n                }\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/util/min.js\": /*!*************************!*\\\n  !*** ./src/util/min.js ***!\n  \\*************************/ /***/ (module1, exports)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = min;\n                /**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */ function min(values) {\n                    var smallest = Number(Infinity);\n                    Object.keys(values).forEach(function(i) {\n                        if (values[i] < smallest) smallest = values[i];\n                    });\n                    return smallest;\n                }\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/util/observer.js\": /*!******************************!*\\\n  !*** ./src/util/observer.js ***!\n  \\******************************/ /***/ (module1, exports)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = void 0;\n                function _typeof(obj) {\n                    \"@babel/helpers - typeof\";\n                    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n                        return typeof obj;\n                    } : function(obj) {\n                        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    }, _typeof(obj);\n                }\n                function _classCallCheck(instance, Constructor) {\n                    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n                }\n                function _defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n                    }\n                }\n                function _createClass(Constructor, protoProps, staticProps) {\n                    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) _defineProperties(Constructor, staticProps);\n                    Object.defineProperty(Constructor, \"prototype\", {\n                        writable: false\n                    });\n                    return Constructor;\n                }\n                function _toPropertyKey(arg) {\n                    var key = _toPrimitive(arg, \"string\");\n                    return _typeof(key) === \"symbol\" ? key : String(key);\n                }\n                function _toPrimitive(input, hint) {\n                    if (_typeof(input) !== \"object\" || input === null) return input;\n                    var prim = input[Symbol.toPrimitive];\n                    if (prim !== undefined) {\n                        var res = prim.call(input, hint || \"default\");\n                        if (_typeof(res) !== \"object\") return res;\n                        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                    }\n                    return (hint === \"string\" ? String : Number)(input);\n                }\n                /**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */ /**\n * Observer class\n */ var Observer = /*#__PURE__*/ function() {\n                    /**\n   * Instantiate Observer\n   */ function Observer() {\n                        _classCallCheck(this, Observer);\n                        /**\n     * @private\n     * @todo Initialise the handlers here already and remove the conditional\n     * assignment in `on()`\n     */ this._disabledEventEmissions = [];\n                        this.handlers = null;\n                    }\n                    /**\n   * Attach a handler function for an event.\n   *\n   * @param {string} event Name of the event to listen to\n   * @param {function} fn The callback to trigger when the event is fired\n   * @return {ListenerDescriptor} The event descriptor\n   */ _createClass(Observer, [\n                        {\n                            key: \"on\",\n                            value: function on(event, fn) {\n                                var _this = this;\n                                if (!this.handlers) this.handlers = {};\n                                var handlers = this.handlers[event];\n                                if (!handlers) handlers = this.handlers[event] = [];\n                                handlers.push(fn);\n                                // Return an event descriptor\n                                return {\n                                    name: event,\n                                    callback: fn,\n                                    un: function un(e, fn) {\n                                        return _this.un(e, fn);\n                                    }\n                                };\n                            }\n                        },\n                        {\n                            key: \"un\",\n                            value: function un(event, fn) {\n                                if (!this.handlers) return;\n                                var handlers = this.handlers[event];\n                                var i;\n                                if (handlers) {\n                                    if (fn) {\n                                        for(i = handlers.length - 1; i >= 0; i--)if (handlers[i] == fn) handlers.splice(i, 1);\n                                    } else handlers.length = 0;\n                                }\n                            }\n                        },\n                        {\n                            key: \"unAll\",\n                            value: function unAll() {\n                                this.handlers = null;\n                            }\n                        },\n                        {\n                            key: \"once\",\n                            value: function once(event, handler) {\n                                var _this2 = this;\n                                var fn = function fn() {\n                                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n                                    /*  eslint-disable no-invalid-this */ handler.apply(_this2, args);\n                                    /*  eslint-enable no-invalid-this */ setTimeout(function() {\n                                        _this2.un(event, fn);\n                                    }, 0);\n                                };\n                                return this.on(event, fn);\n                            }\n                        },\n                        {\n                            key: \"setDisabledEventEmissions\",\n                            value: function setDisabledEventEmissions(eventNames) {\n                                this._disabledEventEmissions = eventNames;\n                            }\n                        },\n                        {\n                            key: \"_isDisabledEventEmission\",\n                            value: function _isDisabledEventEmission(event) {\n                                return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n                            }\n                        },\n                        {\n                            key: \"fireEvent\",\n                            value: function fireEvent(event) {\n                                for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];\n                                if (!this.handlers || this._isDisabledEventEmission(event)) return;\n                                var handlers = this.handlers[event];\n                                handlers && handlers.forEach(function(fn) {\n                                    fn.apply(void 0, args);\n                                });\n                            }\n                        }\n                    ]);\n                    return Observer;\n                }();\n                exports[\"default\"] = Observer;\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/util/orientation.js\": /*!*********************************!*\\\n  !*** ./src/util/orientation.js ***!\n  \\*********************************/ /***/ (module1, exports)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = withOrientation;\n                var verticalPropMap = {\n                    width: \"height\",\n                    height: \"width\",\n                    overflowX: \"overflowY\",\n                    overflowY: \"overflowX\",\n                    clientWidth: \"clientHeight\",\n                    clientHeight: \"clientWidth\",\n                    clientX: \"clientY\",\n                    clientY: \"clientX\",\n                    scrollWidth: \"scrollHeight\",\n                    scrollLeft: \"scrollTop\",\n                    offsetLeft: \"offsetTop\",\n                    offsetTop: \"offsetLeft\",\n                    offsetHeight: \"offsetWidth\",\n                    offsetWidth: \"offsetHeight\",\n                    left: \"top\",\n                    right: \"bottom\",\n                    top: \"left\",\n                    bottom: \"right\",\n                    borderRightStyle: \"borderBottomStyle\",\n                    borderRightWidth: \"borderBottomWidth\",\n                    borderRightColor: \"borderBottomColor\"\n                };\n                /**\n * Convert a horizontally-oriented property name to a vertical one.\n *\n * @param {string} prop A property name\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {string} prop, converted appropriately\n */ function mapProp(prop, vertical) {\n                    if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) return vertical ? verticalPropMap[prop] : prop;\n                    else return prop;\n                }\n                var isProxy = Symbol(\"isProxy\");\n                /**\n * Returns an appropriately oriented object based on vertical.\n * If vertical is true, attribute getting and setting will be mapped through\n * verticalPropMap, so that e.g. getting the object's .width will give its\n * .height instead.\n * Certain methods of an oriented object will return oriented objects as well.\n * Oriented objects can't be added to the DOM directly since they are Proxy objects\n * and thus fail typechecks. Use domElement to get the actual element for this.\n *\n * @param {object} target The object to be wrapped and oriented\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n * @since 5.0.0\n */ function withOrientation(target, vertical) {\n                    if (target[isProxy]) return target;\n                    else return new Proxy(target, {\n                        get: function get(obj, prop, receiver) {\n                            if (prop === isProxy) return true;\n                            else if (prop === \"domElement\") return obj;\n                            else if (prop === \"style\") return withOrientation(obj.style, vertical);\n                            else if (prop === \"canvas\") return withOrientation(obj.canvas, vertical);\n                            else if (prop === \"getBoundingClientRect\") return function() {\n                                return withOrientation(obj.getBoundingClientRect.apply(obj, arguments), vertical);\n                            };\n                            else if (prop === \"getContext\") return function() {\n                                return withOrientation(obj.getContext.apply(obj, arguments), vertical);\n                            };\n                            else {\n                                var value = obj[mapProp(prop, vertical)];\n                                return typeof value == \"function\" ? value.bind(obj) : value;\n                            }\n                        },\n                        set: function set(obj, prop, value) {\n                            obj[mapProp(prop, vertical)] = value;\n                            return true;\n                        }\n                    });\n                }\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/util/prevent-click.js\": /*!***********************************!*\\\n  !*** ./src/util/prevent-click.js ***!\n  \\***********************************/ /***/ (module1, exports)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = preventClick;\n                /**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */ function preventClickHandler(event) {\n                    event.stopPropagation();\n                    document.body.removeEventListener(\"click\", preventClickHandler, true);\n                }\n                /**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */ function preventClick(values) {\n                    document.body.addEventListener(\"click\", preventClickHandler, true);\n                }\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/util/request-animation-frame.js\": /*!*********************************************!*\\\n  !*** ./src/util/request-animation-frame.js ***!\n  \\*********************************************/ /***/ (module1, exports)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = void 0;\n                /* eslint-disable valid-jsdoc */ /**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */ var _default = (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback, element) {\n                    return setTimeout(callback, 1000 / 60);\n                }).bind(window);\n                exports[\"default\"] = _default;\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/util/silence-mode.js\": /*!**********************************!*\\\n  !*** ./src/util/silence-mode.js ***!\n  \\**********************************/ /***/ (module1, exports)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = ignoreSilenceMode;\n                /**\n * Ignores device silence mode when using the `WebAudio` backend.\n *\n * Many mobile devices contain a hardware button to mute the ringtone for incoming\n * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n * when muting the device ringer.\n *\n * @since 5.2.0\n */ function ignoreSilenceMode() {\n                    // Set webaudio context with 1 second silent audio 44100 bit rate buffer to allow playing audio even if silent switch is on the device\n                    var silentAC = new AudioContext();\n                    var silentBS = silentAC.createBufferSource();\n                    silentBS.buffer = silentAC.createBuffer(1, 1, 44100);\n                    silentBS.connect(silentAC.destination);\n                    silentBS.start();\n                    // Set the src to a short bit of url encoded as a silent mp3\n                    // NOTE The silence MP3 must be high quality, when web audio sounds are played\n                    // in parallel the web audio sound is mixed to match the bitrate of the html sound\n                    // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n                    var audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\n                    // disable iOS Airplay (setting the attribute in js doesn't work)\n                    var tmp = document.createElement(\"div\");\n                    tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n                    var audioSilentMode = tmp.children.item(0);\n                    audioSilentMode.src = audioData;\n                    audioSilentMode.preload = \"auto\";\n                    audioSilentMode.type = \"audio/mpeg\";\n                    audioSilentMode.disableRemotePlayback = true;\n                    // play\n                    audioSilentMode.play();\n                    // cleanup\n                    audioSilentMode.remove();\n                    tmp.remove();\n                }\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/util/style.js\": /*!***************************!*\\\n  !*** ./src/util/style.js ***!\n  \\***************************/ /***/ (module1, exports)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = style;\n                /**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */ function style(el, styles) {\n                    Object.keys(styles).forEach(function(prop) {\n                        if (el.style[prop] !== styles[prop]) el.style[prop] = styles[prop];\n                    });\n                    return el;\n                }\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/wavesurfer.js\": /*!***************************!*\\\n  !*** ./src/wavesurfer.js ***!\n  \\***************************/ /***/ (module1, exports, __webpack_require__)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = void 0;\n                var util = _interopRequireWildcard(__webpack_require__(/*! ./util */ \"./src/util/index.js\"));\n                var _drawer = _interopRequireDefault(__webpack_require__(/*! ./drawer.multicanvas */ \"./src/drawer.multicanvas.js\"));\n                var _webaudio = _interopRequireDefault(__webpack_require__(/*! ./webaudio */ \"./src/webaudio.js\"));\n                var _mediaelement = _interopRequireDefault(__webpack_require__(/*! ./mediaelement */ \"./src/mediaelement.js\"));\n                var _peakcache = _interopRequireDefault(__webpack_require__(/*! ./peakcache */ \"./src/peakcache.js\"));\n                var _mediaelementWebaudio = _interopRequireDefault(__webpack_require__(/*! ./mediaelement-webaudio */ \"./src/mediaelement-webaudio.js\"));\n                function _interopRequireDefault(obj) {\n                    return obj && obj.__esModule ? obj : {\n                        default: obj\n                    };\n                }\n                function _getRequireWildcardCache(nodeInterop) {\n                    if (typeof WeakMap !== \"function\") return null;\n                    var cacheBabelInterop = new WeakMap();\n                    var cacheNodeInterop = new WeakMap();\n                    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n                        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n                    })(nodeInterop);\n                }\n                function _interopRequireWildcard(obj, nodeInterop) {\n                    if (!nodeInterop && obj && obj.__esModule) return obj;\n                    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") return {\n                        default: obj\n                    };\n                    var cache = _getRequireWildcardCache(nodeInterop);\n                    if (cache && cache.has(obj)) return cache.get(obj);\n                    var newObj = {};\n                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n                    for(var key in obj)if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n                        else newObj[key] = obj[key];\n                    }\n                    newObj.default = obj;\n                    if (cache) cache.set(obj, newObj);\n                    return newObj;\n                }\n                function _inherits(subClass, superClass) {\n                    if (typeof superClass !== \"function\" && superClass !== null) throw new TypeError(\"Super expression must either be null or a function\");\n                    subClass.prototype = Object.create(superClass && superClass.prototype, {\n                        constructor: {\n                            value: subClass,\n                            writable: true,\n                            configurable: true\n                        }\n                    });\n                    Object.defineProperty(subClass, \"prototype\", {\n                        writable: false\n                    });\n                    if (superClass) _setPrototypeOf(subClass, superClass);\n                }\n                function _setPrototypeOf(o, p) {\n                    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n                        o.__proto__ = p;\n                        return o;\n                    };\n                    return _setPrototypeOf(o, p);\n                }\n                function _createSuper(Derived) {\n                    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n                    return function _createSuperInternal() {\n                        var Super = _getPrototypeOf(Derived), result;\n                        if (hasNativeReflectConstruct) {\n                            var NewTarget = _getPrototypeOf(this).constructor;\n                            result = Reflect.construct(Super, arguments, NewTarget);\n                        } else result = Super.apply(this, arguments);\n                        return _possibleConstructorReturn(this, result);\n                    };\n                }\n                function _possibleConstructorReturn(self1, call) {\n                    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) return call;\n                    else if (call !== void 0) throw new TypeError(\"Derived constructors may only return object or undefined\");\n                    return _assertThisInitialized(self1);\n                }\n                function _assertThisInitialized(self1) {\n                    if (self1 === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                    return self1;\n                }\n                function _isNativeReflectConstruct() {\n                    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n                    if (Reflect.construct.sham) return false;\n                    if (typeof Proxy === \"function\") return true;\n                    try {\n                        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n                        return true;\n                    } catch (e) {\n                        return false;\n                    }\n                }\n                function _getPrototypeOf(o) {\n                    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n                        return o.__proto__ || Object.getPrototypeOf(o);\n                    };\n                    return _getPrototypeOf(o);\n                }\n                function _defineProperty(obj, key, value) {\n                    key = _toPropertyKey(key);\n                    if (key in obj) Object.defineProperty(obj, key, {\n                        value: value,\n                        enumerable: true,\n                        configurable: true,\n                        writable: true\n                    });\n                    else obj[key] = value;\n                    return obj;\n                }\n                function _typeof(obj) {\n                    \"@babel/helpers - typeof\";\n                    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n                        return typeof obj;\n                    } : function(obj) {\n                        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    }, _typeof(obj);\n                }\n                function _classCallCheck(instance, Constructor) {\n                    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n                }\n                function _defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n                    }\n                }\n                function _createClass(Constructor, protoProps, staticProps) {\n                    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) _defineProperties(Constructor, staticProps);\n                    Object.defineProperty(Constructor, \"prototype\", {\n                        writable: false\n                    });\n                    return Constructor;\n                }\n                function _toPropertyKey(arg) {\n                    var key = _toPrimitive(arg, \"string\");\n                    return _typeof(key) === \"symbol\" ? key : String(key);\n                }\n                function _toPrimitive(input, hint) {\n                    if (_typeof(input) !== \"object\" || input === null) return input;\n                    var prim = input[Symbol.toPrimitive];\n                    if (prim !== undefined) {\n                        var res = prim.call(input, hint || \"default\");\n                        if (_typeof(res) !== \"object\") return res;\n                        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                    }\n                    return (hint === \"string\" ? String : Number)(input);\n                }\n                /*\n * This work is licensed under a BSD-3-Clause License.\n */ /** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */ /** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */ /** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */ /** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */ /** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */ /** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */ /** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */ /**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform on current progress\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n * waveform is centered\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n * center waveform on current progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n * also with audio with big duration. For example:\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n *   wavesurfer.play();\n *   wavesurfer.setFilter(customFilter);\n * `\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave bars.\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {number} barWidth=null Draw the waveform using bars.\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n * eliminating waveform gaps\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n * attributes.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} hideCursor=false Whether to hide the mouse cursor\n * when one would normally be shown by default.\n * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n * when using the `WebAudio` backend.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * `'audio'|'video'` ('video' only for `MediaElement`)\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options. For example:\n * `let xhr = {\n *     cache: 'default',\n *     mode: 'cors',\n *     method: 'GET',\n *     credentials: 'same-origin',\n *     redirect: 'follow',\n *     referrer: 'client',\n *     requestHeaders: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ]\n * };`\n */ /**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */ /**\n * @typedef {Object} SplitChannelOptions\n * @desc parameters applied when splitChannels option is true\n * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n * @property {object} channelColors={} object describing color for each channel. Example:\n * {\n *     0: {\n *         progressColor: 'green',\n *         waveColor: 'pink'\n *     },\n *     1: {\n *         progressColor: 'orange',\n *         waveColor: 'purple'\n *     }\n * }\n * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n * @property {boolean} relativeNormalization=false determines whether\n * normalization is done per channel or maintains proportionality between\n * channels. Only applied when normalize and splitChannels are both true.\n * @property {boolean} splitDragSelection=false determines if drag selection in regions\n * plugin works separately on each channel or only one selection for all channels\n * @since 4.3.0\n */ /**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */ var PluginClass = /*#__PURE__*/ function() {\n                    /**\n   * Construct the plugin\n   *\n   * @param {Object} params={} The plugin params (specific to the plugin)\n   * @param {Object} ws The wavesurfer instance\n   */ function PluginClass(params, ws) {\n                        _classCallCheck(this, PluginClass);\n                    }\n                    /**\n   * Initialise the plugin\n   *\n   * Start doing something. This is called by\n   * `wavesurfer.initPlugin(pluginName)`\n   */ _createClass(PluginClass, [\n                        {\n                            key: \"create\",\n                            value: /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */ function create(params) {}\n                        },\n                        {\n                            key: \"init\",\n                            value: function init() {}\n                        },\n                        {\n                            key: \"destroy\",\n                            value: function destroy() {}\n                        }\n                    ]);\n                    return PluginClass;\n                }();\n                /**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */ var WaveSurfer = /*#__PURE__*/ function(_util$Observer) {\n                    _inherits(WaveSurfer, _util$Observer);\n                    var _super = _createSuper(WaveSurfer);\n                    /**\n   * Initialise wavesurfer instance\n   *\n   * @param {WavesurferParams} params Instantiation options for wavesurfer\n   * @example\n   * const wavesurfer = new WaveSurfer(params);\n   * @returns {this} Wavesurfer instance\n   */ function WaveSurfer(params) {\n                        var _this;\n                        _classCallCheck(this, WaveSurfer);\n                        _this = _super.call(this);\n                        /**\n     * Extract relevant parameters (or defaults)\n     * @private\n     */ /** @private */ _defineProperty(_assertThisInitialized(_this), \"defaultParams\", {\n                            audioContext: null,\n                            audioScriptProcessor: null,\n                            audioRate: 1,\n                            autoCenter: true,\n                            autoCenterRate: 5,\n                            autoCenterImmediately: false,\n                            backend: \"WebAudio\",\n                            backgroundColor: null,\n                            barHeight: 1,\n                            barRadius: 0,\n                            barGap: null,\n                            barMinHeight: null,\n                            container: null,\n                            cursorColor: \"#333\",\n                            cursorWidth: 1,\n                            dragSelection: true,\n                            drawingContextAttributes: {\n                                // Boolean that hints the user agent to reduce the latency\n                                // by desynchronizing the canvas paint cycle from the event\n                                // loop\n                                desynchronized: false\n                            },\n                            duration: null,\n                            fillParent: true,\n                            forceDecode: false,\n                            height: 128,\n                            hideScrollbar: false,\n                            hideCursor: false,\n                            ignoreSilenceMode: false,\n                            interact: true,\n                            loopSelection: true,\n                            maxCanvasWidth: 4000,\n                            mediaContainer: null,\n                            mediaControls: false,\n                            mediaType: \"audio\",\n                            minPxPerSec: 20,\n                            normalize: false,\n                            partialRender: false,\n                            pixelRatio: window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n                            plugins: [],\n                            progressColor: \"#555\",\n                            removeMediaElementOnDestroy: true,\n                            renderer: _drawer.default,\n                            responsive: false,\n                            rtl: false,\n                            scrollParent: false,\n                            skipLength: 2,\n                            splitChannels: false,\n                            splitChannelsOptions: {\n                                overlay: false,\n                                channelColors: {},\n                                filterChannels: [],\n                                relativeNormalization: false,\n                                splitDragSelection: false\n                            },\n                            vertical: false,\n                            waveColor: \"#999\",\n                            xhr: {}\n                        });\n                        /** @private */ _defineProperty(_assertThisInitialized(_this), \"backends\", {\n                            MediaElement: _mediaelement.default,\n                            WebAudio: _webaudio.default,\n                            MediaElementWebAudio: _mediaelementWebaudio.default\n                        });\n                        /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */ _defineProperty(_assertThisInitialized(_this), \"util\", util);\n                        _this.params = Object.assign({}, _this.defaultParams, params);\n                        _this.params.splitChannelsOptions = Object.assign({}, _this.defaultParams.splitChannelsOptions, params.splitChannelsOptions);\n                        /** @private */ _this.container = \"string\" == typeof params.container ? document.querySelector(_this.params.container) : _this.params.container;\n                        if (!_this.container) throw new Error(\"Container element not found\");\n                        if (_this.params.mediaContainer == null) /** @private */ _this.mediaContainer = _this.container;\n                        else if (typeof _this.params.mediaContainer == \"string\") /** @private */ _this.mediaContainer = document.querySelector(_this.params.mediaContainer);\n                        else /** @private */ _this.mediaContainer = _this.params.mediaContainer;\n                        if (!_this.mediaContainer) throw new Error(\"Media Container element not found\");\n                        if (_this.params.maxCanvasWidth <= 1) throw new Error(\"maxCanvasWidth must be greater than 1\");\n                        else if (_this.params.maxCanvasWidth % 2 == 1) throw new Error(\"maxCanvasWidth must be an even number\");\n                        if (_this.params.rtl === true) {\n                            if (_this.params.vertical === true) util.style(_this.container, {\n                                transform: \"rotateX(180deg)\"\n                            });\n                            else util.style(_this.container, {\n                                transform: \"rotateY(180deg)\"\n                            });\n                        }\n                        if (_this.params.backgroundColor) _this.setBackgroundColor(_this.params.backgroundColor);\n                        /**\n     * @private Used to save the current volume when muting so we can\n     * restore once unmuted\n     * @type {number}\n     */ _this.savedVolume = 0;\n                        /**\n     * @private The current muted state\n     * @type {boolean}\n     */ _this.isMuted = false;\n                        /**\n     * @private Will hold a list of event descriptors that need to be\n     * canceled on subsequent loads of audio\n     * @type {Object[]}\n     */ _this.tmpEvents = [];\n                        /**\n     * @private Holds any running audio downloads\n     * @type {Observer}\n     */ _this.currentRequest = null;\n                        /** @private */ _this.arraybuffer = null;\n                        /** @private */ _this.drawer = null;\n                        /** @private */ _this.backend = null;\n                        /** @private */ _this.peakCache = null;\n                        // cache constructor objects\n                        if (typeof _this.params.renderer !== \"function\") throw new Error(\"Renderer parameter is invalid\");\n                        /**\n     * @private The uninitialised Drawer class\n     */ _this.Drawer = _this.params.renderer;\n                        /**\n     * @private The uninitialised Backend class\n     */ // Back compat\n                        if (_this.params.backend == \"AudioElement\") _this.params.backend = \"MediaElement\";\n                        if ((_this.params.backend == \"WebAudio\" || _this.params.backend === \"MediaElementWebAudio\") && !_webaudio.default.prototype.supportsWebAudio.call(null)) _this.params.backend = \"MediaElement\";\n                        _this.Backend = _this.backends[_this.params.backend];\n                        /**\n     * @private map of plugin names that are currently initialised\n     */ _this.initialisedPluginList = {};\n                        /** @private */ _this.isDestroyed = false;\n                        /**\n     * Get the current ready status.\n     *\n     * @example const isReady = wavesurfer.isReady;\n     * @return {boolean}\n     */ _this.isReady = false;\n                        // responsive debounced event listener. If this.params.responsive is not\n                        // set, this is never called. Use 100ms or this.params.responsive as\n                        // timeout for the debounce function.\n                        var prevWidth = 0;\n                        _this._onResize = util.debounce(function() {\n                            if (_this.drawer.wrapper && prevWidth != _this.drawer.wrapper.clientWidth && !_this.params.scrollParent) {\n                                prevWidth = _this.drawer.wrapper.clientWidth;\n                                if (prevWidth) // redraw only if waveform container is rendered and has a width\n                                _this.drawer.fireEvent(\"redraw\");\n                            }\n                        }, typeof _this.params.responsive === \"number\" ? _this.params.responsive : 100);\n                        return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n                    }\n                    /**\n   * Initialise the wave\n   *\n   * @example\n   * var wavesurfer = new WaveSurfer(params);\n   * wavesurfer.init();\n   * @return {this} The wavesurfer instance\n   */ _createClass(WaveSurfer, [\n                        {\n                            key: \"init\",\n                            value: function init() {\n                                this.registerPlugins(this.params.plugins);\n                                this.createDrawer();\n                                this.createBackend();\n                                this.createPeakCache();\n                                return this;\n                            }\n                        },\n                        {\n                            key: \"registerPlugins\",\n                            value: function registerPlugins(plugins) {\n                                var _this2 = this;\n                                // first instantiate all the plugins\n                                plugins.forEach(function(plugin) {\n                                    return _this2.addPlugin(plugin);\n                                });\n                                // now run the init functions\n                                plugins.forEach(function(plugin) {\n                                    // call init function of the plugin if deferInit is falsey\n                                    // in that case you would manually use initPlugins()\n                                    if (!plugin.deferInit) _this2.initPlugin(plugin.name);\n                                });\n                                this.fireEvent(\"plugins-registered\", plugins);\n                                return this;\n                            }\n                        },\n                        {\n                            key: \"getActivePlugins\",\n                            value: function getActivePlugins() {\n                                return this.initialisedPluginList;\n                            }\n                        },\n                        {\n                            key: \"addPlugin\",\n                            value: function addPlugin(plugin) {\n                                var _this3 = this;\n                                if (!plugin.name) throw new Error(\"Plugin does not have a name!\");\n                                if (!plugin.instance) throw new Error(\"Plugin \".concat(plugin.name, \" does not have an instance property!\"));\n                                // staticProps properties are applied to wavesurfer instance\n                                if (plugin.staticProps) Object.keys(plugin.staticProps).forEach(function(pluginStaticProp) {\n                                    /**\n           * Properties defined in a plugin definition's `staticProps` property are added as\n           * staticProps properties of the WaveSurfer instance\n           */ _this3[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n                                });\n                                var Instance = plugin.instance;\n                                // turn the plugin instance into an observer\n                                var observerPrototypeKeys = Object.getOwnPropertyNames(util.Observer.prototype);\n                                observerPrototypeKeys.forEach(function(key) {\n                                    Instance.prototype[key] = util.Observer.prototype[key];\n                                });\n                                /**\n       * Instantiated plugin classes are added as a property of the wavesurfer\n       * instance\n       * @type {Object}\n       */ this[plugin.name] = new Instance(plugin.params || {}, this);\n                                this.fireEvent(\"plugin-added\", plugin.name);\n                                return this;\n                            }\n                        },\n                        {\n                            key: \"initPlugin\",\n                            value: function initPlugin(name) {\n                                if (!this[name]) throw new Error(\"Plugin \".concat(name, \" has not been added yet!\"));\n                                if (this.initialisedPluginList[name]) // destroy any already initialised plugins\n                                this.destroyPlugin(name);\n                                this[name].init();\n                                this.initialisedPluginList[name] = true;\n                                this.fireEvent(\"plugin-initialised\", name);\n                                return this;\n                            }\n                        },\n                        {\n                            key: \"destroyPlugin\",\n                            value: function destroyPlugin(name) {\n                                if (!this[name]) throw new Error(\"Plugin \".concat(name, \" has not been added yet and cannot be destroyed!\"));\n                                if (!this.initialisedPluginList[name]) throw new Error(\"Plugin \".concat(name, \" is not active and cannot be destroyed!\"));\n                                if (typeof this[name].destroy !== \"function\") throw new Error(\"Plugin \".concat(name, \" does not have a destroy function!\"));\n                                this[name].destroy();\n                                delete this.initialisedPluginList[name];\n                                this.fireEvent(\"plugin-destroyed\", name);\n                                return this;\n                            }\n                        },\n                        {\n                            key: \"destroyAllPlugins\",\n                            value: function destroyAllPlugins() {\n                                var _this4 = this;\n                                Object.keys(this.initialisedPluginList).forEach(function(name) {\n                                    return _this4.destroyPlugin(name);\n                                });\n                            }\n                        },\n                        {\n                            key: \"createDrawer\",\n                            value: function createDrawer() {\n                                var _this5 = this;\n                                this.drawer = new this.Drawer(this.container, this.params);\n                                this.drawer.init();\n                                this.fireEvent(\"drawer-created\", this.drawer);\n                                if (this.params.responsive !== false) {\n                                    window.addEventListener(\"resize\", this._onResize, true);\n                                    window.addEventListener(\"orientationchange\", this._onResize, true);\n                                }\n                                this.drawer.on(\"redraw\", function() {\n                                    _this5.drawBuffer();\n                                    _this5.drawer.progress(_this5.backend.getPlayedPercents());\n                                });\n                                // Click-to-seek\n                                this.drawer.on(\"click\", function(e, progress) {\n                                    setTimeout(function() {\n                                        return _this5.seekTo(progress);\n                                    }, 0);\n                                });\n                                // Relay the scroll event from the drawer\n                                this.drawer.on(\"scroll\", function(e) {\n                                    if (_this5.params.partialRender) _this5.drawBuffer();\n                                    _this5.fireEvent(\"scroll\", e);\n                                });\n                                // Relay the dblclick event from the drawer\n                                this.drawer.on(\"dblclick\", function(e, progress) {\n                                    _this5.fireEvent(\"dblclick\", e, progress);\n                                });\n                            }\n                        },\n                        {\n                            key: \"createBackend\",\n                            value: function createBackend() {\n                                var _this6 = this;\n                                if (this.backend) this.backend.destroy();\n                                this.backend = new this.Backend(this.params);\n                                this.backend.init();\n                                this.fireEvent(\"backend-created\", this.backend);\n                                this.backend.on(\"finish\", function() {\n                                    _this6.drawer.progress(_this6.backend.getPlayedPercents());\n                                    _this6.fireEvent(\"finish\");\n                                });\n                                this.backend.on(\"play\", function() {\n                                    return _this6.fireEvent(\"play\");\n                                });\n                                this.backend.on(\"pause\", function() {\n                                    return _this6.fireEvent(\"pause\");\n                                });\n                                this.backend.on(\"audioprocess\", function(time) {\n                                    _this6.drawer.progress(_this6.backend.getPlayedPercents());\n                                    _this6.fireEvent(\"audioprocess\", time);\n                                });\n                                // only needed for MediaElement and MediaElementWebAudio backend\n                                if (this.params.backend === \"MediaElement\" || this.params.backend === \"MediaElementWebAudio\") {\n                                    this.backend.on(\"seek\", function() {\n                                        _this6.drawer.progress(_this6.backend.getPlayedPercents());\n                                    });\n                                    this.backend.on(\"volume\", function() {\n                                        var newVolume = _this6.getVolume();\n                                        _this6.fireEvent(\"volume\", newVolume);\n                                        if (_this6.backend.isMuted !== _this6.isMuted) {\n                                            _this6.isMuted = _this6.backend.isMuted;\n                                            _this6.fireEvent(\"mute\", _this6.isMuted);\n                                        }\n                                    });\n                                }\n                            }\n                        },\n                        {\n                            key: \"createPeakCache\",\n                            value: function createPeakCache() {\n                                if (this.params.partialRender) this.peakCache = new _peakcache.default();\n                            }\n                        },\n                        {\n                            key: \"getDuration\",\n                            value: function getDuration() {\n                                return this.backend.getDuration();\n                            }\n                        },\n                        {\n                            key: \"getCurrentTime\",\n                            value: function getCurrentTime() {\n                                return this.backend.getCurrentTime();\n                            }\n                        },\n                        {\n                            key: \"setCurrentTime\",\n                            value: function setCurrentTime(seconds) {\n                                if (seconds >= this.getDuration()) this.seekTo(1);\n                                else this.seekTo(seconds / this.getDuration());\n                            }\n                        },\n                        {\n                            key: \"play\",\n                            value: function play(start, end) {\n                                var _this7 = this;\n                                if (this.params.ignoreSilenceMode) // ignores device hardware silence mode\n                                util.ignoreSilenceMode();\n                                this.fireEvent(\"interaction\", function() {\n                                    return _this7.play(start, end);\n                                });\n                                return this.backend.play(start, end);\n                            }\n                        },\n                        {\n                            key: \"setPlayEnd\",\n                            value: function setPlayEnd(position) {\n                                this.backend.setPlayEnd(position);\n                            }\n                        },\n                        {\n                            key: \"pause\",\n                            value: function pause() {\n                                if (!this.backend.isPaused()) return this.backend.pause();\n                            }\n                        },\n                        {\n                            key: \"playPause\",\n                            value: function playPause() {\n                                return this.backend.isPaused() ? this.play() : this.pause();\n                            }\n                        },\n                        {\n                            key: \"isPlaying\",\n                            value: function isPlaying() {\n                                return !this.backend.isPaused();\n                            }\n                        },\n                        {\n                            key: \"skipBackward\",\n                            value: function skipBackward(seconds) {\n                                this.skip(-seconds || -this.params.skipLength);\n                            }\n                        },\n                        {\n                            key: \"skipForward\",\n                            value: function skipForward(seconds) {\n                                this.skip(seconds || this.params.skipLength);\n                            }\n                        },\n                        {\n                            key: \"skip\",\n                            value: function skip(offset) {\n                                var duration = this.getDuration() || 1;\n                                var position = this.getCurrentTime() || 0;\n                                position = Math.max(0, Math.min(duration, position + (offset || 0)));\n                                this.seekAndCenter(position / duration);\n                            }\n                        },\n                        {\n                            key: \"seekAndCenter\",\n                            value: function seekAndCenter(progress) {\n                                this.seekTo(progress);\n                                this.drawer.recenter(progress);\n                            }\n                        },\n                        {\n                            key: \"seekTo\",\n                            value: function seekTo(progress) {\n                                var _this8 = this;\n                                // return an error if progress is not a number between 0 and 1\n                                if (typeof progress !== \"number\" || !isFinite(progress) || progress < 0 || progress > 1) throw new Error(\"Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!\");\n                                this.fireEvent(\"interaction\", function() {\n                                    return _this8.seekTo(progress);\n                                });\n                                var isWebAudioBackend = this.params.backend === \"WebAudio\";\n                                var paused = this.backend.isPaused();\n                                if (isWebAudioBackend && !paused) this.backend.pause();\n                                // avoid small scrolls while paused seeking\n                                var oldScrollParent = this.params.scrollParent;\n                                this.params.scrollParent = false;\n                                this.backend.seekTo(progress * this.getDuration());\n                                this.drawer.progress(progress);\n                                if (isWebAudioBackend && !paused) this.backend.play();\n                                this.params.scrollParent = oldScrollParent;\n                                this.fireEvent(\"seek\", progress);\n                            }\n                        },\n                        {\n                            key: \"stop\",\n                            value: function stop() {\n                                this.pause();\n                                this.seekTo(0);\n                                this.drawer.progress(0);\n                            }\n                        },\n                        {\n                            key: \"setSinkId\",\n                            value: function setSinkId(deviceId) {\n                                return this.backend.setSinkId(deviceId);\n                            }\n                        },\n                        {\n                            key: \"setVolume\",\n                            value: function setVolume(newVolume) {\n                                if (this.isMuted === true) {\n                                    this.savedVolume = newVolume;\n                                    return;\n                                }\n                                this.backend.setVolume(newVolume);\n                                this.fireEvent(\"volume\", newVolume);\n                            }\n                        },\n                        {\n                            key: \"getVolume\",\n                            value: function getVolume() {\n                                return this.backend.getVolume();\n                            }\n                        },\n                        {\n                            key: \"setPlaybackRate\",\n                            value: function setPlaybackRate(rate) {\n                                this.backend.setPlaybackRate(rate);\n                            }\n                        },\n                        {\n                            key: \"getPlaybackRate\",\n                            value: function getPlaybackRate() {\n                                return this.backend.getPlaybackRate();\n                            }\n                        },\n                        {\n                            key: \"toggleMute\",\n                            value: function toggleMute() {\n                                this.setMute(!this.isMuted);\n                            }\n                        },\n                        {\n                            key: \"setMute\",\n                            value: function setMute(mute) {\n                                // ignore all muting requests if the audio is already in that state\n                                if (mute === this.isMuted) {\n                                    this.fireEvent(\"mute\", this.isMuted);\n                                    return;\n                                }\n                                if (this.backend.setMute) {\n                                    // Backends such as the MediaElement backend have their own handling\n                                    // of mute, let them handle it.\n                                    this.backend.setMute(mute);\n                                    this.isMuted = mute;\n                                } else if (mute) {\n                                    // If currently not muted then save current volume,\n                                    // turn off the volume and update the mute properties\n                                    this.savedVolume = this.backend.getVolume();\n                                    this.backend.setVolume(0);\n                                    this.isMuted = true;\n                                    this.fireEvent(\"volume\", 0);\n                                } else {\n                                    // If currently muted then restore to the saved volume\n                                    // and update the mute properties\n                                    this.backend.setVolume(this.savedVolume);\n                                    this.isMuted = false;\n                                    this.fireEvent(\"volume\", this.savedVolume);\n                                }\n                                this.fireEvent(\"mute\", this.isMuted);\n                            }\n                        },\n                        {\n                            key: \"getMute\",\n                            value: function getMute() {\n                                return this.isMuted;\n                            }\n                        },\n                        {\n                            key: \"getFilters\",\n                            value: function getFilters() {\n                                return this.backend.filters || [];\n                            }\n                        },\n                        {\n                            key: \"toggleScroll\",\n                            value: function toggleScroll() {\n                                this.params.scrollParent = !this.params.scrollParent;\n                                this.drawBuffer();\n                            }\n                        },\n                        {\n                            key: \"toggleInteraction\",\n                            value: function toggleInteraction() {\n                                this.params.interact = !this.params.interact;\n                            }\n                        },\n                        {\n                            key: \"getWaveColor\",\n                            value: function getWaveColor() {\n                                var channelIdx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n                                if (this.params.splitChannelsOptions.channelColors[channelIdx]) return this.params.splitChannelsOptions.channelColors[channelIdx].waveColor;\n                                return this.params.waveColor;\n                            }\n                        },\n                        {\n                            key: \"setWaveColor\",\n                            value: function setWaveColor(color) {\n                                var channelIdx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n                                if (this.params.splitChannelsOptions.channelColors[channelIdx]) this.params.splitChannelsOptions.channelColors[channelIdx].waveColor = color;\n                                else this.params.waveColor = color;\n                                this.drawBuffer();\n                            }\n                        },\n                        {\n                            key: \"getProgressColor\",\n                            value: function getProgressColor() {\n                                var channelIdx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n                                if (this.params.splitChannelsOptions.channelColors[channelIdx]) return this.params.splitChannelsOptions.channelColors[channelIdx].progressColor;\n                                return this.params.progressColor;\n                            }\n                        },\n                        {\n                            key: \"setProgressColor\",\n                            value: function setProgressColor(color, channelIdx) {\n                                if (this.params.splitChannelsOptions.channelColors[channelIdx]) this.params.splitChannelsOptions.channelColors[channelIdx].progressColor = color;\n                                else this.params.progressColor = color;\n                                this.drawBuffer();\n                            }\n                        },\n                        {\n                            key: \"getBackgroundColor\",\n                            value: function getBackgroundColor() {\n                                return this.params.backgroundColor;\n                            }\n                        },\n                        {\n                            key: \"setBackgroundColor\",\n                            value: function setBackgroundColor(color) {\n                                this.params.backgroundColor = color;\n                                util.style(this.container, {\n                                    background: this.params.backgroundColor\n                                });\n                            }\n                        },\n                        {\n                            key: \"getCursorColor\",\n                            value: function getCursorColor() {\n                                return this.params.cursorColor;\n                            }\n                        },\n                        {\n                            key: \"setCursorColor\",\n                            value: function setCursorColor(color) {\n                                this.params.cursorColor = color;\n                                this.drawer.updateCursor();\n                            }\n                        },\n                        {\n                            key: \"getHeight\",\n                            value: function getHeight() {\n                                return this.params.height;\n                            }\n                        },\n                        {\n                            key: \"setHeight\",\n                            value: function setHeight(height) {\n                                this.params.height = height;\n                                this.drawer.setHeight(height * this.params.pixelRatio);\n                                this.drawBuffer();\n                            }\n                        },\n                        {\n                            key: \"setFilteredChannels\",\n                            value: function setFilteredChannels(channelIndices) {\n                                this.params.splitChannelsOptions.filterChannels = channelIndices;\n                                this.drawBuffer();\n                            }\n                        },\n                        {\n                            key: \"drawBuffer\",\n                            value: function drawBuffer() {\n                                var nominalWidth = Math.round(this.getDuration() * this.params.minPxPerSec * this.params.pixelRatio);\n                                var parentWidth = this.drawer.getWidth();\n                                var width = nominalWidth;\n                                // always start at 0 after zooming for scrolling : issue redraw left part\n                                var start = 0;\n                                var end = Math.max(start + parentWidth, width);\n                                // Fill container\n                                if (this.params.fillParent && (!this.params.scrollParent || nominalWidth < parentWidth)) {\n                                    width = parentWidth;\n                                    start = 0;\n                                    end = width;\n                                }\n                                var peaks;\n                                if (this.params.partialRender) {\n                                    var newRanges = this.peakCache.addRangeToPeakCache(width, start, end);\n                                    var i;\n                                    for(i = 0; i < newRanges.length; i++){\n                                        peaks = this.backend.getPeaks(width, newRanges[i][0], newRanges[i][1]);\n                                        this.drawer.drawPeaks(peaks, width, newRanges[i][0], newRanges[i][1]);\n                                    }\n                                } else {\n                                    peaks = this.backend.getPeaks(width, start, end);\n                                    this.drawer.drawPeaks(peaks, width, start, end);\n                                }\n                                this.fireEvent(\"redraw\", peaks, width);\n                            }\n                        },\n                        {\n                            key: \"zoom\",\n                            value: function zoom(pxPerSec) {\n                                if (!pxPerSec) {\n                                    this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n                                    this.params.scrollParent = false;\n                                } else {\n                                    this.params.minPxPerSec = pxPerSec;\n                                    this.params.scrollParent = true;\n                                }\n                                this.drawBuffer();\n                                this.drawer.progress(this.backend.getPlayedPercents());\n                                this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n                                this.fireEvent(\"zoom\", pxPerSec);\n                            }\n                        },\n                        {\n                            key: \"loadArrayBuffer\",\n                            value: function loadArrayBuffer(arraybuffer) {\n                                var _this9 = this;\n                                this.decodeArrayBuffer(arraybuffer, function(data) {\n                                    if (!_this9.isDestroyed) _this9.loadDecodedBuffer(data);\n                                });\n                            }\n                        },\n                        {\n                            key: \"loadDecodedBuffer\",\n                            value: function loadDecodedBuffer(buffer) {\n                                this.backend.load(buffer);\n                                this.drawBuffer();\n                                this.isReady = true;\n                                this.fireEvent(\"ready\");\n                            }\n                        },\n                        {\n                            key: \"loadBlob\",\n                            value: function loadBlob(blob) {\n                                var _this10 = this;\n                                // Create file reader\n                                var reader = new FileReader();\n                                reader.addEventListener(\"progress\", function(e) {\n                                    return _this10.onProgress(e);\n                                });\n                                reader.addEventListener(\"load\", function(e) {\n                                    return _this10.loadArrayBuffer(e.target.result);\n                                });\n                                reader.addEventListener(\"error\", function() {\n                                    return _this10.fireEvent(\"error\", \"Error reading file\");\n                                });\n                                reader.readAsArrayBuffer(blob);\n                                this.empty();\n                            }\n                        },\n                        {\n                            key: \"load\",\n                            value: function load(url, peaks, preload, duration) {\n                                if (!url) throw new Error(\"url parameter cannot be empty\");\n                                this.empty();\n                                if (preload) {\n                                    // check whether the preload attribute will be usable and if not log\n                                    // a warning listing the reasons why not and nullify the variable\n                                    var preloadIgnoreReasons = {\n                                        \"Preload is not 'auto', 'none' or 'metadata'\": [\n                                            \"auto\",\n                                            \"metadata\",\n                                            \"none\"\n                                        ].indexOf(preload) === -1,\n                                        \"Peaks are not provided\": !peaks,\n                                        \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\": [\n                                            \"MediaElement\",\n                                            \"MediaElementWebAudio\"\n                                        ].indexOf(this.params.backend) === -1,\n                                        \"Url is not of type string\": typeof url !== \"string\"\n                                    };\n                                    var activeReasons = Object.keys(preloadIgnoreReasons).filter(function(reason) {\n                                        return preloadIgnoreReasons[reason];\n                                    });\n                                    if (activeReasons.length) {\n                                        // eslint-disable-next-line no-console\n                                        console.warn(\"Preload parameter of wavesurfer.load will be ignored because:\\n\t- \" + activeReasons.join(\"\\n\t- \"));\n                                        // stop invalid values from being used\n                                        preload = null;\n                                    }\n                                }\n                                // loadBuffer(url, peaks, duration) requires that url is a string\n                                // but users can pass in a HTMLMediaElement to WaveSurfer\n                                if (this.params.backend === \"WebAudio\" && url instanceof HTMLMediaElement) url = url.src;\n                                switch(this.params.backend){\n                                    case \"WebAudio\":\n                                        return this.loadBuffer(url, peaks, duration);\n                                    case \"MediaElement\":\n                                    case \"MediaElementWebAudio\":\n                                        return this.loadMediaElement(url, peaks, preload, duration);\n                                }\n                            }\n                        },\n                        {\n                            key: \"loadBuffer\",\n                            value: function loadBuffer(url, peaks, duration) {\n                                var _this11 = this;\n                                var load = function load(action) {\n                                    if (action) _this11.tmpEvents.push(_this11.once(\"ready\", action));\n                                    return _this11.getArrayBuffer(url, function(data) {\n                                        return _this11.loadArrayBuffer(data);\n                                    });\n                                };\n                                if (peaks) {\n                                    this.backend.setPeaks(peaks, duration);\n                                    this.drawBuffer();\n                                    this.fireEvent(\"waveform-ready\");\n                                    this.tmpEvents.push(this.once(\"interaction\", load));\n                                } else return load();\n                            }\n                        },\n                        {\n                            key: \"loadMediaElement\",\n                            value: function loadMediaElement(urlOrElt, peaks, preload, duration) {\n                                var _this12 = this;\n                                var url = urlOrElt;\n                                if (typeof urlOrElt === \"string\") this.backend.load(url, this.mediaContainer, peaks, preload);\n                                else {\n                                    var elt = urlOrElt;\n                                    this.backend.loadElt(elt, peaks);\n                                    // If peaks are not provided,\n                                    // url = element.src so we can get peaks with web audio\n                                    url = elt.src;\n                                }\n                                this.tmpEvents.push(this.backend.once(\"canplay\", function() {\n                                    // ignore when backend was already destroyed\n                                    if (!_this12.backend.destroyed) {\n                                        _this12.drawBuffer();\n                                        _this12.isReady = true;\n                                        _this12.fireEvent(\"ready\");\n                                    }\n                                }), this.backend.once(\"error\", function(err) {\n                                    return _this12.fireEvent(\"error\", err);\n                                }));\n                                // If peaks are provided, render them and fire the `waveform-ready` event.\n                                if (peaks) {\n                                    this.backend.setPeaks(peaks, duration);\n                                    this.drawBuffer();\n                                    this.fireEvent(\"waveform-ready\");\n                                }\n                                // If no pre-decoded peaks are provided, or are provided with\n                                // forceDecode flag, attempt to download the audio file and decode it\n                                // with Web Audio.\n                                if ((!peaks || this.params.forceDecode) && this.backend.supportsWebAudio()) this.getArrayBuffer(url, function(arraybuffer) {\n                                    _this12.decodeArrayBuffer(arraybuffer, function(buffer) {\n                                        _this12.backend.buffer = buffer;\n                                        _this12.backend.setPeaks(null);\n                                        _this12.drawBuffer();\n                                        _this12.fireEvent(\"waveform-ready\");\n                                    });\n                                });\n                            }\n                        },\n                        {\n                            key: \"decodeArrayBuffer\",\n                            value: function decodeArrayBuffer(arraybuffer, callback) {\n                                var _this13 = this;\n                                if (!this.isDestroyed) {\n                                    this.arraybuffer = arraybuffer;\n                                    this.backend.decodeArrayBuffer(arraybuffer, function(data) {\n                                        // Only use the decoded data if we haven't been destroyed or\n                                        // another decode started in the meantime\n                                        if (!_this13.isDestroyed && _this13.arraybuffer == arraybuffer) {\n                                            callback(data);\n                                            _this13.arraybuffer = null;\n                                        }\n                                    }, function() {\n                                        return _this13.fireEvent(\"error\", \"Error decoding audiobuffer\");\n                                    });\n                                }\n                            }\n                        },\n                        {\n                            key: \"getArrayBuffer\",\n                            value: function getArrayBuffer(url, callback) {\n                                var _this14 = this;\n                                var options = Object.assign({\n                                    url: url,\n                                    responseType: \"arraybuffer\"\n                                }, this.params.xhr);\n                                var request = util.fetchFile(options);\n                                this.currentRequest = request;\n                                this.tmpEvents.push(request.on(\"progress\", function(e) {\n                                    _this14.onProgress(e);\n                                }), request.on(\"success\", function(data) {\n                                    callback(data);\n                                    _this14.currentRequest = null;\n                                }), request.on(\"error\", function(e) {\n                                    _this14.fireEvent(\"error\", e);\n                                    _this14.currentRequest = null;\n                                }));\n                                return request;\n                            }\n                        },\n                        {\n                            key: \"onProgress\",\n                            value: function onProgress(e) {\n                                var percentComplete;\n                                if (e.lengthComputable) percentComplete = e.loaded / e.total;\n                                else // Approximate progress with an asymptotic\n                                // function, and assume downloads in the 1-3 MB range.\n                                percentComplete = e.loaded / (e.loaded + 1000000);\n                                this.fireEvent(\"loading\", Math.round(percentComplete * 100), e.target);\n                            }\n                        },\n                        {\n                            key: \"exportPCM\",\n                            value: function exportPCM(length, accuracy, noWindow, start, end) {\n                                length = length || 1024;\n                                start = start || 0;\n                                accuracy = accuracy || 10000;\n                                noWindow = noWindow || false;\n                                var peaks = this.backend.getPeaks(length, start, end);\n                                var arr = [].map.call(peaks, function(val) {\n                                    return Math.round(val * accuracy) / accuracy;\n                                });\n                                return new Promise(function(resolve, reject) {\n                                    if (!noWindow) {\n                                        var blobJSON = new Blob([\n                                            JSON.stringify(arr)\n                                        ], {\n                                            type: \"application/json;charset=utf-8\"\n                                        });\n                                        var objURL = URL.createObjectURL(blobJSON);\n                                        window.open(objURL);\n                                        URL.revokeObjectURL(objURL);\n                                    }\n                                    resolve(arr);\n                                });\n                            }\n                        },\n                        {\n                            key: \"exportImage\",\n                            value: function exportImage(format, quality, type) {\n                                if (!format) format = \"image/png\";\n                                if (!quality) quality = 1;\n                                if (!type) type = \"dataURL\";\n                                return this.drawer.getImage(format, quality, type);\n                            }\n                        },\n                        {\n                            key: \"cancelAjax\",\n                            value: function cancelAjax() {\n                                if (this.currentRequest && this.currentRequest.controller) {\n                                    // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n                                    // See: Wavesurfer issue #2042\n                                    // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n                                    if (this.currentRequest._reader) // Ignoring exceptions thrown by call to cancel()\n                                    this.currentRequest._reader.cancel().catch(function(err) {});\n                                    this.currentRequest.controller.abort();\n                                    this.currentRequest = null;\n                                }\n                            }\n                        },\n                        {\n                            key: \"clearTmpEvents\",\n                            value: function clearTmpEvents() {\n                                this.tmpEvents.forEach(function(e) {\n                                    return e.un();\n                                });\n                            }\n                        },\n                        {\n                            key: \"empty\",\n                            value: function empty() {\n                                if (!this.backend.isPaused()) {\n                                    this.stop();\n                                    this.backend.disconnectSource();\n                                }\n                                this.isReady = false;\n                                this.cancelAjax();\n                                this.clearTmpEvents();\n                                // empty drawer\n                                this.drawer.progress(0);\n                                this.drawer.setWidth(0);\n                                this.drawer.drawPeaks({\n                                    length: this.drawer.getWidth()\n                                }, 0);\n                            }\n                        },\n                        {\n                            key: \"destroy\",\n                            value: function destroy() {\n                                this.destroyAllPlugins();\n                                this.fireEvent(\"destroy\");\n                                this.cancelAjax();\n                                this.clearTmpEvents();\n                                this.unAll();\n                                if (this.params.responsive !== false) {\n                                    window.removeEventListener(\"resize\", this._onResize, true);\n                                    window.removeEventListener(\"orientationchange\", this._onResize, true);\n                                }\n                                if (this.backend) {\n                                    this.backend.destroy();\n                                    // clears memory usage\n                                    this.backend = null;\n                                }\n                                if (this.drawer) this.drawer.destroy();\n                                this.isDestroyed = true;\n                                this.isReady = false;\n                                this.arraybuffer = null;\n                            }\n                        }\n                    ], [\n                        {\n                            key: \"create\",\n                            value: /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */ function create(params) {\n                                var wavesurfer = new WaveSurfer(params);\n                                return wavesurfer.init();\n                            }\n                        }\n                    ]);\n                    return WaveSurfer;\n                }(util.Observer);\n                exports[\"default\"] = WaveSurfer;\n                _defineProperty(WaveSurfer, \"VERSION\", \"6.6.4\");\n                /**\n * Functions in the `util` property are available as a static property of the\n * WaveSurfer class\n *\n * @type {Object}\n * @example\n * WaveSurfer.util.style(myElement, { background: 'blue' });\n */ _defineProperty(WaveSurfer, \"util\", util);\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./src/webaudio.js\": /*!*************************!*\\\n  !*** ./src/webaudio.js ***!\n  \\*************************/ /***/ (module1, exports, __webpack_require__)=>{\n                \"use strict\";\n                Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n                exports[\"default\"] = void 0;\n                var util = _interopRequireWildcard(__webpack_require__(/*! ./util */ \"./src/util/index.js\"));\n                function _getRequireWildcardCache(nodeInterop) {\n                    if (typeof WeakMap !== \"function\") return null;\n                    var cacheBabelInterop = new WeakMap();\n                    var cacheNodeInterop = new WeakMap();\n                    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n                        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n                    })(nodeInterop);\n                }\n                function _interopRequireWildcard(obj, nodeInterop) {\n                    if (!nodeInterop && obj && obj.__esModule) return obj;\n                    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") return {\n                        default: obj\n                    };\n                    var cache = _getRequireWildcardCache(nodeInterop);\n                    if (cache && cache.has(obj)) return cache.get(obj);\n                    var newObj = {};\n                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n                    for(var key in obj)if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n                        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n                        if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n                        else newObj[key] = obj[key];\n                    }\n                    newObj.default = obj;\n                    if (cache) cache.set(obj, newObj);\n                    return newObj;\n                }\n                function _typeof(obj) {\n                    \"@babel/helpers - typeof\";\n                    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n                        return typeof obj;\n                    } : function(obj) {\n                        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    }, _typeof(obj);\n                }\n                function _classCallCheck(instance, Constructor) {\n                    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n                }\n                function _defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n                    }\n                }\n                function _createClass(Constructor, protoProps, staticProps) {\n                    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) _defineProperties(Constructor, staticProps);\n                    Object.defineProperty(Constructor, \"prototype\", {\n                        writable: false\n                    });\n                    return Constructor;\n                }\n                function _inherits(subClass, superClass) {\n                    if (typeof superClass !== \"function\" && superClass !== null) throw new TypeError(\"Super expression must either be null or a function\");\n                    subClass.prototype = Object.create(superClass && superClass.prototype, {\n                        constructor: {\n                            value: subClass,\n                            writable: true,\n                            configurable: true\n                        }\n                    });\n                    Object.defineProperty(subClass, \"prototype\", {\n                        writable: false\n                    });\n                    if (superClass) _setPrototypeOf(subClass, superClass);\n                }\n                function _setPrototypeOf(o, p) {\n                    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n                        o.__proto__ = p;\n                        return o;\n                    };\n                    return _setPrototypeOf(o, p);\n                }\n                function _createSuper(Derived) {\n                    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n                    return function _createSuperInternal() {\n                        var Super = _getPrototypeOf(Derived), result;\n                        if (hasNativeReflectConstruct) {\n                            var NewTarget = _getPrototypeOf(this).constructor;\n                            result = Reflect.construct(Super, arguments, NewTarget);\n                        } else result = Super.apply(this, arguments);\n                        return _possibleConstructorReturn(this, result);\n                    };\n                }\n                function _possibleConstructorReturn(self1, call) {\n                    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) return call;\n                    else if (call !== void 0) throw new TypeError(\"Derived constructors may only return object or undefined\");\n                    return _assertThisInitialized(self1);\n                }\n                function _assertThisInitialized(self1) {\n                    if (self1 === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                    return self1;\n                }\n                function _isNativeReflectConstruct() {\n                    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n                    if (Reflect.construct.sham) return false;\n                    if (typeof Proxy === \"function\") return true;\n                    try {\n                        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n                        return true;\n                    } catch (e) {\n                        return false;\n                    }\n                }\n                function _getPrototypeOf(o) {\n                    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n                        return o.__proto__ || Object.getPrototypeOf(o);\n                    };\n                    return _getPrototypeOf(o);\n                }\n                function _defineProperty(obj, key, value) {\n                    key = _toPropertyKey(key);\n                    if (key in obj) Object.defineProperty(obj, key, {\n                        value: value,\n                        enumerable: true,\n                        configurable: true,\n                        writable: true\n                    });\n                    else obj[key] = value;\n                    return obj;\n                }\n                function _toPropertyKey(arg) {\n                    var key = _toPrimitive(arg, \"string\");\n                    return _typeof(key) === \"symbol\" ? key : String(key);\n                }\n                function _toPrimitive(input, hint) {\n                    if (_typeof(input) !== \"object\" || input === null) return input;\n                    var prim = input[Symbol.toPrimitive];\n                    if (prim !== undefined) {\n                        var res = prim.call(input, hint || \"default\");\n                        if (_typeof(res) !== \"object\") return res;\n                        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                    }\n                    return (hint === \"string\" ? String : Number)(input);\n                }\n                // using constants to prevent someone writing the string wrong\n                var PLAYING = \"playing\";\n                var PAUSED = \"paused\";\n                var FINISHED = \"finished\";\n                /**\n * WebAudio backend\n *\n * @extends {util.Observer}\n */ var WebAudio = /*#__PURE__*/ function(_util$Observer) {\n                    _inherits(WebAudio, _util$Observer);\n                    var _super = _createSuper(WebAudio);\n                    /**\n   * Construct the backend\n   *\n   * @param {WavesurferParams} params Wavesurfer parameters\n   */ function WebAudio(params) {\n                        var _defineProperty2, _this$states;\n                        var _this;\n                        _classCallCheck(this, WebAudio);\n                        _this = _super.call(this);\n                        /** @private */ /** audioContext: allows to process audio with WebAudio API */ _defineProperty(_assertThisInitialized(_this), \"audioContext\", null);\n                        /** @private */ _defineProperty(_assertThisInitialized(_this), \"stateBehaviors\", (_defineProperty2 = {}, _defineProperty(_defineProperty2, PLAYING, {\n                            init: function init() {\n                                this.addOnAudioProcess();\n                            },\n                            getPlayedPercents: function getPlayedPercents() {\n                                var duration = this.getDuration();\n                                return this.getCurrentTime() / duration || 0;\n                            },\n                            getCurrentTime: function getCurrentTime() {\n                                return this.startPosition + this.getPlayedTime();\n                            }\n                        }), _defineProperty(_defineProperty2, PAUSED, {\n                            init: function init() {},\n                            getPlayedPercents: function getPlayedPercents() {\n                                var duration = this.getDuration();\n                                return this.getCurrentTime() / duration || 0;\n                            },\n                            getCurrentTime: function getCurrentTime() {\n                                return this.startPosition;\n                            }\n                        }), _defineProperty(_defineProperty2, FINISHED, {\n                            init: function init() {\n                                this.fireEvent(\"finish\");\n                            },\n                            getPlayedPercents: function getPlayedPercents() {\n                                return 1;\n                            },\n                            getCurrentTime: function getCurrentTime() {\n                                return this.getDuration();\n                            }\n                        }), _defineProperty2));\n                        _this.params = params;\n                        /** ac: Audio Context instance */ _this.ac = params.audioContext || (_this.supportsWebAudio() ? _this.getAudioContext() : {});\n                        /**@private */ _this.lastPlay = _this.ac.currentTime;\n                        /** @private */ _this.startPosition = 0;\n                        /** @private */ _this.scheduledPause = null;\n                        /** @private */ _this.states = (_this$states = {}, _defineProperty(_this$states, PLAYING, Object.create(_this.stateBehaviors[PLAYING])), _defineProperty(_this$states, PAUSED, Object.create(_this.stateBehaviors[PAUSED])), _defineProperty(_this$states, FINISHED, Object.create(_this.stateBehaviors[FINISHED])), _this$states);\n                        /** @private */ _this.buffer = null;\n                        /** @private */ _this.filters = [];\n                        /** gainNode: allows to control audio volume */ _this.gainNode = null;\n                        /** @private */ _this.mergedPeaks = null;\n                        /** @private */ _this.offlineAc = null;\n                        /** @private */ _this.peaks = null;\n                        /** @private */ _this.playbackRate = 1;\n                        /** analyser: provides audio analysis information */ _this.analyser = null;\n                        /** scriptNode: allows processing audio */ _this.scriptNode = null;\n                        /** @private */ _this.source = null;\n                        /** @private */ _this.splitPeaks = [];\n                        /** @private */ _this.state = null;\n                        /** @private */ _this.explicitDuration = params.duration;\n                        /** @private */ _this.sinkStreamDestination = null;\n                        /** @private */ _this.sinkAudioElement = null;\n                        /**\n     * Boolean indicating if the backend was destroyed.\n     */ _this.destroyed = false;\n                        return _this;\n                    }\n                    /**\n   * Initialise the backend, called in `wavesurfer.createBackend()`\n   */ _createClass(WebAudio, [\n                        {\n                            key: \"supportsWebAudio\",\n                            value: /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */ function supportsWebAudio() {\n                                return !!(window.AudioContext || window.webkitAudioContext);\n                            }\n                        },\n                        {\n                            key: \"getAudioContext\",\n                            value: function getAudioContext() {\n                                if (!window.WaveSurferAudioContext) window.WaveSurferAudioContext = new (window.AudioContext || window.webkitAudioContext)();\n                                return window.WaveSurferAudioContext;\n                            }\n                        },\n                        {\n                            key: \"getOfflineAudioContext\",\n                            value: function getOfflineAudioContext(sampleRate) {\n                                if (!window.WaveSurferOfflineAudioContext) window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext || window.webkitOfflineAudioContext)(1, 2, sampleRate);\n                                return window.WaveSurferOfflineAudioContext;\n                            }\n                        },\n                        {\n                            key: \"init\",\n                            value: function init() {\n                                this.createVolumeNode();\n                                this.createScriptNode();\n                                this.createAnalyserNode();\n                                this.setState(PAUSED);\n                                this.setPlaybackRate(this.params.audioRate);\n                                this.setLength(0);\n                            }\n                        },\n                        {\n                            key: \"disconnectFilters\",\n                            value: function disconnectFilters() {\n                                if (this.filters) {\n                                    this.filters.forEach(function(filter) {\n                                        filter && filter.disconnect();\n                                    });\n                                    this.filters = null;\n                                    // Reconnect direct path\n                                    this.analyser.connect(this.gainNode);\n                                }\n                            }\n                        },\n                        {\n                            key: \"setState\",\n                            value: function setState(state) {\n                                if (this.state !== this.states[state]) {\n                                    this.state = this.states[state];\n                                    this.state.init.call(this);\n                                }\n                            }\n                        },\n                        {\n                            key: \"setFilter\",\n                            value: function setFilter() {\n                                for(var _len = arguments.length, filters = new Array(_len), _key = 0; _key < _len; _key++)filters[_key] = arguments[_key];\n                                this.setFilters(filters);\n                            }\n                        },\n                        {\n                            key: \"setFilters\",\n                            value: function setFilters(filters) {\n                                // Remove existing filters\n                                this.disconnectFilters();\n                                // Insert filters if filter array not empty\n                                if (filters && filters.length) {\n                                    this.filters = filters;\n                                    // Disconnect direct path before inserting filters\n                                    this.analyser.disconnect();\n                                    // Connect each filter in turn\n                                    filters.reduce(function(prev, curr) {\n                                        prev.connect(curr);\n                                        return curr;\n                                    }, this.analyser).connect(this.gainNode);\n                                }\n                            }\n                        },\n                        {\n                            key: \"createScriptNode\",\n                            value: function createScriptNode() {\n                                if (this.params.audioScriptProcessor) {\n                                    this.scriptNode = this.params.audioScriptProcessor;\n                                    this.scriptNode.connect(this.ac.destination);\n                                }\n                            }\n                        },\n                        {\n                            key: \"addOnAudioProcess\",\n                            value: function addOnAudioProcess() {\n                                var _this2 = this;\n                                var loop = function loop() {\n                                    var time = _this2.getCurrentTime();\n                                    if (time >= _this2.getDuration() && _this2.state !== _this2.states[FINISHED]) {\n                                        _this2.setState(FINISHED);\n                                        _this2.fireEvent(\"pause\");\n                                    } else if (time >= _this2.scheduledPause && _this2.state !== _this2.states[PAUSED]) _this2.pause();\n                                    else if (_this2.state === _this2.states[PLAYING]) {\n                                        _this2.fireEvent(\"audioprocess\", time);\n                                        util.frame(loop)();\n                                    }\n                                };\n                                loop();\n                            }\n                        },\n                        {\n                            key: \"createAnalyserNode\",\n                            value: function createAnalyserNode() {\n                                this.analyser = this.ac.createAnalyser();\n                                this.analyser.connect(this.gainNode);\n                            }\n                        },\n                        {\n                            key: \"createVolumeNode\",\n                            value: function createVolumeNode() {\n                                // Create gain node using the AudioContext\n                                if (this.ac.createGain) this.gainNode = this.ac.createGain();\n                                else this.gainNode = this.ac.createGainNode();\n                                // Add the gain node to the graph\n                                this.gainNode.connect(this.ac.destination);\n                            }\n                        },\n                        {\n                            key: \"setSinkId\",\n                            value: function setSinkId(deviceId) {\n                                if (deviceId) {\n                                    /**\n         * The webaudio API doesn't currently support setting the device\n         * output. Here we create an HTMLAudioElement, connect the\n         * webaudio stream to that element and setSinkId there.\n         */ if (!this.sinkAudioElement) {\n                                        this.sinkAudioElement = new window.Audio();\n                                        // autoplay is necessary since we're not invoking .play()\n                                        this.sinkAudioElement.autoplay = true;\n                                    }\n                                    if (!this.sinkAudioElement.setSinkId) return Promise.reject(new Error(\"setSinkId is not supported in your browser\"));\n                                    if (!this.sinkStreamDestination) this.sinkStreamDestination = this.ac.createMediaStreamDestination();\n                                    this.gainNode.disconnect();\n                                    this.gainNode.connect(this.sinkStreamDestination);\n                                    this.sinkAudioElement.srcObject = this.sinkStreamDestination.stream;\n                                    return this.sinkAudioElement.setSinkId(deviceId);\n                                } else return Promise.reject(new Error(\"Invalid deviceId: \" + deviceId));\n                            }\n                        },\n                        {\n                            key: \"setVolume\",\n                            value: function setVolume(value) {\n                                this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n                            }\n                        },\n                        {\n                            key: \"getVolume\",\n                            value: function getVolume() {\n                                return this.gainNode.gain.value;\n                            }\n                        },\n                        {\n                            key: \"decodeArrayBuffer\",\n                            value: function decodeArrayBuffer(arraybuffer, callback, errback) {\n                                if (!this.offlineAc) this.offlineAc = this.getOfflineAudioContext(this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100);\n                                if (\"webkitAudioContext\" in window) // Safari: no support for Promise-based decodeAudioData enabled\n                                // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n                                this.offlineAc.decodeAudioData(arraybuffer, function(data) {\n                                    return callback(data);\n                                }, errback);\n                                else this.offlineAc.decodeAudioData(arraybuffer).then(function(data) {\n                                    return callback(data);\n                                }).catch(function(err) {\n                                    return errback(err);\n                                });\n                            }\n                        },\n                        {\n                            key: \"setPeaks\",\n                            value: function setPeaks(peaks, duration) {\n                                if (duration != null) this.explicitDuration = duration;\n                                this.peaks = peaks;\n                            }\n                        },\n                        {\n                            key: \"setLength\",\n                            value: function setLength(length) {\n                                // No resize, we can preserve the cached peaks.\n                                if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) return;\n                                this.splitPeaks = [];\n                                this.mergedPeaks = [];\n                                // Set the last element of the sparse array so the peak arrays are\n                                // appropriately sized for other calculations.\n                                var channels = this.buffer ? this.buffer.numberOfChannels : 1;\n                                var c;\n                                for(c = 0; c < channels; c++){\n                                    this.splitPeaks[c] = [];\n                                    this.splitPeaks[c][2 * (length - 1)] = 0;\n                                    this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n                                }\n                                this.mergedPeaks[2 * (length - 1)] = 0;\n                                this.mergedPeaks[2 * (length - 1) + 1] = 0;\n                            }\n                        },\n                        {\n                            key: \"getPeaks\",\n                            value: function getPeaks(length, first, last) {\n                                if (this.peaks) return this.peaks;\n                                if (!this.buffer) return [];\n                                first = first || 0;\n                                last = last || length - 1;\n                                this.setLength(length);\n                                if (!this.buffer) return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n                                /**\n       * The following snippet fixes a buffering data issue on the Safari\n       * browser which returned undefined It creates the missing buffer based\n       * on 1 channel, 4096 samples and the sampleRate from the current\n       * webaudio context 4096 samples seemed to be the best fit for rendering\n       * will review this code once a stable version of Safari TP is out\n       */ if (!this.buffer.length) {\n                                    var newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n                                    this.buffer = newBuffer.buffer;\n                                }\n                                var sampleSize = this.buffer.length / length;\n                                var sampleStep = ~~(sampleSize / 10) || 1;\n                                var channels = this.buffer.numberOfChannels;\n                                var c;\n                                for(c = 0; c < channels; c++){\n                                    var peaks = this.splitPeaks[c];\n                                    var chan = this.buffer.getChannelData(c);\n                                    var i = void 0;\n                                    for(i = first; i <= last; i++){\n                                        var start = ~~(i * sampleSize);\n                                        var end = ~~(start + sampleSize);\n                                        /**\n           * Initialize the max and min to the first sample of this\n           * subrange, so that even if the samples are entirely\n           * on one side of zero, we still return the true max and\n           * min values in the subrange.\n           */ var min = chan[start];\n                                        var max = min;\n                                        var j = void 0;\n                                        for(j = start; j < end; j += sampleStep){\n                                            var value = chan[j];\n                                            if (value > max) max = value;\n                                            if (value < min) min = value;\n                                        }\n                                        peaks[2 * i] = max;\n                                        peaks[2 * i + 1] = min;\n                                        if (c == 0 || max > this.mergedPeaks[2 * i]) this.mergedPeaks[2 * i] = max;\n                                        if (c == 0 || min < this.mergedPeaks[2 * i + 1]) this.mergedPeaks[2 * i + 1] = min;\n                                    }\n                                }\n                                return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n                            }\n                        },\n                        {\n                            key: \"getPlayedPercents\",\n                            value: function getPlayedPercents() {\n                                return this.state.getPlayedPercents.call(this);\n                            }\n                        },\n                        {\n                            key: \"disconnectSource\",\n                            value: function disconnectSource() {\n                                if (this.source) this.source.disconnect();\n                            }\n                        },\n                        {\n                            key: \"destroyWebAudio\",\n                            value: function destroyWebAudio() {\n                                this.disconnectFilters();\n                                this.disconnectSource();\n                                this.gainNode.disconnect();\n                                this.scriptNode && this.scriptNode.disconnect();\n                                this.analyser.disconnect();\n                                // close the audioContext if closeAudioContext option is set to true\n                                if (this.params.closeAudioContext) {\n                                    // check if browser supports AudioContext.close()\n                                    if (typeof this.ac.close === \"function\" && this.ac.state != \"closed\") this.ac.close();\n                                    // clear the reference to the audiocontext\n                                    this.ac = null;\n                                    // clear the actual audiocontext, either passed as param or the\n                                    // global singleton\n                                    if (!this.params.audioContext) window.WaveSurferAudioContext = null;\n                                    else this.params.audioContext = null;\n                                    // clear the offlineAudioContext\n                                    window.WaveSurferOfflineAudioContext = null;\n                                }\n                                // disconnect resources used by setSinkId\n                                if (this.sinkStreamDestination) {\n                                    this.sinkAudioElement.pause();\n                                    this.sinkAudioElement.srcObject = null;\n                                    this.sinkStreamDestination.disconnect();\n                                    this.sinkStreamDestination = null;\n                                }\n                            }\n                        },\n                        {\n                            key: \"destroy\",\n                            value: function destroy() {\n                                if (!this.isPaused()) this.pause();\n                                this.unAll();\n                                this.buffer = null;\n                                this.destroyed = true;\n                                this.destroyWebAudio();\n                            }\n                        },\n                        {\n                            key: \"load\",\n                            value: function load(buffer) {\n                                this.startPosition = 0;\n                                this.lastPlay = this.ac.currentTime;\n                                this.buffer = buffer;\n                                this.createSource();\n                            }\n                        },\n                        {\n                            key: \"createSource\",\n                            value: function createSource() {\n                                this.disconnectSource();\n                                this.source = this.ac.createBufferSource();\n                                // adjust for old browsers\n                                this.source.start = this.source.start || this.source.noteGrainOn;\n                                this.source.stop = this.source.stop || this.source.noteOff;\n                                this.setPlaybackRate(this.playbackRate);\n                                this.source.buffer = this.buffer;\n                                this.source.connect(this.analyser);\n                            }\n                        },\n                        {\n                            key: \"resumeAudioContext\",\n                            value: function resumeAudioContext() {\n                                if (this.ac.state == \"suspended\") this.ac.resume && this.ac.resume();\n                            }\n                        },\n                        {\n                            key: \"isPaused\",\n                            value: function isPaused() {\n                                return this.state !== this.states[PLAYING];\n                            }\n                        },\n                        {\n                            key: \"getDuration\",\n                            value: function getDuration() {\n                                if (this.explicitDuration) return this.explicitDuration;\n                                if (!this.buffer) return 0;\n                                return this.buffer.duration;\n                            }\n                        },\n                        {\n                            key: \"seekTo\",\n                            value: function seekTo(start, end) {\n                                if (!this.buffer) return;\n                                this.scheduledPause = null;\n                                if (start == null) {\n                                    start = this.getCurrentTime();\n                                    if (start >= this.getDuration()) start = 0;\n                                }\n                                if (end == null) end = this.getDuration();\n                                this.startPosition = start;\n                                this.lastPlay = this.ac.currentTime;\n                                if (this.state === this.states[FINISHED]) this.setState(PAUSED);\n                                return {\n                                    start: start,\n                                    end: end\n                                };\n                            }\n                        },\n                        {\n                            key: \"getPlayedTime\",\n                            value: function getPlayedTime() {\n                                return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n                            }\n                        },\n                        {\n                            key: \"play\",\n                            value: function play(start, end) {\n                                if (!this.buffer) return;\n                                // need to re-create source on each playback\n                                this.createSource();\n                                var adjustedTime = this.seekTo(start, end);\n                                start = adjustedTime.start;\n                                end = adjustedTime.end;\n                                this.scheduledPause = end;\n                                this.source.start(0, start);\n                                this.resumeAudioContext();\n                                this.setState(PLAYING);\n                                this.fireEvent(\"play\");\n                            }\n                        },\n                        {\n                            key: \"pause\",\n                            value: function pause() {\n                                this.scheduledPause = null;\n                                this.startPosition += this.getPlayedTime();\n                                try {\n                                    this.source && this.source.stop(0);\n                                } catch (err) {\n                                // Calling stop can throw the following 2 errors:\n                                // - RangeError (The value specified for when is negative.)\n                                // - InvalidStateNode (The node has not been started by calling start().)\n                                // We can safely ignore both errors, because:\n                                // - The range is surely correct\n                                // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n                                }\n                                this.setState(PAUSED);\n                                this.fireEvent(\"pause\");\n                            }\n                        },\n                        {\n                            key: \"getCurrentTime\",\n                            value: function getCurrentTime() {\n                                return this.state.getCurrentTime.call(this);\n                            }\n                        },\n                        {\n                            key: \"getPlaybackRate\",\n                            value: function getPlaybackRate() {\n                                return this.playbackRate;\n                            }\n                        },\n                        {\n                            key: \"setPlaybackRate\",\n                            value: function setPlaybackRate(value) {\n                                this.playbackRate = value || 1;\n                                this.source && this.source.playbackRate.setValueAtTime(this.playbackRate, this.ac.currentTime);\n                            }\n                        },\n                        {\n                            key: \"setPlayEnd\",\n                            value: function setPlayEnd(end) {\n                                this.scheduledPause = end;\n                            }\n                        }\n                    ]);\n                    return WebAudio;\n                }(util.Observer);\n                exports[\"default\"] = WebAudio;\n                module1.exports = exports.default;\n            /***/ },\n            /***/ \"./node_modules/debounce/index.js\": /*!****************************************!*\\\n  !*** ./node_modules/debounce/index.js ***!\n  \\****************************************/ /***/ (module1)=>{\n                /**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */ function debounce(func, wait, immediate) {\n                    var timeout, args, context, timestamp, result;\n                    if (null == wait) wait = 100;\n                    function later() {\n                        var last = Date.now() - timestamp;\n                        if (last < wait && last >= 0) timeout = setTimeout(later, wait - last);\n                        else {\n                            timeout = null;\n                            if (!immediate) {\n                                result = func.apply(context, args);\n                                context = args = null;\n                            }\n                        }\n                    }\n                    var debounced = function() {\n                        context = this;\n                        args = arguments;\n                        timestamp = Date.now();\n                        var callNow = immediate && !timeout;\n                        if (!timeout) timeout = setTimeout(later, wait);\n                        if (callNow) {\n                            result = func.apply(context, args);\n                            context = args = null;\n                        }\n                        return result;\n                    };\n                    debounced.clear = function() {\n                        if (timeout) {\n                            clearTimeout(timeout);\n                            timeout = null;\n                        }\n                    };\n                    debounced.flush = function() {\n                        if (timeout) {\n                            result = func.apply(context, args);\n                            context = args = null;\n                            clearTimeout(timeout);\n                            timeout = null;\n                        }\n                    };\n                    return debounced;\n                }\n                // Adds compatibility for ES modules\n                debounce.debounce = debounce;\n                module1.exports = debounce;\n            /***/ }\n        };\n        /************************************************************************/ /******/ // The module cache\n        /******/ var __webpack_module_cache__ = {};\n        /******/ /******/ // The require function\n        /******/ function __webpack_require__(moduleId) {\n            /******/ // Check if module is in cache\n            /******/ var cachedModule = __webpack_module_cache__[moduleId];\n            /******/ if (cachedModule !== undefined) /******/ return cachedModule.exports;\n            /******/ // Create a new module (and put it into the cache)\n            /******/ var module1 = __webpack_module_cache__[moduleId] = {\n                /******/ // no module.id needed\n                /******/ // no module.loaded needed\n                /******/ exports: {}\n            };\n            /******/ /******/ // Execute the module function\n            /******/ __webpack_modules__[moduleId](module1, module1.exports, __webpack_require__);\n            /******/ /******/ // Return the exports of the module\n            /******/ return module1.exports;\n        /******/ }\n        /******/ /************************************************************************/ /******/ /******/ // startup\n        /******/ // Load entry module and return exports\n        /******/ // This entry module is referenced by other modules so it can't be inlined\n        /******/ var __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n        /******/ /******/ return __webpack_exports__;\n    /******/ })();\n});\n\n\n/*!\n  * PhotoSwipe Lightbox 5.3.7 - https://photoswipe.com\n  * (c) 2023 Dmytro Semenov\n  */ /** @typedef {import('../photoswipe.js').Point} Point */ /**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */ function $f069a6f367b4d8a2$var$createElement(className, tagName, appendToEl) {\n    const el = document.createElement(tagName);\n    if (className) el.className = className;\n    if (appendToEl) appendToEl.appendChild(el);\n    return el;\n}\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */ function $f069a6f367b4d8a2$var$toTransformString(x, y, scale) {\n    let propValue = `translate3d(${x}px,${y || 0}px,0)`;\n    if (scale !== undefined) propValue += ` scale3d(${scale},${scale},1)`;\n    return propValue;\n}\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */ function $f069a6f367b4d8a2$var$setWidthHeight(el, w, h) {\n    el.style.width = typeof w === \"number\" ? `${w}px` : w;\n    el.style.height = typeof h === \"number\" ? `${h}px` : h;\n}\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */ /** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */ const $f069a6f367b4d8a2$var$LOAD_STATE = {\n    IDLE: \"idle\",\n    LOADING: \"loading\",\n    LOADED: \"loaded\",\n    ERROR: \"error\"\n};\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */ function $f069a6f367b4d8a2$var$specialKeyUsed(e) {\n    return \"button\" in e && e.button === 1 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\n}\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */ function $f069a6f367b4d8a2$var$getElementsFromOption(option, legacySelector, parent = document) {\n    /** @type {HTMLElement[]} */ let elements = [];\n    if (option instanceof Element) elements = [\n        option\n    ];\n    else if (option instanceof NodeList || Array.isArray(option)) elements = Array.from(option);\n    else {\n        const selector = typeof option === \"string\" ? option : legacySelector;\n        if (selector) elements = Array.from(parent.querySelectorAll(selector));\n    }\n    return elements;\n}\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */ function $f069a6f367b4d8a2$var$isPswpClass(fn) {\n    return typeof fn === \"function\" && fn.prototype && fn.prototype.goTo;\n}\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */ function $f069a6f367b4d8a2$var$isSafari() {\n    return !!(navigator.vendor && navigator.vendor.match(/apple/i));\n}\n/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */ /** @typedef {import('../photoswipe.js').default} PhotoSwipe */ /** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */ /** @typedef {import('../photoswipe.js').DataSource} DataSource */ /** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */ /** @typedef {import('../slide/content.js').default} ContentDefault */ /** @typedef {import('../slide/slide.js').default} Slide */ /** @typedef {import('../slide/slide.js').SlideData} SlideData */ /** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */ /** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */ /**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */ /** @typedef {{ x?: number; y?: number }} Point */ /**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */ /**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thubmnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thubmnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n */ /**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */ /**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */ /**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */ /**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */ class $f069a6f367b4d8a2$var$PhotoSwipeEvent {\n    /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */ constructor(type, details){\n        this.type = type;\n        this.defaultPrevented = false;\n        if (details) Object.assign(this, details);\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n}\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */ class $f069a6f367b4d8a2$var$Eventable {\n    constructor(){\n        /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */ this._listeners = {};\n        /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */ this._filters = {};\n        /** @type {PhotoSwipe | undefined} */ this.pswp = undefined;\n        /** @type {PhotoSwipeOptions | undefined} */ this.options = undefined;\n    }\n    /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */ addFilter(name, fn, priority = 100) {\n        if (!this._filters[name]) this._filters[name] = [];\n        this._filters[name]?.push({\n            fn: fn,\n            priority: priority\n        });\n        this._filters[name]?.sort((f1, f2)=>f1.priority - f2.priority);\n        this.pswp?.addFilter(name, fn, priority);\n    }\n    /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */ removeFilter(name, fn) {\n        if (this._filters[name]) // @ts-expect-error\n        this._filters[name] = this._filters[name].filter((filter)=>filter.fn !== fn);\n        if (this.pswp) this.pswp.removeFilter(name, fn);\n    }\n    /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */ applyFilters(name, ...args) {\n        this._filters[name]?.forEach((filter)=>{\n            // @ts-expect-error\n            args[0] = filter.fn.apply(this, args);\n        });\n        return args[0];\n    }\n    /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */ on(name, fn) {\n        if (!this._listeners[name]) this._listeners[name] = [];\n        this._listeners[name]?.push(fn);\n        // When binding events to lightbox,\n        // also bind events to PhotoSwipe Core,\n        // if it's open.\n        this.pswp?.on(name, fn);\n    }\n    /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */ off(name, fn) {\n        if (this._listeners[name]) // @ts-expect-error\n        this._listeners[name] = this._listeners[name].filter((listener)=>fn !== listener);\n        this.pswp?.off(name, fn);\n    }\n    /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */ dispatch(name, details) {\n        if (this.pswp) return this.pswp.dispatch(name, details);\n        const event = /** @type {AugmentedEvent<T>} */ new $f069a6f367b4d8a2$var$PhotoSwipeEvent(name, details);\n        this._listeners[name]?.forEach((listener)=>{\n            listener.call(this, event);\n        });\n        return event;\n    }\n}\nclass $f069a6f367b4d8a2$var$Placeholder {\n    /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */ constructor(imageSrc, container){\n        // Create placeholder\n        // (stretched thumbnail or simple div behind the main image)\n        /** @type {HTMLImageElement | HTMLDivElement | null} */ this.element = $f069a6f367b4d8a2$var$createElement(\"pswp__img pswp__img--placeholder\", imageSrc ? \"img\" : \"div\", container);\n        if (imageSrc) {\n            const imgEl = /** @type {HTMLImageElement} */ this.element;\n            imgEl.decoding = \"async\";\n            imgEl.alt = \"\";\n            imgEl.src = imageSrc;\n            imgEl.setAttribute(\"role\", \"presentation\");\n        }\n        this.element.setAttribute(\"aria-hidden\", \"true\");\n    }\n    /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */ setDisplayedSize(width, height) {\n        if (!this.element) return;\n        if (this.element.tagName === \"IMG\") {\n            // Use transform scale() to modify img placeholder size\n            // (instead of changing width/height directly).\n            // This helps with performance, specifically in iOS15 Safari.\n            $f069a6f367b4d8a2$var$setWidthHeight(this.element, 250, \"auto\");\n            this.element.style.transformOrigin = \"0 0\";\n            this.element.style.transform = $f069a6f367b4d8a2$var$toTransformString(0, 0, width / 250);\n        } else $f069a6f367b4d8a2$var$setWidthHeight(this.element, width, height);\n    }\n    destroy() {\n        if (this.element?.parentNode) this.element.remove();\n        this.element = null;\n    }\n}\n/** @typedef {import('./slide.js').default} Slide */ /** @typedef {import('./slide.js').SlideData} SlideData */ /** @typedef {import('../core/base.js').default} PhotoSwipeBase */ /** @typedef {import('../util/util.js').LoadState} LoadState */ class $f069a6f367b4d8a2$var$Content {\n    /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */ constructor(itemData, instance, index){\n        this.instance = instance;\n        this.data = itemData;\n        this.index = index;\n        /** @type {HTMLImageElement | HTMLDivElement | undefined} */ this.element = undefined;\n        /** @type {Placeholder | undefined} */ this.placeholder = undefined;\n        /** @type {Slide | undefined} */ this.slide = undefined;\n        this.displayedImageWidth = 0;\n        this.displayedImageHeight = 0;\n        this.width = Number(this.data.w) || Number(this.data.width) || 0;\n        this.height = Number(this.data.h) || Number(this.data.height) || 0;\n        this.isAttached = false;\n        this.hasSlide = false;\n        this.isDecoding = false;\n        /** @type {LoadState} */ this.state = $f069a6f367b4d8a2$var$LOAD_STATE.IDLE;\n        if (this.data.type) this.type = this.data.type;\n        else if (this.data.src) this.type = \"image\";\n        else this.type = \"html\";\n        this.instance.dispatch(\"contentInit\", {\n            content: this\n        });\n    }\n    removePlaceholder() {\n        if (this.placeholder && !this.keepPlaceholder()) // With delay, as image might be loaded, but not rendered\n        setTimeout(()=>{\n            if (this.placeholder) {\n                this.placeholder.destroy();\n                this.placeholder = undefined;\n            }\n        }, 1000);\n    }\n    /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */ load(isLazy, reload) {\n        if (this.slide && this.usePlaceholder()) {\n            if (!this.placeholder) {\n                const placeholderSrc = this.instance.applyFilters(\"placeholderSrc\", // use  image-based placeholder only for the first slide,\n                // as rendering (even small stretched thumbnail) is an expensive operation\n                this.data.msrc && this.slide.isFirstSlide ? this.data.msrc : false, this);\n                this.placeholder = new $f069a6f367b4d8a2$var$Placeholder(placeholderSrc, this.slide.container);\n            } else {\n                const placeholderEl = this.placeholder.element;\n                // Add placeholder to DOM if it was already created\n                if (placeholderEl && !placeholderEl.parentElement) this.slide.container.prepend(placeholderEl);\n            }\n        }\n        if (this.element && !reload) return;\n        if (this.instance.dispatch(\"contentLoad\", {\n            content: this,\n            isLazy: isLazy\n        }).defaultPrevented) return;\n        if (this.isImageContent()) {\n            this.element = $f069a6f367b4d8a2$var$createElement(\"pswp__img\", \"img\");\n            // Start loading only after width is defined, as sizes might depend on it.\n            // Due to Safari feature, we must define sizes before srcset.\n            if (this.displayedImageWidth) this.loadImage(isLazy);\n        } else {\n            this.element = $f069a6f367b4d8a2$var$createElement(\"pswp__content\", \"div\");\n            this.element.innerHTML = this.data.html || \"\";\n        }\n        if (reload && this.slide) this.slide.updateContentSize(true);\n    }\n    /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */ loadImage(isLazy) {\n        if (!this.isImageContent() || !this.element || this.instance.dispatch(\"contentLoadImage\", {\n            content: this,\n            isLazy: isLazy\n        }).defaultPrevented) return;\n        const imageElement = /** @type HTMLImageElement */ this.element;\n        this.updateSrcsetSizes();\n        if (this.data.srcset) imageElement.srcset = this.data.srcset;\n        imageElement.src = this.data.src ?? \"\";\n        imageElement.alt = this.data.alt ?? \"\";\n        this.state = $f069a6f367b4d8a2$var$LOAD_STATE.LOADING;\n        if (imageElement.complete) this.onLoaded();\n        else {\n            imageElement.onload = ()=>{\n                this.onLoaded();\n            };\n            imageElement.onerror = ()=>{\n                this.onError();\n            };\n        }\n    }\n    /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */ setSlide(slide) {\n        this.slide = slide;\n        this.hasSlide = true;\n        this.instance = slide.pswp;\n    // todo: do we need to unset slide?\n    }\n    /**\r\n   * Content load success handler\r\n   */ onLoaded() {\n        this.state = $f069a6f367b4d8a2$var$LOAD_STATE.LOADED;\n        if (this.slide && this.element) {\n            this.instance.dispatch(\"loadComplete\", {\n                slide: this.slide,\n                content: this\n            });\n            // if content is reloaded\n            if (this.slide.isActive && this.slide.heavyAppended && !this.element.parentNode) {\n                this.append();\n                this.slide.updateContentSize(true);\n            }\n            if (this.state === $f069a6f367b4d8a2$var$LOAD_STATE.LOADED || this.state === $f069a6f367b4d8a2$var$LOAD_STATE.ERROR) this.removePlaceholder();\n        }\n    }\n    /**\r\n   * Content load error handler\r\n   */ onError() {\n        this.state = $f069a6f367b4d8a2$var$LOAD_STATE.ERROR;\n        if (this.slide) {\n            this.displayError();\n            this.instance.dispatch(\"loadComplete\", {\n                slide: this.slide,\n                isError: true,\n                content: this\n            });\n            this.instance.dispatch(\"loadError\", {\n                slide: this.slide,\n                content: this\n            });\n        }\n    }\n    /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */ isLoading() {\n        return this.instance.applyFilters(\"isContentLoading\", this.state === $f069a6f367b4d8a2$var$LOAD_STATE.LOADING, this);\n    }\n    /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */ isError() {\n        return this.state === $f069a6f367b4d8a2$var$LOAD_STATE.ERROR;\n    }\n    /**\r\n   * @returns {boolean} If the content is image\r\n   */ isImageContent() {\n        return this.type === \"image\";\n    }\n    /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */ setDisplayedSize(width, height) {\n        if (!this.element) return;\n        if (this.placeholder) this.placeholder.setDisplayedSize(width, height);\n        if (this.instance.dispatch(\"contentResize\", {\n            content: this,\n            width: width,\n            height: height\n        }).defaultPrevented) return;\n        $f069a6f367b4d8a2$var$setWidthHeight(this.element, width, height);\n        if (this.isImageContent() && !this.isError()) {\n            const isInitialSizeUpdate = !this.displayedImageWidth && width;\n            this.displayedImageWidth = width;\n            this.displayedImageHeight = height;\n            if (isInitialSizeUpdate) this.loadImage(false);\n            else this.updateSrcsetSizes();\n            if (this.slide) this.instance.dispatch(\"imageSizeChange\", {\n                slide: this.slide,\n                width: width,\n                height: height,\n                content: this\n            });\n        }\n    }\n    /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */ isZoomable() {\n        return this.instance.applyFilters(\"isContentZoomable\", this.isImageContent() && this.state !== $f069a6f367b4d8a2$var$LOAD_STATE.ERROR, this);\n    }\n    /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */ updateSrcsetSizes() {\n        // Handle srcset sizes attribute.\n        //\n        // Never lower quality, if it was increased previously.\n        // Chrome does this automatically, Firefox and Safari do not,\n        // so we store largest used size in dataset.\n        if (!this.isImageContent() || !this.element || !this.data.srcset) return;\n        const image = /** @type HTMLImageElement */ this.element;\n        const sizesWidth = this.instance.applyFilters(\"srcsetSizesWidth\", this.displayedImageWidth, this);\n        if (!image.dataset.largestUsedSize || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)) {\n            image.sizes = sizesWidth + \"px\";\n            image.dataset.largestUsedSize = String(sizesWidth);\n        }\n    }\n    /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */ usePlaceholder() {\n        return this.instance.applyFilters(\"useContentPlaceholder\", this.isImageContent(), this);\n    }\n    /**\r\n   * Preload content with lazy-loading param\r\n   */ lazyLoad() {\n        if (this.instance.dispatch(\"contentLazyLoad\", {\n            content: this\n        }).defaultPrevented) return;\n        this.load(true);\n    }\n    /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */ keepPlaceholder() {\n        return this.instance.applyFilters(\"isKeepingPlaceholder\", this.isLoading(), this);\n    }\n    /**\r\n   * Destroy the content\r\n   */ destroy() {\n        this.hasSlide = false;\n        this.slide = undefined;\n        if (this.instance.dispatch(\"contentDestroy\", {\n            content: this\n        }).defaultPrevented) return;\n        this.remove();\n        if (this.placeholder) {\n            this.placeholder.destroy();\n            this.placeholder = undefined;\n        }\n        if (this.isImageContent() && this.element) {\n            this.element.onload = null;\n            this.element.onerror = null;\n            this.element = undefined;\n        }\n    }\n    /**\r\n   * Display error message\r\n   */ displayError() {\n        if (this.slide) {\n            let errorMsgEl = $f069a6f367b4d8a2$var$createElement(\"pswp__error-msg\", \"div\");\n            errorMsgEl.innerText = this.instance.options?.errorMsg ?? \"\";\n            errorMsgEl = /** @type {HTMLDivElement} */ this.instance.applyFilters(\"contentErrorElement\", errorMsgEl, this);\n            this.element = $f069a6f367b4d8a2$var$createElement(\"pswp__content pswp__error-msg-container\", \"div\");\n            this.element.appendChild(errorMsgEl);\n            this.slide.container.innerText = \"\";\n            this.slide.container.appendChild(this.element);\n            this.slide.updateContentSize(true);\n            this.removePlaceholder();\n        }\n    }\n    /**\r\n   * Append the content\r\n   */ append() {\n        if (this.isAttached || !this.element) return;\n        this.isAttached = true;\n        if (this.state === $f069a6f367b4d8a2$var$LOAD_STATE.ERROR) {\n            this.displayError();\n            return;\n        }\n        if (this.instance.dispatch(\"contentAppend\", {\n            content: this\n        }).defaultPrevented) return;\n        const supportsDecode = \"decode\" in this.element;\n        if (this.isImageContent()) {\n            // Use decode() on nearby slides\n            //\n            // Nearby slide images are in DOM and not hidden via display:none.\n            // However, they are placed offscreen (to the left and right side).\n            //\n            // Some browsers do not composite the image until it's actually visible,\n            // using decode() helps.\n            //\n            // You might ask \"why dont you just decode() and then append all images\",\n            // that's because I want to show image before it's fully loaded,\n            // as browser can render parts of image while it is loading.\n            // We do not do this in Safari due to partial loading bug.\n            if (supportsDecode && this.slide && (!this.slide.isActive || $f069a6f367b4d8a2$var$isSafari())) {\n                this.isDecoding = true;\n                // purposefully using finally instead of then,\n                // as if srcset sizes changes dynamically - it may cause decode error\n                /** @type {HTMLImageElement} */ this.element.decode().catch(()=>{}).finally(()=>{\n                    this.isDecoding = false;\n                    this.appendImage();\n                });\n            } else this.appendImage();\n        } else if (this.slide && !this.element.parentNode) this.slide.container.appendChild(this.element);\n    }\n    /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */ activate() {\n        if (this.instance.dispatch(\"contentActivate\", {\n            content: this\n        }).defaultPrevented || !this.slide) return;\n        if (this.isImageContent() && this.isDecoding && !$f069a6f367b4d8a2$var$isSafari()) // add image to slide when it becomes active,\n        // even if it's not finished decoding\n        this.appendImage();\n        else if (this.isError()) this.load(false, true); // try to reload\n        if (this.slide.holderElement) this.slide.holderElement.setAttribute(\"aria-hidden\", \"false\");\n    }\n    /**\r\n   * Deactivate the content\r\n   */ deactivate() {\n        this.instance.dispatch(\"contentDeactivate\", {\n            content: this\n        });\n        if (this.slide && this.slide.holderElement) this.slide.holderElement.setAttribute(\"aria-hidden\", \"true\");\n    }\n    /**\r\n   * Remove the content from DOM\r\n   */ remove() {\n        this.isAttached = false;\n        if (this.instance.dispatch(\"contentRemove\", {\n            content: this\n        }).defaultPrevented) return;\n        if (this.element && this.element.parentNode) this.element.remove();\n        if (this.placeholder && this.placeholder.element) this.placeholder.element.remove();\n    }\n    /**\r\n   * Append the image content to slide container\r\n   */ appendImage() {\n        if (!this.isAttached) return;\n        if (this.instance.dispatch(\"contentAppendImage\", {\n            content: this\n        }).defaultPrevented) return;\n        // ensure that element exists and is not already appended\n        if (this.slide && this.element && !this.element.parentNode) this.slide.container.appendChild(this.element);\n        if (this.state === $f069a6f367b4d8a2$var$LOAD_STATE.LOADED || this.state === $f069a6f367b4d8a2$var$LOAD_STATE.ERROR) this.removePlaceholder();\n    }\n}\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */ /** @typedef {import('../core/base.js').default} PhotoSwipeBase */ /** @typedef {import('../photoswipe.js').Point} Point */ /** @typedef {import('../slide/slide.js').SlideData} SlideData */ /**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */ function $f069a6f367b4d8a2$var$getViewportSize(options, pswp) {\n    if (options.getViewportSizeFn) {\n        const newViewportSize = options.getViewportSizeFn(options, pswp);\n        if (newViewportSize) return newViewportSize;\n    }\n    return {\n        x: document.documentElement.clientWidth,\n        // TODO: height on mobile is very incosistent due to toolbar\n        // find a way to improve this\n        //\n        // document.documentElement.clientHeight - doesn't seem to work well\n        y: window.innerHeight\n    };\n}\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */ function $f069a6f367b4d8a2$var$parsePaddingOption(prop, options, viewportSize, itemData, index) {\n    let paddingValue = 0;\n    if (options.paddingFn) paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\n    else if (options.padding) paddingValue = options.padding[prop];\n    else {\n        const legacyPropName = \"padding\" + prop[0].toUpperCase() + prop.slice(1);\n        // @ts-expect-error\n        if (options[legacyPropName]) // @ts-expect-error\n        paddingValue = options[legacyPropName];\n    }\n    return Number(paddingValue) || 0;\n}\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */ function $f069a6f367b4d8a2$var$getPanAreaSize(options, viewportSize, itemData, index) {\n    return {\n        x: viewportSize.x - $f069a6f367b4d8a2$var$parsePaddingOption(\"left\", options, viewportSize, itemData, index) - $f069a6f367b4d8a2$var$parsePaddingOption(\"right\", options, viewportSize, itemData, index),\n        y: viewportSize.y - $f069a6f367b4d8a2$var$parsePaddingOption(\"top\", options, viewportSize, itemData, index) - $f069a6f367b4d8a2$var$parsePaddingOption(\"bottom\", options, viewportSize, itemData, index)\n    };\n}\nconst $f069a6f367b4d8a2$var$MAX_IMAGE_WIDTH = 4000;\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */ /** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */ /** @typedef {import('../photoswipe.js').Point} Point */ /** @typedef {import('../slide/slide.js').SlideData} SlideData */ /** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */ /**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */ class $f069a6f367b4d8a2$var$ZoomLevel {\n    /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */ constructor(options, itemData, index, pswp){\n        this.pswp = pswp;\n        this.options = options;\n        this.itemData = itemData;\n        this.index = index;\n        /** @type { Point | null } */ this.panAreaSize = null;\n        /** @type { Point | null } */ this.elementSize = null;\n        this.fit = 1;\n        this.fill = 1;\n        this.vFill = 1;\n        this.initial = 1;\n        this.secondary = 1;\n        this.max = 1;\n        this.min = 1;\n    }\n    /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */ update(maxWidth, maxHeight, panAreaSize) {\n        /** @type {Point} */ const elementSize = {\n            x: maxWidth,\n            y: maxHeight\n        };\n        this.elementSize = elementSize;\n        this.panAreaSize = panAreaSize;\n        const hRatio = panAreaSize.x / elementSize.x;\n        const vRatio = panAreaSize.y / elementSize.y;\n        this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\n        this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\n        // zoom.vFill defines zoom level of the image\n        // when it has 100% of viewport vertical space (height)\n        this.vFill = Math.min(1, vRatio);\n        this.initial = this._getInitial();\n        this.secondary = this._getSecondary();\n        this.max = Math.max(this.initial, this.secondary, this._getMax());\n        this.min = Math.min(this.fit, this.initial, this.secondary);\n        if (this.pswp) this.pswp.dispatch(\"zoomLevelsUpdate\", {\n            zoomLevels: this,\n            slideData: this.itemData\n        });\n    }\n    /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */ _parseZoomLevelOption(optionPrefix) {\n        const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ optionPrefix + \"ZoomLevel\";\n        const optionValue = this.options[optionName];\n        if (!optionValue) return;\n        if (typeof optionValue === \"function\") return optionValue(this);\n        if (optionValue === \"fill\") return this.fill;\n        if (optionValue === \"fit\") return this.fit;\n        return Number(optionValue);\n    }\n    /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */ _getSecondary() {\n        let currZoomLevel = this._parseZoomLevelOption(\"secondary\");\n        if (currZoomLevel) return currZoomLevel;\n        // 3x of \"fit\" state, but not larger than original\n        currZoomLevel = Math.min(1, this.fit * 3);\n        if (this.elementSize && currZoomLevel * this.elementSize.x > $f069a6f367b4d8a2$var$MAX_IMAGE_WIDTH) currZoomLevel = $f069a6f367b4d8a2$var$MAX_IMAGE_WIDTH / this.elementSize.x;\n        return currZoomLevel;\n    }\n    /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */ _getInitial() {\n        return this._parseZoomLevelOption(\"initial\") || this.fit;\n    }\n    /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */ _getMax() {\n        // max zoom level is x4 from \"fit state\",\n        // used for zoom gesture and ctrl/trackpad zoom\n        return this._parseZoomLevelOption(\"max\") || Math.max(1, this.fit * 4);\n    }\n}\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */ function $f069a6f367b4d8a2$var$lazyLoadData(itemData, instance, index) {\n    const content = instance.createContentFromData(itemData, index);\n    /** @type {ZoomLevel | undefined} */ let zoomLevel;\n    const { options: options } = instance;\n    // We need to know dimensions of the image to preload it,\n    // as it might use srcset, and we need to define sizes\n    if (options) {\n        zoomLevel = new $f069a6f367b4d8a2$var$ZoomLevel(options, itemData, -1);\n        let viewportSize;\n        if (instance.pswp) viewportSize = instance.pswp.viewportSize;\n        else viewportSize = $f069a6f367b4d8a2$var$getViewportSize(options, instance);\n        const panAreaSize = $f069a6f367b4d8a2$var$getPanAreaSize(options, viewportSize, itemData, index);\n        zoomLevel.update(content.width, content.height, panAreaSize);\n    }\n    content.lazyLoad();\n    if (zoomLevel) content.setDisplayedSize(Math.ceil(content.width * zoomLevel.initial), Math.ceil(content.height * zoomLevel.initial));\n    return content;\n}\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */ function $f069a6f367b4d8a2$var$lazyLoadSlide(index, instance) {\n    const itemData = instance.getItemData(index);\n    if (instance.dispatch(\"lazyLoadSlide\", {\n        index: index,\n        itemData: itemData\n    }).defaultPrevented) return;\n    return $f069a6f367b4d8a2$var$lazyLoadData(itemData, instance, index);\n}\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */ /** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */ /**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */ class $f069a6f367b4d8a2$var$PhotoSwipeBase extends $f069a6f367b4d8a2$var$Eventable {\n    /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */ getNumItems() {\n        let numItems = 0;\n        const dataSource = this.options?.dataSource;\n        if (dataSource && \"length\" in dataSource) // may be an array or just object with length property\n        numItems = dataSource.length;\n        else if (dataSource && \"gallery\" in dataSource) {\n            // query DOM elements\n            if (!dataSource.items) dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n            if (dataSource.items) numItems = dataSource.items.length;\n        }\n        // legacy event, before filters were introduced\n        const event = this.dispatch(\"numItems\", {\n            dataSource: dataSource,\n            numItems: numItems\n        });\n        return this.applyFilters(\"numItems\", event.numItems, dataSource);\n    }\n    /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */ createContentFromData(slideData, index) {\n        return new $f069a6f367b4d8a2$var$Content(slideData, this, index);\n    }\n    /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */ getItemData(index) {\n        const dataSource = this.options?.dataSource;\n        /** @type {SlideData | HTMLElement} */ let dataSourceItem = {};\n        if (Array.isArray(dataSource)) // Datasource is an array of elements\n        dataSourceItem = dataSource[index];\n        else if (dataSource && \"gallery\" in dataSource) {\n            // dataSource has gallery property,\n            // thus it was created by Lightbox, based on\n            // gallery and children options\n            // query DOM elements\n            if (!dataSource.items) dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n            dataSourceItem = dataSource.items[index];\n        }\n        let itemData = dataSourceItem;\n        if (itemData instanceof Element) itemData = this._domElementToItemData(itemData);\n        // Dispatching the itemData event,\n        // it's a legacy verion before filters were introduced\n        const event = this.dispatch(\"itemData\", {\n            itemData: itemData || {},\n            index: index\n        });\n        return this.applyFilters(\"itemData\", event.itemData, index);\n    }\n    /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */ _getGalleryDOMElements(galleryElement) {\n        if (this.options?.children || this.options?.childSelector) return $f069a6f367b4d8a2$var$getElementsFromOption(this.options.children, this.options.childSelector, galleryElement) || [];\n        return [\n            galleryElement\n        ];\n    }\n    /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */ _domElementToItemData(element) {\n        /** @type {SlideData} */ const itemData = {\n            element: element\n        };\n        const linkEl = /** @type {HTMLAnchorElement} */ element.tagName === \"A\" ? element : element.querySelector(\"a\");\n        if (linkEl) {\n            // src comes from data-pswp-src attribute,\n            // if it's empty link href is used\n            itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\n            if (linkEl.dataset.pswpSrcset) itemData.srcset = linkEl.dataset.pswpSrcset;\n            itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\n            itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\n            // support legacy w & h properties\n            itemData.w = itemData.width;\n            itemData.h = itemData.height;\n            if (linkEl.dataset.pswpType) itemData.type = linkEl.dataset.pswpType;\n            const thumbnailEl = element.querySelector(\"img\");\n            if (thumbnailEl) {\n                // msrc is URL to placeholder image that's displayed before large image is loaded\n                // by default it's displayed only for the first slide\n                itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\n                itemData.alt = thumbnailEl.getAttribute(\"alt\") ?? \"\";\n            }\n            if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) itemData.thumbCropped = true;\n        }\n        return this.applyFilters(\"domItemData\", itemData, element, linkEl);\n    }\n    /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */ lazyLoadData(itemData, index) {\n        return $f069a6f367b4d8a2$var$lazyLoadData(itemData, this, index);\n    }\n}\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */ /** @typedef {import('../photoswipe.js').default} PhotoSwipe */ /** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */ /** @typedef {import('../photoswipe.js').DataSource} DataSource */ /** @typedef {import('../photoswipe.js').Point} Point */ /** @typedef {import('../slide/content.js').default} Content */ /** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */ /** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */ /**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */ /**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */ class $f069a6f367b4d8a2$export$2e2bcd8739ae039 extends $f069a6f367b4d8a2$var$PhotoSwipeBase {\n    /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */ constructor(options){\n        super();\n        /** @type {PhotoSwipeOptions} */ this.options = options || {};\n        this._uid = 0;\n        this.shouldOpen = false;\n        /**\r\n     * @private\r\n     * @type {Content | undefined}\r\n     */ this._preloadedContent = undefined;\n        this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\n    }\n    /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */ init() {\n        // Bind click events to each gallery\n        $f069a6f367b4d8a2$var$getElementsFromOption(this.options.gallery, this.options.gallerySelector).forEach((galleryElement)=>{\n            galleryElement.addEventListener(\"click\", this.onThumbnailsClick, false);\n        });\n    }\n    /**\r\n   * @param {MouseEvent} e\r\n   */ onThumbnailsClick(e) {\n        // Exit and allow default browser action if:\n        if ($f069a6f367b4d8a2$var$specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\n         || window.pswp // ... if PhotoSwipe is already open\n         || window.navigator.onLine === false) return;\n        // If both clientX and clientY are 0 or not defined,\n        // the event is likely triggered by keyboard,\n        // so we do not pass the initialPoint\n        //\n        // Note that some screen readers emulate the mouse position,\n        // so it's not the ideal way to detect them.\n        //\n        /** @type {Point | null} */ let initialPoint = {\n            x: e.clientX,\n            y: e.clientY\n        };\n        if (!initialPoint.x && !initialPoint.y) initialPoint = null;\n        let clickedIndex = this.getClickedIndex(e);\n        clickedIndex = this.applyFilters(\"clickedIndex\", clickedIndex, e, this);\n        /** @type {DataSource} */ const dataSource = {\n            gallery: /** @type {HTMLElement} */ e.currentTarget\n        };\n        if (clickedIndex >= 0) {\n            e.preventDefault();\n            this.loadAndOpen(clickedIndex, dataSource, initialPoint);\n        }\n    }\n    /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   * @returns {number}\r\n   */ getClickedIndex(e) {\n        // legacy option\n        if (this.options.getClickedIndexFn) return this.options.getClickedIndexFn.call(this, e);\n        const clickedTarget = /** @type {HTMLElement} */ e.target;\n        const childElements = $f069a6f367b4d8a2$var$getElementsFromOption(this.options.children, this.options.childSelector, /** @type {HTMLElement} */ e.currentTarget);\n        const clickedChildIndex = childElements.findIndex((child)=>child === clickedTarget || child.contains(clickedTarget));\n        if (clickedChildIndex !== -1) return clickedChildIndex;\n        else if (this.options.children || this.options.childSelector) // click wasn't on a child element\n        return -1;\n        // There is only one item (which is the gallery)\n        return 0;\n    }\n    /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} dataSource\r\n   * @param {Point | null} [initialPoint]\r\n   * @returns {boolean}\r\n   */ loadAndOpen(index, dataSource, initialPoint) {\n        // Check if the gallery is already open\n        if (window.pswp) return false;\n        // set initial index\n        this.options.index = index;\n        // define options for PhotoSwipe constructor\n        this.options.initialPointerPos = initialPoint;\n        this.shouldOpen = true;\n        this.preload(index, dataSource);\n        return true;\n    }\n    /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   */ preload(index, dataSource) {\n        const { options: options } = this;\n        if (dataSource) options.dataSource = dataSource;\n        // Add the main module\n        /** @type {Promise<Type<PhotoSwipe>>[]} */ const promiseArray = [];\n        const pswpModuleType = typeof options.pswpModule;\n        if ($f069a6f367b4d8a2$var$isPswpClass(options.pswpModule)) promiseArray.push(Promise.resolve(/** @type {Type<PhotoSwipe>} */ options.pswpModule));\n        else if (pswpModuleType === \"string\") throw new Error(\"pswpModule as string is no longer supported\");\n        else if (pswpModuleType === \"function\") promiseArray.push(/** @type {() => Promise<Type<PhotoSwipe>>} */ options.pswpModule());\n        else throw new Error(\"pswpModule is not valid\");\n        // Add custom-defined promise, if any\n        if (typeof options.openPromise === \"function\") // allow developers to perform some task before opening\n        promiseArray.push(options.openPromise());\n        if (options.preloadFirstSlide !== false && index >= 0) this._preloadedContent = $f069a6f367b4d8a2$var$lazyLoadSlide(index, this);\n        // Wait till all promises resolve and open PhotoSwipe\n        const uid = ++this._uid;\n        Promise.all(promiseArray).then((iterableModules)=>{\n            if (this.shouldOpen) {\n                const mainModule = iterableModules[0];\n                this._openPhotoswipe(mainModule, uid);\n            }\n        });\n    }\n    /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */ _openPhotoswipe(module, uid) {\n        // Cancel opening if UID doesn't match the current one\n        // (if user clicked on another gallery item before current was loaded).\n        //\n        // Or if shouldOpen flag is set to false\n        // (developer may modify it via public API)\n        if (uid !== this._uid && this.shouldOpen) return;\n        this.shouldOpen = false;\n        // PhotoSwipe is already open\n        if (window.pswp) return;\n        /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */ const pswp = typeof module === \"object\" ? new module.default(this.options) // eslint-disable-line\n         : new module(this.options); // eslint-disable-line\n        this.pswp = pswp;\n        window.pswp = pswp;\n        // map listeners from Lightbox to PhotoSwipe Core\n        /** @type {(keyof PhotoSwipeEventsMap)[]} */ Object.keys(this._listeners).forEach((name)=>{\n            this._listeners[name]?.forEach((fn)=>{\n                pswp.on(name, /** @type {EventCallback<typeof name>} */ fn);\n            });\n        });\n        // same with filters\n        /** @type {(keyof PhotoSwipeFiltersMap)[]} */ Object.keys(this._filters).forEach((name)=>{\n            this._filters[name]?.forEach((filter)=>{\n                pswp.addFilter(name, filter.fn, filter.priority);\n            });\n        });\n        if (this._preloadedContent) {\n            pswp.contentLoader.addToCache(this._preloadedContent);\n            this._preloadedContent = undefined;\n        }\n        pswp.on(\"destroy\", ()=>{\n            // clean up public variables\n            this.pswp = undefined;\n            delete window.pswp;\n        });\n        pswp.init();\n    }\n    /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */ destroy() {\n        this.pswp?.destroy();\n        this.shouldOpen = false;\n        this._listeners = {};\n        $f069a6f367b4d8a2$var$getElementsFromOption(this.options.gallery, this.options.gallerySelector).forEach((galleryElement)=>{\n            galleryElement.removeEventListener(\"click\", this.onThumbnailsClick, false);\n        });\n    }\n}\n\n\n// Load Service Worker\n// if (\"serviceWorker\" in navigator && \"PushManager\" in window) {\n//   navigator.serviceWorker.register(\"./service-worker.js\");\n//   console.log(\"Service Worker is registered\");\n// }\n// const isInStandaloneMode = () =>\n//   window.matchMedia(\"(display-mode: standalone)\").matches || window.navigator.standalone || document.referrer.includes(\"android-app://\");\n// if (isInStandaloneMode()) {\n//   console.log(\"webapp is installed\");\n// }\n// Main Script\nfunction $ef9759333dbb3e83$var$getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\nlet $ef9759333dbb3e83$var$options = {\n    valueNames: [\n        \"title\",\n        \"year\",\n        {\n            name: \"warnickNumber\",\n            attr: \"data-id\"\n        },\n        {\n            name: \"dimentions\",\n            attr: \"data-dimention\"\n        },\n        \"materials\",\n        \"type\"\n    ]\n};\nlet $ef9759333dbb3e83$var$workList = new List(\"work-list\", $ef9759333dbb3e83$var$options);\n(()=>{\n    /* */ if (document.querySelector(\".list li\")) // console.log(\"Works\");\n    // let works = document.querySelectorAll(\"list li\")\n    document.querySelectorAll(\".list li\").forEach(function(obj) {\n        let img = obj.querySelector(\".image\");\n        let x = $ef9759333dbb3e83$var$getRandomInt(window.innerWidth - img.offsetWidth);\n        let y = $ef9759333dbb3e83$var$getRandomInt(window.innerHeight - img.offsetHeight);\n        img.style.display = \"none\";\n        img.style.top = y + \"px\";\n        img.style.left = x + \"px\";\n    });\n})();\n//\n//\n// CLOSE ELEMENT\n//\n//\n(()=>{\n    /* */ if (document.querySelector(\".close\")) document.querySelectorAll(\".close\").forEach(function(obj) {\n        obj.addEventListener(\"click\", function(e) {\n            e.target.parentNode.remove();\n        });\n    });\n})();\n//\n//\n// SUPPORT IMAGES\n//\n//\n// (() => {\n//   /* */\n//   if (document.querySelector(\".support_image\")) {\n//     document.querySelectorAll(\".support_image\").forEach(function (obj) {\n//       obj.addEventListener(\"click\", function (el) {\n//         obj.classList.toggle(\"active\");\n//       });\n//     });\n//   }\n// })();\n// \n// \n// grid-trigger\n// \n// \n(()=>{\n    /* */ if (document.querySelector(\".grid-trigger\")) document.querySelectorAll(\".grid-trigger\").forEach(function(obj) {\n        obj.addEventListener(\"click\", function(el) {\n            document.body.classList.toggle(\"list-view\");\n            document.body.classList.toggle(\"grid-view\");\n        });\n    });\n})();\n\n// import PhotoSwipe from 'photoswipe/dist/photoswipe.esm.js';\nconst $ef9759333dbb3e83$var$lightboxInIt = ()=>{\n    if (document.querySelector(\"a.lightbox\")) {\n        const lightbox = new (0, $f069a6f367b4d8a2$export$2e2bcd8739ae039)({\n            // may select multiple \"galleries\"\n            gallery: \"#work\",\n            // Elements within gallery (slides)\n            children: \"a.lightbox\",\n            // setup PhotoSwipe Core dynamic import\n            pswpModule: ()=>(parcelRequire(\"fuROB\")),\n            arrowPrevSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M16.02 9.09H1.98m5.34 4.98L2.11 9.1l5.2-5.17\"/></svg>',\n            arrowNextSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M1.98 8.91h14.04m-5.34-4.98 5.21 4.97-5.2 5.17\"/></svg>',\n            closeSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M13.96 13.96 4.04 4.04m0 9.92 9.92-9.92\"/></svg>',\n            zoomSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M3.6 3.6h10.93v10.93H3.6zM9 6.15v5.7M11.85 9h-5.7\"/></svg>',\n            showHideAnimationType: \"none\",\n            bgOpacity: 1\n        });\n        // parse data-google-map-url attribute\n        lightbox.addFilter(\"itemData\", (itemData, index)=>{\n            const googleMapUrl = itemData.element.dataset.googleMapUrl;\n            if (googleMapUrl) itemData.googleMapUrl = googleMapUrl;\n            return itemData;\n        });\n        lightbox.addFilter(\"itemData\", (itemData, index)=>{\n            const bunnyUrl = itemData.element.dataset.bunnyUrl;\n            if (bunnyUrl) itemData.bunnyUrl = bunnyUrl;\n            return itemData;\n        });\n        // override slide content\n        lightbox.on(\"contentLoad\", (e)=>{\n            const { content: content } = e;\n            if (content.type === \"google-map\") {\n                // prevent the deafult behavior\n                e.preventDefault();\n                // Create a container for iframe\n                // and assign it to the `content.element` property\n                content.element = document.createElement(\"div\");\n                content.element.className = \"pswp__google-map-container\";\n                const iframe = document.createElement(\"iframe\");\n                iframe.setAttribute(\"allowfullscreen\", \"\");\n                iframe.src = content.data.googleMapUrl;\n                content.element.appendChild(iframe);\n            }\n            if (content.type === \"bunny-video\") {\n                e.preventDefault();\n                content.element = document.createElement(\"div\");\n                content.element.className = \"pswp__bunny-container\";\n                const iframe = document.createElement(\"iframe\");\n                iframe.setAttribute(\"allowfullscreen\", \"\");\n                iframe.setAttribute(\"loading\", \"lazy\");\n                iframe.setAttribute(\"allow\", \"accelerometer; gyroscope; encrypted-media; picture-in-picture;\");\n                iframe.src = content.data.bunnyUrl;\n                content.element.appendChild(iframe);\n            }\n        });\n        lightbox.init();\n    }\n};\n\nconst $ef9759333dbb3e83$var$lightboxListInIt = ()=>{\n    if (document.querySelector(\".lightbox\")) {\n        let sources = [];\n        document.querySelectorAll(\".lightbox\").forEach(function(obj) {\n            sources.push({\n                src: obj.dataset.lightroomImage,\n                width: obj.dataset.lightroomWidth,\n                height: obj.dataset.lightroomHeight,\n                alt: obj.dataset.lightroomAlt\n            });\n        });\n        const options = {\n            dataSource: sources,\n            arrowPrevSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M16.02 9.09H1.98m5.34 4.98L2.11 9.1l5.2-5.17\"/></svg>',\n            arrowNextSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M1.98 8.91h14.04m-5.34-4.98 5.21 4.97-5.2 5.17\"/></svg>',\n            closeSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M13.96 13.96 4.04 4.04m0 9.92 9.92-9.92\"/></svg>',\n            zoomSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M3.6 3.6h10.93v10.93H3.6zM9 6.15v5.7M11.85 9h-5.7\"/></svg>',\n            showHideAnimationType: \"none\",\n            bgOpacity: 1,\n            pswpModule: ()=>(parcelRequire(\"fuROB\"))\n        };\n        // options.index = 0; // defines start slide index\n        // const pswp = new PhotoSwipe(options);\n        const lightbox = new (0, $f069a6f367b4d8a2$export$2e2bcd8739ae039)(options);\n        lightbox.init();\n        document.querySelectorAll(\".lightbox-trigger\").forEach(function(obj) {\n            obj.addEventListener(\"click\", function(el) {\n                // pswp.init(); // initializing PhotoSwipe core adds it to DOM\n                lightbox.loadAndOpen(0);\n            });\n        });\n    }\n};\n//\n//\n// AUDIO PLAYER\n//\n//\nconst $ef9759333dbb3e83$var$audioPlayerInIt = ()=>{\n    const audioPlayer = document.querySelectorAll(\".audioplayer\");\n    audioPlayer.forEach((player)=>{\n        const wave = player.querySelector(\".wave\");\n        const playButton = player.querySelector(\".play\");\n        const volumeButton = player.querySelector('input[type=\"range\"]');\n        const muteButton = player.querySelector(\".mute\");\n        let vlm = 30;\n        var wavesurfer = (0, (/*@__PURE__*/$parcel$interopDefault($87196e333c431a48$exports))).create({\n            container: \"#\" + wave.id,\n            waveColor: getComputedStyle(document.body).getPropertyValue(\"--gray\"),\n            progressColor: getComputedStyle(document.body).getPropertyValue(\"--secondary-color\"),\n            barWidth: parseInt(getComputedStyle(document.body).getPropertyValue(\"--border-size\")),\n            barHeight: 5,\n            height: 50,\n            responsive: true,\n            cursorWidth: parseInt(getComputedStyle(document.body).getPropertyValue(\"--border-size\"))\n        });\n        const filePath = player.dataset.audio.startsWith(\"./\") ? window.location.protocol + \"//\" + window.location.host + \"/\" + player.dataset.audio.replace(\"./\", \"\") : player.dataset.audio;\n        wavesurfer.load(filePath);\n        playButton.addEventListener(\"click\", (event)=>{\n            // wavesurfer.play(); // or  wavesurfer.pause();\n            wavesurfer.playPause();\n            player.classList.toggle(\"playing\");\n        });\n        muteButton.addEventListener(\"click\", (event)=>{\n            if (player.classList.contains(\"muted\")) {\n                volumeButton.value = vlm;\n                volumeButton.style.backgroundSize = vlm + \"% 100%\";\n            } else {\n                volumeButton.value = 0;\n                volumeButton.style.backgroundSize = \"0% 100%\";\n            }\n            wavesurfer.toggleMute();\n            player.classList.toggle(\"muted\");\n        });\n        wavesurfer.on(\"finish\", function() {\n            player.classList.remove(\"playing\");\n        });\n        volumeButton.addEventListener(\"input\", (event)=>{\n            let target = event.target;\n            if (event.target.type !== \"range\") target = document.getElementById(\"range\");\n            const min = target.min;\n            const max = target.max;\n            vlm = target.value;\n            if (vlm == 0) player.classList.add(\"muted\");\n            else player.classList.remove(\"muted\");\n            wavesurfer.setVolume(vlm / 10);\n            target.style.backgroundSize = (vlm - min) * 100 / (max - min) + \"% 100%\";\n        });\n    });\n};\nconst $ef9759333dbb3e83$var$menuInIt = ()=>{\n    document.querySelector(\"#hamburger\").addEventListener(\"click\", (event)=>{\n        document.querySelector(\"#hamburger\").classList.toggle(\"open\");\n        document.body.classList.toggle(\"menuopen\");\n    });\n    document.querySelectorAll(\".filter-trigger\").forEach(function(obj) {\n        obj.addEventListener(\"click\", function(e) {\n            e.preventDefault();\n            e.target.classList.toggle(\"active\");\n            document.body.classList.toggle(\"filteropen\");\n        });\n    });\n};\nconst $ef9759333dbb3e83$var$searchInIt = ()=>{\n    document.querySelectorAll(\".search-icon\").forEach(function(obj) {\n        obj.addEventListener(\"click\", function(e) {\n            console.log(\"search\");\n        });\n    });\n};\nwindow.addEventListener(\"load\", function() {\n    if (document.querySelector(\".audioplayer\")) $ef9759333dbb3e83$var$audioPlayerInIt();\n    if (document.querySelector(\".lightbox\")) $ef9759333dbb3e83$var$lightboxInIt();\n    if (document.querySelector(\".lightbox-trigger\")) $ef9759333dbb3e83$var$lightboxListInIt();\n    if (document.querySelector(\"#hamburger\")) $ef9759333dbb3e83$var$menuInIt();\n    if (document.querySelector(\".search-icon\")) $ef9759333dbb3e83$var$searchInIt();\n});\n\n})();\n//# sourceMappingURL=script.js.map\n","\"use strict\";\n\nvar mapping = {};\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping[id];\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return resolved;\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('dlC1N') + require('./helpers/bundle-manifest').resolve(\"bUyT7\"))).then(() => parcelRequire('Mmk6f'));","\"use strict\";\n\nvar cacheLoader = require('../cacheLoader');\nmodule.exports = cacheLoader(function (bundle) {\n  return new Promise(function (resolve, reject) {\n    // Don't insert the same script twice (e.g. if it was already in the HTML)\n    var existingScripts = document.getElementsByTagName('script');\n    if ([].concat(existingScripts).some(function isCurrentBundle(script) {\n      return script.src === bundle;\n    })) {\n      resolve();\n      return;\n    }\n    var preloadLink = document.createElement('link');\n    preloadLink.href = bundle;\n    preloadLink.rel = 'preload';\n    preloadLink.as = 'script';\n    document.head.appendChild(preloadLink);\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.src = bundle;\n    script.onerror = function (e) {\n      var error = new TypeError(\"Failed to fetch dynamically imported module: \".concat(bundle, \". Error: \").concat(e.message));\n      script.onerror = script.onload = null;\n      script.remove();\n      reject(error);\n    };\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n});","\"use strict\";\n\nvar cachedBundles = {};\nvar cachedPreloads = {};\nvar cachedPrefetches = {};\nfunction getCache(type) {\n  switch (type) {\n    case 'preload':\n      return cachedPreloads;\n    case 'prefetch':\n      return cachedPrefetches;\n    default:\n      return cachedBundles;\n  }\n}\nmodule.exports = function (loader, type) {\n  return function (bundle) {\n    var cache = getCache(type);\n    if (cache[bundle]) {\n      return cache[bundle];\n    }\n    return cache[bundle] = loader.apply(null, arguments).catch(function (e) {\n      delete cache[bundle];\n      throw e;\n    });\n  };\n};","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"dlC1N\\\":\\\"script.js\\\",\\\"bUyT7\\\":\\\"photoswipe.esm.bee3cbe3.js\\\"}\"));","import WaveSurfer from 'wavesurfer.js';\n\n\n// Load Service Worker\n\n// if (\"serviceWorker\" in navigator && \"PushManager\" in window) {\n//   navigator.serviceWorker.register(\"./service-worker.js\");\n//   console.log(\"Service Worker is registered\");\n// }\n\n// const isInStandaloneMode = () =>\n//   window.matchMedia(\"(display-mode: standalone)\").matches || window.navigator.standalone || document.referrer.includes(\"android-app://\");\n\n// if (isInStandaloneMode()) {\n//   console.log(\"webapp is installed\");\n// }\n\n// Main Script\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nlet options = {\n  valueNames: [\"title\", \"year\", { name: \"warnickNumber\", attr: \"data-id\" }, { name: 'dimentions', attr: 'data-dimention' }, \"materials\", \"type\"]\n};\n\nlet workList = new List(\"work-list\", options);\n\n(() => {\n  /* */\n  if (document.querySelector(\".list li\")) {\n    // console.log(\"Works\");\n    // let works = document.querySelectorAll(\"list li\")\n    document.querySelectorAll(\".list li\").forEach(function (obj) {\n      let img = obj.querySelector(\".image\");\n      let x = getRandomInt(window.innerWidth - img.offsetWidth);\n      let y = getRandomInt(window.innerHeight - img.offsetHeight);\n\n      img.style.display = \"none\";\n      img.style.top = y + \"px\";\n      img.style.left = x + \"px\";\n    });\n  }\n})();\n\n//\n//\n// CLOSE ELEMENT\n//\n//\n(() => {\n  /* */\n  if (document.querySelector(\".close\")) {\n    document.querySelectorAll(\".close\").forEach(function (obj) {\n      obj.addEventListener(\"click\", function (e) {\n        e.target.parentNode.remove();\n      });\n    });\n  }\n})();\n\n//\n//\n// SUPPORT IMAGES\n//\n//\n// (() => {\n//   /* */\n//   if (document.querySelector(\".support_image\")) {\n//     document.querySelectorAll(\".support_image\").forEach(function (obj) {\n//       obj.addEventListener(\"click\", function (el) {\n//         obj.classList.toggle(\"active\");\n//       });\n//     });\n//   }\n// })();\n\n\n// \n// \n// grid-trigger\n// \n// \n(() => {\n  /* */\n  if (document.querySelector(\".grid-trigger\")) {\n    document.querySelectorAll(\".grid-trigger\").forEach(function (obj) {\n      obj.addEventListener(\"click\", function (el) {\n        document.body.classList.toggle(\"list-view\")\n        document.body.classList.toggle(\"grid-view\");\n      });\n    });\n  }\n})();\n\n\n// \n// \n// Lightbox\n// \n//\nimport PhotoSwipeLightbox from 'photoswipe/dist/photoswipe-lightbox.esm.js';\n// import PhotoSwipe from 'photoswipe/dist/photoswipe.esm.js';\n\nconst lightboxInIt = () => {\n  if(document.querySelector(\"a.lightbox\")){\n    const lightbox = new PhotoSwipeLightbox({\n      // may select multiple \"galleries\"\n      gallery: '#work',\n    \n      // Elements within gallery (slides)\n      children: 'a.lightbox',\n    \n      // setup PhotoSwipe Core dynamic import\n      pswpModule: () => import('../../node_modules/photoswipe/dist/photoswipe.esm.js'),\n      arrowPrevSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M16.02 9.09H1.98m5.34 4.98L2.11 9.1l5.2-5.17\"/></svg>',\n      arrowNextSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M1.98 8.91h14.04m-5.34-4.98 5.21 4.97-5.2 5.17\"/></svg>',\n      closeSVG:'<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M13.96 13.96 4.04 4.04m0 9.92 9.92-9.92\"/></svg>',\n      zoomSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M3.6 3.6h10.93v10.93H3.6zM9 6.15v5.7M11.85 9h-5.7\"/></svg>',\n      showHideAnimationType: 'none',\n      bgOpacity: 1,\n    });\n\n    // parse data-google-map-url attribute\n    lightbox.addFilter('itemData', (itemData, index) => {\n      const googleMapUrl = itemData.element.dataset.googleMapUrl;\n      if (googleMapUrl) {\n        itemData.googleMapUrl = googleMapUrl;\n      }\n      return itemData;\n    });\n\n    lightbox.addFilter('itemData', (itemData, index) => {\n      const bunnyUrl = itemData.element.dataset.bunnyUrl;\n      if (bunnyUrl) {\n        itemData.bunnyUrl = bunnyUrl;\n      }\n      return itemData;\n    });\n\n    // override slide content\n    lightbox.on('contentLoad', (e) => {\n      const { content } = e;\n      if (content.type === 'google-map') {\n        // prevent the deafult behavior\n        e.preventDefault();\n\n        // Create a container for iframe\n        // and assign it to the `content.element` property\n        content.element = document.createElement('div');\n        content.element.className = 'pswp__google-map-container';\n\n        const iframe = document.createElement('iframe');\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.src = content.data.googleMapUrl;\n        content.element.appendChild(iframe);\n      }\n\n      if(content.type === 'bunny-video'){\n        e.preventDefault();\n\n        content.element = document.createElement('div');\n        content.element.className = 'pswp__bunny-container';\n\n        const iframe = document.createElement('iframe');\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('loading', 'lazy');\n        iframe.setAttribute('allow', 'accelerometer; gyroscope; encrypted-media; picture-in-picture;');\n        iframe.src = content.data.bunnyUrl;\n        content.element.appendChild(iframe);\n      }\n    });\n\n\n    lightbox.init();\n  }\n \n};\n\nconst lightboxListInIt = () => {\n  if(document.querySelector(\".lightbox\")){\n    let sources = [];\n    document.querySelectorAll(\".lightbox\").forEach(function (obj) {\n      sources.push({\n        src: obj.dataset.lightroomImage,\n        width: obj.dataset.lightroomWidth,\n        height: obj.dataset.lightroomHeight,\n        alt: obj.dataset.lightroomAlt\n      })\n    });\n  \n    const options = {\n      dataSource: sources,\n      arrowPrevSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M16.02 9.09H1.98m5.34 4.98L2.11 9.1l5.2-5.17\"/></svg>',\n      arrowNextSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M1.98 8.91h14.04m-5.34-4.98 5.21 4.97-5.2 5.17\"/></svg>',\n      closeSVG:'<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M13.96 13.96 4.04 4.04m0 9.92 9.92-9.92\"/></svg>',\n      zoomSVG: '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 18 18\"><path d=\"M3.6 3.6h10.93v10.93H3.6zM9 6.15v5.7M11.85 9h-5.7\"/></svg>',\n      showHideAnimationType: 'none',\n      bgOpacity: 1,\n      pswpModule: () => import('../../node_modules/photoswipe/dist/photoswipe.esm.js')\n    };\n\n    // options.index = 0; // defines start slide index\n    // const pswp = new PhotoSwipe(options);\n\n    const lightbox = new PhotoSwipeLightbox(options);\n    lightbox.init();\n\n    document.querySelectorAll(\".lightbox-trigger\").forEach(function (obj) {\n      obj.addEventListener(\"click\", function (el) {\n        // pswp.init(); // initializing PhotoSwipe core adds it to DOM\n        lightbox.loadAndOpen(0);\n      });\n    });\n  }\n}\n\n\n\n\n//\n//\n// AUDIO PLAYER\n//\n//\nconst audioPlayerInIt = () => {\n  const audioPlayer = document.querySelectorAll(\".audioplayer\");\n\n  audioPlayer.forEach((player) => { \n    const wave = player.querySelector(\".wave\");\n    const playButton = player.querySelector(\".play\");\n    const volumeButton = player.querySelector('input[type=\"range\"]');\n    const muteButton = player.querySelector(\".mute\");\n  \n    let vlm = 30;\n  \n    var wavesurfer = WaveSurfer.create({\n      container: \"#\" + wave.id,\n      waveColor: getComputedStyle(document.body).getPropertyValue('--gray'),\n      progressColor: getComputedStyle(document.body).getPropertyValue('--secondary-color'),\n      barWidth: parseInt( getComputedStyle(document.body).getPropertyValue('--border-size') ),\n      barHeight: 5,\n      height: 50,\n      responsive: true,\n      cursorWidth: parseInt( getComputedStyle(document.body).getPropertyValue('--border-size') )\n    });\n  \n    const filePath = player.dataset.audio.startsWith(\"./\") ?  window.location.protocol + \"//\" + window.location.host + \"/\" + player.dataset.audio.replace(\"./\", \"\") : player.dataset.audio;\n    wavesurfer.load( filePath );\n  \n    playButton.addEventListener(\"click\", (event) => {\n      // wavesurfer.play(); // or  wavesurfer.pause();\n      wavesurfer.playPause();\n      player.classList.toggle(\"playing\");\n    });\n  \n    muteButton.addEventListener(\"click\", (event) => {\n      if (player.classList.contains(\"muted\")) {\n        volumeButton.value = vlm;\n        volumeButton.style.backgroundSize = vlm + \"% 100%\";\n      } else {\n        volumeButton.value = 0;\n        volumeButton.style.backgroundSize = \"0% 100%\";\n      }\n  \n      wavesurfer.toggleMute();\n      player.classList.toggle(\"muted\");\n    });\n  \n    wavesurfer.on(\"finish\", function () {\n      player.classList.remove(\"playing\");\n    });\n  \n    volumeButton.addEventListener(\"input\", (event) => {\n      let target = event.target;\n      if (event.target.type !== \"range\") {\n        target = document.getElementById(\"range\");\n      }\n      const min = target.min;\n      const max = target.max;\n      vlm = target.value;\n  \n      if (vlm == 0) {\n        player.classList.add(\"muted\");\n      } else {\n        player.classList.remove(\"muted\");\n      }\n  \n      wavesurfer.setVolume(vlm / 10);\n  \n      target.style.backgroundSize = ((vlm - min) * 100) / (max - min) + \"% 100%\";\n    });\n  });\n}\n\nconst menuInIt = () => {\n  document.querySelector(\"#hamburger\").addEventListener(\"click\", (event) => {\n    document.querySelector(\"#hamburger\").classList.toggle(\"open\");\n    document.body.classList.toggle(\"menuopen\");\n  });\n\n\n  document.querySelectorAll('.filter-trigger').forEach(function (obj) {\n    obj.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      e.target.classList.toggle(\"active\");\n      document.body.classList.toggle(\"filteropen\");\n    });\n  });\n}\n\nconst searchInIt = () => {\n  document.querySelectorAll('.search-icon').forEach(function (obj) {\n    obj.addEventListener(\"click\", function (e) {\n      console.log(\"search\");\n    });\n  });\n}\n\nwindow.addEventListener('load', function () {\n\n  if( document.querySelector(\".audioplayer\") ){\n    audioPlayerInIt();\n  }\n\n  if( document.querySelector(\".lightbox\") ){\n    lightboxInIt();\n  }\n\n  if (document.querySelector(\".lightbox-trigger\")) {\n    lightboxListInIt();\n  }\n\n  if (document.querySelector(\"#hamburger\")) {\n    menuInIt();\n  }\n\n  if(document.querySelector(\".search-icon\")){\n    searchInIt();\n  }\n\n})\n","/*!\n * wavesurfer.js 6.6.4 (2023-06-10)\n * https://wavesurfer-js.org\n * @license BSD-3-Clause\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(self, () => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./src/drawer.canvasentry.js\":\n/*!***********************************!*\\\n  !*** ./src/drawer.canvasentry.js ***!\n  \\***********************************/\n/***/ ((module, exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _style = _interopRequireDefault(__webpack_require__(/*! ./util/style */ \"./src/util/style.js\"));\nvar _getId = _interopRequireDefault(__webpack_require__(/*! ./util/get-id */ \"./src/util/get-id.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */\nvar CanvasEntry = /*#__PURE__*/function () {\n  function CanvasEntry() {\n    _classCallCheck(this, CanvasEntry);\n    /**\n     * The wave node\n     *\n     * @type {HTMLCanvasElement}\n     */\n    this.wave = null;\n    /**\n     * The wave canvas rendering context\n     *\n     * @type {CanvasRenderingContext2D}\n     */\n    this.waveCtx = null;\n    /**\n     * The (optional) progress wave node\n     *\n     * @type {HTMLCanvasElement}\n     */\n    this.progress = null;\n    /**\n     * The (optional) progress wave canvas rendering context\n     *\n     * @type {CanvasRenderingContext2D}\n     */\n    this.progressCtx = null;\n    /**\n     * Start of the area the canvas should render, between 0 and 1\n     *\n     * @type {number}\n     */\n    this.start = 0;\n    /**\n     * End of the area the canvas should render, between 0 and 1\n     *\n     * @type {number}\n     */\n    this.end = 1;\n    /**\n     * Unique identifier for this entry\n     *\n     * @type {string}\n     */\n    this.id = (0, _getId.default)(typeof this.constructor.name !== 'undefined' ? this.constructor.name.toLowerCase() + '_' : 'canvasentry_');\n    /**\n     * Canvas 2d context attributes\n     *\n     * @type {object}\n     */\n    this.canvasContextAttributes = {};\n  }\n\n  /**\n   * Store the wave canvas element and create the 2D rendering context\n   *\n   * @param {HTMLCanvasElement} element The wave `canvas` element.\n   */\n  _createClass(CanvasEntry, [{\n    key: \"initWave\",\n    value: function initWave(element) {\n      this.wave = element;\n      this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n    }\n\n    /**\n     * Store the progress wave canvas element and create the 2D rendering\n     * context\n     *\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n     */\n  }, {\n    key: \"initProgress\",\n    value: function initProgress(element) {\n      this.progress = element;\n      this.progressCtx = this.progress.getContext('2d', this.canvasContextAttributes);\n    }\n\n    /**\n     * Update the dimensions\n     *\n     * @param {number} elementWidth Width of the entry\n     * @param {number} totalWidth Total width of the multi canvas renderer\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n  }, {\n    key: \"updateDimensions\",\n    value: function updateDimensions(elementWidth, totalWidth, width, height) {\n      // where the canvas starts and ends in the waveform, represented as a\n      // decimal between 0 and 1\n      this.start = this.wave.offsetLeft / totalWidth || 0;\n      this.end = this.start + elementWidth / totalWidth;\n\n      // set wave canvas dimensions\n      this.wave.width = width;\n      this.wave.height = height;\n      var elementSize = {\n        width: elementWidth + 'px'\n      };\n      (0, _style.default)(this.wave, elementSize);\n      if (this.hasProgressCanvas) {\n        // set progress canvas dimensions\n        this.progress.width = width;\n        this.progress.height = height;\n        (0, _style.default)(this.progress, elementSize);\n      }\n    }\n\n    /**\n     * Clear the wave and progress rendering contexts\n     */\n  }, {\n    key: \"clearWave\",\n    value: function clearWave() {\n      // wave\n      this.waveCtx.clearRect(0, 0, this.waveCtx.canvas.width, this.waveCtx.canvas.height);\n\n      // progress\n      if (this.hasProgressCanvas) {\n        this.progressCtx.clearRect(0, 0, this.progressCtx.canvas.width, this.progressCtx.canvas.height);\n      }\n    }\n\n    /**\n     * Set the fill styles for wave and progress\n     * @param {string|string[]} waveColor Fill color for the wave canvas,\n     * or an array of colors to apply as a gradient\n     * @param {?string|string[]} progressColor Fill color for the progress canvas,\n     * or an array of colors to apply as a gradient\n     */\n  }, {\n    key: \"setFillStyles\",\n    value: function setFillStyles(waveColor, progressColor) {\n      this.waveCtx.fillStyle = this.getFillStyle(this.waveCtx, waveColor);\n      if (this.hasProgressCanvas) {\n        this.progressCtx.fillStyle = this.getFillStyle(this.progressCtx, progressColor);\n      }\n    }\n\n    /**\n     * Utility function to handle wave color arguments\n     *\n     * When the color argument type is a string or CanvasGradient instance,\n     * it will be returned as is. Otherwise, it will be treated as an array,\n     * and a new CanvasGradient will be returned\n     *\n     * @since 6.0.0\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {string|string[]|CanvasGradient} color Either a single fill color\n     *     for the wave canvas, an existing CanvasGradient instance, or an array\n     *     of colors to apply as a gradient\n     * @returns {string|CanvasGradient} Returns a string fillstyle value, or a\n     *     canvas gradient\n     */\n  }, {\n    key: \"getFillStyle\",\n    value: function getFillStyle(ctx, color) {\n      if (typeof color == 'string' || color instanceof CanvasGradient) {\n        return color;\n      }\n      var waveGradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\n      color.forEach(function (value, index) {\n        return waveGradient.addColorStop(index / color.length, value);\n      });\n      return waveGradient;\n    }\n\n    /**\n     * Set the canvas transforms for wave and progress\n     *\n     * @param {boolean} vertical Whether to render vertically\n     */\n  }, {\n    key: \"applyCanvasTransforms\",\n    value: function applyCanvasTransforms(vertical) {\n      if (vertical) {\n        // Reflect the waveform across the line y = -x\n        this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n        if (this.hasProgressCanvas) {\n          this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n        }\n      }\n    }\n\n    /**\n     * Draw a rectangle for wave and progress\n     *\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n  }, {\n    key: \"fillRects\",\n    value: function fillRects(x, y, width, height, radius) {\n      this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n      if (this.hasProgressCanvas) {\n        this.fillRectToContext(this.progressCtx, x, y, width, height, radius);\n      }\n    }\n\n    /**\n     * Draw the actual rectangle on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n  }, {\n    key: \"fillRectToContext\",\n    value: function fillRectToContext(ctx, x, y, width, height, radius) {\n      if (!ctx) {\n        return;\n      }\n      if (radius) {\n        this.drawRoundedRect(ctx, x, y, width, height, radius);\n      } else {\n        ctx.fillRect(x, y, width, height);\n      }\n    }\n\n    /**\n     * Draw a rounded rectangle on Canvas\n     *\n     * @param {CanvasRenderingContext2D} ctx Canvas context\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     *\n     * @return {void}\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n     */\n  }, {\n    key: \"drawRoundedRect\",\n    value: function drawRoundedRect(ctx, x, y, width, height, radius) {\n      if (height === 0) {\n        return;\n      }\n      // peaks are float values from -1 to 1. Use absolute height values in\n      // order to correctly calculate rounded rectangle coordinates\n      if (height < 0) {\n        height *= -1;\n        y -= height;\n      }\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    /**\n     * Render the actual wave and progress lines\n     *\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n  }, {\n    key: \"drawLines\",\n    value: function drawLines(peaks, absmax, halfH, offsetY, start, end) {\n      this.drawLineToContext(this.waveCtx, peaks, absmax, halfH, offsetY, start, end);\n      if (this.hasProgressCanvas) {\n        this.drawLineToContext(this.progressCtx, peaks, absmax, halfH, offsetY, start, end);\n      }\n    }\n\n    /**\n     * Render the actual waveform line on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n  }, {\n    key: \"drawLineToContext\",\n    value: function drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n      if (!ctx) {\n        return;\n      }\n      var length = peaks.length / 2;\n      var first = Math.round(length * this.start);\n\n      // use one more peak value to make sure we join peaks at ends -- unless,\n      // of course, this is the last canvas\n      var last = Math.round(length * this.end) + 1;\n      var canvasStart = first;\n      var canvasEnd = last;\n      var scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n      // optimization\n      var halfOffset = halfH + offsetY;\n      var absmaxHalf = absmax / halfH;\n      ctx.beginPath();\n      ctx.moveTo((canvasStart - first) * scale, halfOffset);\n      ctx.lineTo((canvasStart - first) * scale, halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf));\n      var i, peak, h;\n      for (i = canvasStart; i < canvasEnd; i++) {\n        peak = peaks[2 * i] || 0;\n        h = Math.round(peak / absmaxHalf);\n        ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n      }\n\n      // draw the bottom edge going backwards, to make a single\n      // closed hull to fill\n      var j = canvasEnd - 1;\n      for (j; j >= canvasStart; j--) {\n        peak = peaks[2 * j + 1] || 0;\n        h = Math.round(peak / absmaxHalf);\n        ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n      }\n      ctx.lineTo((canvasStart - first) * scale, halfOffset - Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf));\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    /**\n     * Destroys this entry\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.waveCtx = null;\n      this.wave = null;\n      this.progressCtx = null;\n      this.progress = null;\n    }\n\n    /**\n     * Return image data of the wave `canvas` element\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise` that\n     * resolves with a `Blob` instance.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\n     * returns a data URL. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with a `Blob` instance.\n     */\n  }, {\n    key: \"getImage\",\n    value: function getImage(format, quality, type) {\n      var _this = this;\n      if (type === 'blob') {\n        return new Promise(function (resolve) {\n          _this.wave.toBlob(resolve, format, quality);\n        });\n      } else if (type === 'dataURL') {\n        return this.wave.toDataURL(format, quality);\n      }\n    }\n  }]);\n  return CanvasEntry;\n}();\nexports[\"default\"] = CanvasEntry;\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/drawer.js\":\n/*!***********************!*\\\n  !*** ./src/drawer.js ***!\n  \\***********************/\n/***/ ((module, exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar util = _interopRequireWildcard(__webpack_require__(/*! ./util */ \"./src/util/index.js\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nvar Drawer = /*#__PURE__*/function (_util$Observer) {\n  _inherits(Drawer, _util$Observer);\n  var _super = _createSuper(Drawer);\n  /**\n   * @param {HTMLElement} container The container node of the wavesurfer instance\n   * @param {WavesurferParams} params The wavesurfer initialisation options\n   */\n  function Drawer(container, params) {\n    var _this;\n    _classCallCheck(this, Drawer);\n    _this = _super.call(this);\n    _this.container = util.withOrientation(container, params.vertical);\n    /**\n     * @type {WavesurferParams}\n     */\n    _this.params = params;\n    /**\n     * The width of the renderer\n     * @type {number}\n     */\n    _this.width = 0;\n    /**\n     * The height of the renderer\n     * @type {number}\n     */\n    _this.height = params.height * _this.params.pixelRatio;\n    _this.lastPos = 0;\n    /**\n     * The `<wave>` element which is added to the container\n     * @type {HTMLElement}\n     */\n    _this.wrapper = null;\n    return _this;\n  }\n\n  /**\n   * Alias of `util.style`\n   *\n   * @param {HTMLElement} el The element that the styles will be applied to\n   * @param {Object} styles The map of propName: attribute, both are used as-is\n   * @return {HTMLElement} el\n   */\n  _createClass(Drawer, [{\n    key: \"style\",\n    value: function style(el, styles) {\n      return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n  }, {\n    key: \"createWrapper\",\n    value: function createWrapper() {\n      this.wrapper = util.withOrientation(this.container.appendChild(document.createElement('wave')), this.params.vertical);\n      this.style(this.wrapper, {\n        display: 'block',\n        position: 'relative',\n        userSelect: 'none',\n        webkitUserSelect: 'none',\n        height: this.params.height + 'px'\n      });\n      if (this.params.fillParent || this.params.scrollParent) {\n        this.style(this.wrapper, {\n          width: '100%',\n          cursor: this.params.hideCursor ? 'none' : 'auto',\n          overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n          overflowY: 'hidden'\n        });\n      }\n      this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, noPrevent) {\n      !noPrevent && e.preventDefault();\n      var clientX = util.withOrientation(e.targetTouches ? e.targetTouches[0] : e, this.params.vertical).clientX;\n      var bbox = this.wrapper.getBoundingClientRect();\n      var nominalWidth = this.width;\n      var parentWidth = this.getWidth();\n      var progressPixels = this.getProgressPixels(bbox, clientX);\n      var progress;\n      if (!this.params.fillParent && nominalWidth < parentWidth) {\n        progress = progressPixels * (this.params.pixelRatio / nominalWidth) || 0;\n      } else {\n        progress = (progressPixels + this.wrapper.scrollLeft) / this.wrapper.scrollWidth || 0;\n      }\n      return util.clamp(progress, 0, 1);\n    }\n  }, {\n    key: \"getProgressPixels\",\n    value: function getProgressPixels(wrapperBbox, clientX) {\n      if (this.params.rtl) {\n        return wrapperBbox.right - clientX;\n      } else {\n        return clientX - wrapperBbox.left;\n      }\n    }\n  }, {\n    key: \"setupWrapperEvents\",\n    value: function setupWrapperEvents() {\n      var _this2 = this;\n      this.wrapper.addEventListener('click', function (e) {\n        var orientedEvent = util.withOrientation(e, _this2.params.vertical);\n        var scrollbarHeight = _this2.wrapper.offsetHeight - _this2.wrapper.clientHeight;\n        if (scrollbarHeight !== 0) {\n          // scrollbar is visible.  Check if click was on it\n          var bbox = _this2.wrapper.getBoundingClientRect();\n          if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\n            // ignore mousedown as it was on the scrollbar\n            return;\n          }\n        }\n        if (_this2.params.interact) {\n          _this2.fireEvent('click', e, _this2.handleEvent(e));\n        }\n      });\n      this.wrapper.addEventListener('dblclick', function (e) {\n        if (_this2.params.interact) {\n          _this2.fireEvent('dblclick', e, _this2.handleEvent(e));\n        }\n      });\n      this.wrapper.addEventListener('scroll', function (e) {\n        return _this2.fireEvent('scroll', e);\n      });\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n  }, {\n    key: \"drawPeaks\",\n    value: function drawPeaks(peaks, length, start, end) {\n      if (!this.setWidth(length)) {\n        this.clearWave();\n      }\n      this.params.barWidth ? this.drawBars(peaks, 0, start, end) : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n  }, {\n    key: \"resetScroll\",\n    value: function resetScroll() {\n      if (this.wrapper !== null) {\n        this.wrapper.scrollLeft = 0;\n      }\n    }\n\n    /**\n     * Recenter the view-port at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n  }, {\n    key: \"recenter\",\n    value: function recenter(percent) {\n      var position = this.wrapper.scrollWidth * percent;\n      this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the view-port on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n  }, {\n    key: \"recenterOnPosition\",\n    value: function recenterOnPosition(position, immediate) {\n      var scrollLeft = this.wrapper.scrollLeft;\n      var half = ~~(this.wrapper.clientWidth / 2);\n      var maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n      var target = position - half;\n      var offset = target - scrollLeft;\n      if (maxScroll == 0) {\n        // no need to continue if scrollbar is not there\n        return;\n      }\n\n      // if the cursor is currently visible...\n      if (!immediate && -half <= offset && offset < half) {\n        // set rate at which waveform is centered\n        var rate = this.params.autoCenterRate;\n\n        // make rate depend on width of view and length of waveform\n        rate /= half;\n        rate *= maxScroll;\n        offset = Math.max(-rate, Math.min(rate, offset));\n        target = scrollLeft + offset;\n      }\n\n      // limit target to valid range (0 to maxScroll)\n      target = Math.max(0, Math.min(maxScroll, target));\n      // no use attempting to scroll if we're not moving\n      if (target != scrollLeft) {\n        this.wrapper.scrollLeft = target;\n      }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number} Horizontal scroll position in pixels\n     */\n  }, {\n    key: \"getScrollX\",\n    value: function getScrollX() {\n      var x = 0;\n      if (this.wrapper) {\n        var pixelRatio = this.params.pixelRatio;\n        x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n        // In cases of elastic scroll (safari with mouse wheel) you can\n        // scroll beyond the limits of the container\n        // Calculate and floor the scrollable extent to make sure an out\n        // of bounds value is not returned\n        // Ticket #1312\n        if (this.params.scrollParent) {\n          var maxScroll = ~~(this.wrapper.scrollWidth * pixelRatio - this.getWidth());\n          x = Math.min(maxScroll, Math.max(0, x));\n        }\n      }\n      return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number} The width of the container\n     */\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width The new width of the container\n     * @return {boolean} Whether the width of the container was updated or not\n     */\n  }, {\n    key: \"setWidth\",\n    value: function setWidth(width) {\n      if (this.width == width) {\n        return false;\n      }\n      this.width = width;\n      if (this.params.fillParent || this.params.scrollParent) {\n        this.style(this.wrapper, {\n          width: ''\n        });\n      } else {\n        var newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\n        this.style(this.wrapper, {\n          width: newWidth\n        });\n      }\n      this.updateSize();\n      return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height The new height of the container.\n     * @return {boolean} Whether the height of the container was updated or not\n     */\n  }, {\n    key: \"setHeight\",\n    value: function setHeight(height) {\n      if (height == this.height) {\n        return false;\n      }\n      this.height = height;\n      this.style(this.wrapper, {\n        height: ~~(this.height / this.params.pixelRatio) + 'px'\n      });\n      this.updateSize();\n      return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be rendered\n     *\n     * @param {number} progress From 0 to 1\n     */\n  }, {\n    key: \"progress\",\n    value: function progress(_progress) {\n      var minPxDelta = 1 / this.params.pixelRatio;\n      var pos = Math.round(_progress * this.width) * minPxDelta;\n      if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n        this.lastPos = pos;\n        if (this.params.scrollParent && this.params.autoCenter) {\n          var newPos = ~~(this.wrapper.scrollWidth * _progress);\n          this.recenterOnPosition(newPos, this.params.autoCenterImmediately);\n        }\n        this.updateProgress(pos);\n      }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.unAll();\n      if (this.wrapper) {\n        if (this.wrapper.parentNode == this.container.domElement) {\n          this.container.removeChild(this.wrapper.domElement);\n        }\n        this.wrapper = null;\n      }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n  }, {\n    key: \"updateCursor\",\n    value: function updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n  }, {\n    key: \"updateSize\",\n    value: function updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n  }, {\n    key: \"drawBars\",\n    value: function drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n  }, {\n    key: \"drawWave\",\n    value: function drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n  }, {\n    key: \"clearWave\",\n    value: function clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n  }, {\n    key: \"updateProgress\",\n    value: function updateProgress(position) {}\n  }]);\n  return Drawer;\n}(util.Observer);\nexports[\"default\"] = Drawer;\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/drawer.multicanvas.js\":\n/*!***********************************!*\\\n  !*** ./src/drawer.multicanvas.js ***!\n  \\***********************************/\n/***/ ((module, exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _drawer = _interopRequireDefault(__webpack_require__(/*! ./drawer */ \"./src/drawer.js\"));\nvar util = _interopRequireWildcard(__webpack_require__(/*! ./util */ \"./src/util/index.js\"));\nvar _drawer2 = _interopRequireDefault(__webpack_require__(/*! ./drawer.canvasentry */ \"./src/drawer.canvasentry.js\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */\nvar MultiCanvas = /*#__PURE__*/function (_Drawer) {\n  _inherits(MultiCanvas, _Drawer);\n  var _super = _createSuper(MultiCanvas);\n  /**\n   * @param {HTMLElement} container The container node of the wavesurfer instance\n   * @param {WavesurferParams} params The wavesurfer initialisation options\n   */\n  function MultiCanvas(container, params) {\n    var _this;\n    _classCallCheck(this, MultiCanvas);\n    _this = _super.call(this, container, params);\n\n    /**\n     * @type {number}\n     */\n    _this.maxCanvasWidth = params.maxCanvasWidth;\n\n    /**\n     * @type {number}\n     */\n    _this.maxCanvasElementWidth = Math.round(params.maxCanvasWidth / params.pixelRatio);\n\n    /**\n     * Whether or not the progress wave is rendered. If the `waveColor`\n     * and `progressColor` are the same color it is not.\n     *\n     * @type {boolean}\n     */\n    _this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n    /**\n     * @type {number}\n     */\n    _this.halfPixel = 0.5 / params.pixelRatio;\n\n    /**\n     * List of `CanvasEntry` instances.\n     *\n     * @type {Array}\n     */\n    _this.canvases = [];\n\n    /**\n     * @type {HTMLElement}\n     */\n    _this.progressWave = null;\n\n    /**\n     * Class used to generate entries.\n     *\n     * @type {function}\n     */\n    _this.EntryClass = _drawer2.default;\n\n    /**\n     * Canvas 2d context attributes.\n     *\n     * @type {object}\n     */\n    _this.canvasContextAttributes = params.drawingContextAttributes;\n\n    /**\n     * Overlap added between entries to prevent vertical white stripes\n     * between `canvas` elements.\n     *\n     * @type {number}\n     */\n    _this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n\n    /**\n     * The radius of the wave bars. Makes bars rounded\n     *\n     * @type {number}\n     */\n    _this.barRadius = params.barRadius || 0;\n\n    /**\n     * Whether to render the waveform vertically. Defaults to false.\n     *\n     * @type {boolean}\n     */\n    _this.vertical = params.vertical;\n    return _this;\n  }\n\n  /**\n   * Initialize the drawer\n   */\n  _createClass(MultiCanvas, [{\n    key: \"init\",\n    value: function init() {\n      this.createWrapper();\n      this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     */\n  }, {\n    key: \"createElements\",\n    value: function createElements() {\n      this.progressWave = util.withOrientation(this.wrapper.appendChild(document.createElement('wave')), this.params.vertical);\n      this.style(this.progressWave, {\n        position: 'absolute',\n        zIndex: 3,\n        left: 0,\n        top: 0,\n        bottom: 0,\n        overflow: 'hidden',\n        width: '0',\n        display: 'none',\n        boxSizing: 'border-box',\n        borderRightStyle: 'solid',\n        pointerEvents: 'none'\n      });\n      this.addCanvas();\n      this.updateCursor();\n    }\n\n    /**\n     * Update cursor style\n     */\n  }, {\n    key: \"updateCursor\",\n    value: function updateCursor() {\n      this.style(this.progressWave, {\n        borderRightWidth: this.params.cursorWidth + 'px',\n        borderRightColor: this.params.cursorColor\n      });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n  }, {\n    key: \"updateSize\",\n    value: function updateSize() {\n      var _this2 = this;\n      var totalWidth = Math.round(this.width / this.params.pixelRatio);\n      var requiredCanvases = Math.ceil(totalWidth / (this.maxCanvasElementWidth + this.overlap));\n\n      // add required canvases\n      while (this.canvases.length < requiredCanvases) {\n        this.addCanvas();\n      }\n\n      // remove older existing canvases, if any\n      while (this.canvases.length > requiredCanvases) {\n        this.removeCanvas();\n      }\n      var canvasWidth = this.maxCanvasWidth + this.overlap;\n      var lastCanvas = this.canvases.length - 1;\n      this.canvases.forEach(function (entry, i) {\n        if (i == lastCanvas) {\n          canvasWidth = _this2.width - _this2.maxCanvasWidth * lastCanvas;\n        }\n        _this2.updateDimensions(entry, canvasWidth, _this2.height);\n        entry.clearWave();\n      });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     */\n  }, {\n    key: \"addCanvas\",\n    value: function addCanvas() {\n      var entry = new this.EntryClass();\n      entry.canvasContextAttributes = this.canvasContextAttributes;\n      entry.hasProgressCanvas = this.hasProgressCanvas;\n      entry.halfPixel = this.halfPixel;\n      var leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n      // wave\n      var wave = util.withOrientation(this.wrapper.appendChild(document.createElement('canvas')), this.params.vertical);\n      this.style(wave, {\n        position: 'absolute',\n        zIndex: 2,\n        left: leftOffset + 'px',\n        top: 0,\n        bottom: 0,\n        height: '100%',\n        pointerEvents: 'none'\n      });\n      entry.initWave(wave);\n\n      // progress\n      if (this.hasProgressCanvas) {\n        var progress = util.withOrientation(this.progressWave.appendChild(document.createElement('canvas')), this.params.vertical);\n        this.style(progress, {\n          position: 'absolute',\n          left: leftOffset + 'px',\n          top: 0,\n          bottom: 0,\n          height: '100%'\n        });\n        entry.initProgress(progress);\n      }\n      this.canvases.push(entry);\n    }\n\n    /**\n     * Pop single canvas from the list\n     *\n     */\n  }, {\n    key: \"removeCanvas\",\n    value: function removeCanvas() {\n      var lastEntry = this.canvases[this.canvases.length - 1];\n\n      // wave\n      lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\n\n      // progress\n      if (this.hasProgressCanvas) {\n        lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n      }\n\n      // cleanup\n      if (lastEntry) {\n        lastEntry.destroy();\n        lastEntry = null;\n      }\n      this.canvases.pop();\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n  }, {\n    key: \"updateDimensions\",\n    value: function updateDimensions(entry, width, height) {\n      var elementWidth = Math.round(width / this.params.pixelRatio);\n      var totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n      // update canvas dimensions\n      entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n      // style element\n      this.style(this.progressWave, {\n        display: 'block'\n      });\n    }\n\n    /**\n     * Clear the whole multi-canvas\n     */\n  }, {\n    key: \"clearWave\",\n    value: function clearWave() {\n      var _this3 = this;\n      util.frame(function () {\n        _this3.canvases.forEach(function (entry) {\n          return entry.clearWave();\n        });\n      })();\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n  }, {\n    key: \"drawBars\",\n    value: function drawBars(peaks, channelIndex, start, end) {\n      var _this4 = this;\n      return this.prepareDraw(peaks, channelIndex, start, end, function (_ref) {\n        var absmax = _ref.absmax,\n          hasMinVals = _ref.hasMinVals,\n          height = _ref.height,\n          offsetY = _ref.offsetY,\n          halfH = _ref.halfH,\n          peaks = _ref.peaks,\n          ch = _ref.channelIndex;\n        // if drawBars was called within ws.empty we don't pass a start and\n        // don't want anything to happen\n        if (start === undefined) {\n          return;\n        }\n        // Skip every other value if there are negatives.\n        var peakIndexScale = hasMinVals ? 2 : 1;\n        var length = peaks.length / peakIndexScale;\n        var bar = _this4.params.barWidth * _this4.params.pixelRatio;\n        var gap = _this4.params.barGap === null ? Math.max(_this4.params.pixelRatio, ~~(bar / 2)) : Math.max(_this4.params.pixelRatio, _this4.params.barGap * _this4.params.pixelRatio);\n        var step = bar + gap;\n        var scale = length / _this4.width;\n        var first = start;\n        var last = end;\n        var peakIndex = first;\n        for (peakIndex; peakIndex < last; peakIndex += step) {\n          // search for the highest peak in the range this bar falls into\n          var peak = 0;\n          var peakIndexRange = Math.floor(peakIndex * scale) * peakIndexScale; // start index\n          var peakIndexEnd = Math.floor((peakIndex + step) * scale) * peakIndexScale;\n          do {\n            // do..while makes sure at least one peak is always evaluated\n            var newPeak = Math.abs(peaks[peakIndexRange]); // for arrays starting with negative values\n            if (newPeak > peak) {\n              peak = newPeak; // higher\n            }\n\n            peakIndexRange += peakIndexScale; // skip every other value for negatives\n          } while (peakIndexRange < peakIndexEnd);\n\n          // calculate the height of this bar according to the highest peak found\n          var h = Math.round(peak / absmax * halfH);\n\n          // raise the bar height to the specified minimum height\n          // Math.max is used to replace any value smaller than barMinHeight (not just 0) with barMinHeight\n          if (_this4.params.barMinHeight) {\n            h = Math.max(h, _this4.params.barMinHeight);\n          }\n          _this4.fillRect(peakIndex + _this4.halfPixel, halfH - h + offsetY, bar + _this4.halfPixel, h * 2, _this4.barRadius, ch);\n        }\n      });\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n  }, {\n    key: \"drawWave\",\n    value: function drawWave(peaks, channelIndex, start, end) {\n      var _this5 = this;\n      return this.prepareDraw(peaks, channelIndex, start, end, function (_ref2) {\n        var absmax = _ref2.absmax,\n          hasMinVals = _ref2.hasMinVals,\n          height = _ref2.height,\n          offsetY = _ref2.offsetY,\n          halfH = _ref2.halfH,\n          peaks = _ref2.peaks,\n          channelIndex = _ref2.channelIndex;\n        if (!hasMinVals) {\n          var reflectedPeaks = [];\n          var len = peaks.length;\n          var i = 0;\n          for (i; i < len; i++) {\n            reflectedPeaks[2 * i] = peaks[i];\n            reflectedPeaks[2 * i + 1] = -peaks[i];\n          }\n          peaks = reflectedPeaks;\n        }\n\n        // if drawWave was called within ws.empty we don't pass a start and\n        // end and simply want a flat line\n        if (start !== undefined) {\n          _this5.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n        }\n\n        // always draw a median line\n        _this5.fillRect(0, halfH + offsetY - _this5.halfPixel, _this5.width, _this5.halfPixel, _this5.barRadius, channelIndex);\n      });\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @param {number[]} peaks Peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     * @param {channelIndex} channelIndex The channel index of the line drawn\n     */\n  }, {\n    key: \"drawLine\",\n    value: function drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n      var _this6 = this;\n      var _ref3 = this.params.splitChannelsOptions.channelColors[channelIndex] || {},\n        waveColor = _ref3.waveColor,\n        progressColor = _ref3.progressColor;\n      this.canvases.forEach(function (entry, i) {\n        _this6.setFillStyles(entry, waveColor, progressColor);\n        _this6.applyCanvasTransforms(entry, _this6.params.vertical);\n        entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n      });\n    }\n\n    /**\n     * Draw a rectangle on the multi-canvas\n     *\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     * @param {channelIndex} channelIndex The channel index of the bar drawn\n     */\n  }, {\n    key: \"fillRect\",\n    value: function fillRect(x, y, width, height, radius, channelIndex) {\n      var startCanvas = Math.floor(x / this.maxCanvasWidth);\n      var endCanvas = Math.min(Math.ceil((x + width) / this.maxCanvasWidth) + 1, this.canvases.length);\n      var i = startCanvas;\n      for (i; i < endCanvas; i++) {\n        var entry = this.canvases[i];\n        var leftOffset = i * this.maxCanvasWidth;\n        var intersection = {\n          x1: Math.max(x, i * this.maxCanvasWidth),\n          y1: y,\n          x2: Math.min(x + width, i * this.maxCanvasWidth + entry.wave.width),\n          y2: y + height\n        };\n        if (intersection.x1 < intersection.x2) {\n          var _ref4 = this.params.splitChannelsOptions.channelColors[channelIndex] || {},\n            waveColor = _ref4.waveColor,\n            progressColor = _ref4.progressColor;\n          this.setFillStyles(entry, waveColor, progressColor);\n          this.applyCanvasTransforms(entry, this.params.vertical);\n          entry.fillRects(intersection.x1 - leftOffset, intersection.y1, intersection.x2 - intersection.x1, intersection.y2 - intersection.y1, radius);\n        }\n      }\n    }\n\n    /**\n     * Returns whether to hide the channel from being drawn based on params.\n     *\n     * @param {number} channelIndex The index of the current channel.\n     * @returns {bool} True to hide the channel, false to draw.\n     */\n  }, {\n    key: \"hideChannel\",\n    value: function hideChannel(channelIndex) {\n      return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by `drawBars`\n     * and `drawWave`\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n     * split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered. If this isn't set only a flat line is rendered\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call, e.g. `drawWave`\n     * @param {number} drawIndex The index of the current channel after filtering.\n     * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\n     * @returns {void}\n     */\n  }, {\n    key: \"prepareDraw\",\n    value: function prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n      var _this7 = this;\n      return util.frame(function () {\n        // Split channels and call this function with the channelIndex set\n        if (peaks[0] instanceof Array) {\n          var channels = peaks;\n          if (_this7.params.splitChannels) {\n            var filteredChannels = channels.filter(function (c, i) {\n              return !_this7.hideChannel(i);\n            });\n            if (!_this7.params.splitChannelsOptions.overlay) {\n              _this7.setHeight(Math.max(filteredChannels.length, 1) * _this7.params.height * _this7.params.pixelRatio);\n            }\n            var overallAbsMax;\n            if (_this7.params.splitChannelsOptions && _this7.params.splitChannelsOptions.relativeNormalization) {\n              // calculate maximum peak across channels to use for normalization\n              overallAbsMax = util.max(channels.map(function (channelPeaks) {\n                return util.absMax(channelPeaks);\n              }));\n            }\n            return channels.forEach(function (channelPeaks, i) {\n              return _this7.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax);\n            });\n          }\n          peaks = channels[0];\n        }\n\n        // Return and do not draw channel peaks if hidden.\n        if (_this7.hideChannel(channelIndex)) {\n          return;\n        }\n\n        // calculate maximum modulation value, either from the barHeight\n        // parameter or if normalize=true from the largest value in the peak\n        // set\n        var absmax = 1 / _this7.params.barHeight;\n        if (_this7.params.normalize) {\n          absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n        }\n\n        // Bar wave draws the bottom only as a reflection of the top,\n        // so we don't need negative values\n        var hasMinVals = [].some.call(peaks, function (val) {\n          return val < 0;\n        });\n        var height = _this7.params.height * _this7.params.pixelRatio;\n        var halfH = height / 2;\n        var offsetY = height * drawIndex || 0;\n\n        // Override offsetY if overlay is true\n        if (_this7.params.splitChannelsOptions && _this7.params.splitChannelsOptions.overlay) {\n          offsetY = 0;\n        }\n        return fn({\n          absmax: absmax,\n          hasMinVals: hasMinVals,\n          height: height,\n          offsetY: offsetY,\n          halfH: halfH,\n          peaks: peaks,\n          channelIndex: channelIndex\n        });\n      })();\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {string} waveColor Wave color to draw this entry\n     * @param {string} progressColor Progress color to draw this entry\n     */\n  }, {\n    key: \"setFillStyles\",\n    value: function setFillStyles(entry) {\n      var waveColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.waveColor;\n      var progressColor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.params.progressColor;\n      entry.setFillStyles(waveColor, progressColor);\n    }\n\n    /**\n     * Set the canvas transforms for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {boolean} vertical Whether to render the waveform vertically\n     */\n  }, {\n    key: \"applyCanvasTransforms\",\n    value: function applyCanvasTransforms(entry) {\n      var vertical = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      entry.applyCanvasTransforms(vertical);\n    }\n\n    /**\n     * Return image data of the multi-canvas\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise`.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\n     * `type` this returns a single data URL or an array of data URLs,\n     * one for each canvas. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with an array of `Blob` instances, one for each\n     * canvas.\n     */\n  }, {\n    key: \"getImage\",\n    value: function getImage(format, quality, type) {\n      if (type === 'blob') {\n        return Promise.all(this.canvases.map(function (entry) {\n          return entry.getImage(format, quality, type);\n        }));\n      } else if (type === 'dataURL') {\n        var images = this.canvases.map(function (entry) {\n          return entry.getImage(format, quality, type);\n        });\n        return images.length > 1 ? images : images[0];\n      }\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-offset of progress position in pixels\n     */\n  }, {\n    key: \"updateProgress\",\n    value: function updateProgress(position) {\n      this.style(this.progressWave, {\n        width: position + 'px'\n      });\n    }\n  }]);\n  return MultiCanvas;\n}(_drawer.default);\nexports[\"default\"] = MultiCanvas;\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/mediaelement-webaudio.js\":\n/*!**************************************!*\\\n  !*** ./src/mediaelement-webaudio.js ***!\n  \\**************************************/\n/***/ ((module, exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _mediaelement = _interopRequireDefault(__webpack_require__(/*! ./mediaelement */ \"./src/mediaelement.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n/**\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\n * of the webaudio API.\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\n *\n * @since 3.2.0\n */\nvar MediaElementWebAudio = /*#__PURE__*/function (_MediaElement) {\n  _inherits(MediaElementWebAudio, _MediaElement);\n  var _super = _createSuper(MediaElementWebAudio);\n  /**\n   * Construct the backend\n   *\n   * @param {WavesurferParams} params Wavesurfer parameters\n   */\n  function MediaElementWebAudio(params) {\n    var _this;\n    _classCallCheck(this, MediaElementWebAudio);\n    _this = _super.call(this, params);\n    /** @private */\n    _this.params = params;\n    /** @private */\n    _this.sourceMediaElement = null;\n    return _this;\n  }\n\n  /**\n   * Initialise the backend, called in `wavesurfer.createBackend()`\n   */\n  _createClass(MediaElementWebAudio, [{\n    key: \"init\",\n    value: function init() {\n      this.setPlaybackRate(this.params.audioRate);\n      this.createTimer();\n      this.createVolumeNode();\n      this.createScriptNode();\n      this.createAnalyserNode();\n    }\n    /**\n     * Private method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @private\n     */\n  }, {\n    key: \"_load\",\n    value: function _load(media, peaks, preload) {\n      _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"_load\", this).call(this, media, peaks, preload);\n      this.createMediaElementSource(media);\n    }\n\n    /**\n     * Create MediaElementSource node\n     *\n     * @since 3.2.0\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n     */\n  }, {\n    key: \"createMediaElementSource\",\n    value: function createMediaElementSource(mediaElement) {\n      this.sourceMediaElement = this.ac.createMediaElementSource(mediaElement);\n      this.sourceMediaElement.connect(this.analyser);\n    }\n  }, {\n    key: \"play\",\n    value: function play(start, end) {\n      this.resumeAudioContext();\n      return _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"play\", this).call(this, start, end);\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(MediaElementWebAudio.prototype), \"destroy\", this).call(this);\n      this.destroyWebAudio();\n    }\n  }]);\n  return MediaElementWebAudio;\n}(_mediaelement.default);\nexports[\"default\"] = MediaElementWebAudio;\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/mediaelement.js\":\n/*!*****************************!*\\\n  !*** ./src/mediaelement.js ***!\n  \\*****************************/\n/***/ ((module, exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _webaudio = _interopRequireDefault(__webpack_require__(/*! ./webaudio */ \"./src/webaudio.js\"));\nvar util = _interopRequireWildcard(__webpack_require__(/*! ./util */ \"./src/util/index.js\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n/**\n * MediaElement backend\n */\nvar MediaElement = /*#__PURE__*/function (_WebAudio) {\n  _inherits(MediaElement, _WebAudio);\n  var _super = _createSuper(MediaElement);\n  /**\n   * Construct the backend\n   *\n   * @param {WavesurferParams} params Wavesurfer parameters\n   */\n  function MediaElement(params) {\n    var _this;\n    _classCallCheck(this, MediaElement);\n    _this = _super.call(this, params);\n    /** @private */\n    _this.params = params;\n\n    /**\n     * Initially a dummy media element to catch errors. Once `_load` is\n     * called, this will contain the actual `HTMLMediaElement`.\n     * @private\n     */\n    _this.media = {\n      currentTime: 0,\n      duration: 0,\n      paused: true,\n      playbackRate: 1,\n      play: function play() {},\n      pause: function pause() {},\n      volume: 0\n    };\n\n    /** @private */\n    _this.mediaType = params.mediaType.toLowerCase();\n    /** @private */\n    _this.elementPosition = params.elementPosition;\n    /** @private */\n    _this.peaks = null;\n    /** @private */\n    _this.playbackRate = 1;\n    /** @private */\n    _this.volume = 1;\n    /** @private */\n    _this.isMuted = false;\n    /** @private */\n    _this.buffer = null;\n    /** @private */\n    _this.onPlayEnd = null;\n    /** @private */\n    _this.mediaListeners = {};\n    return _this;\n  }\n\n  /**\n   * Initialise the backend, called in `wavesurfer.createBackend()`\n   */\n  _createClass(MediaElement, [{\n    key: \"init\",\n    value: function init() {\n      this.setPlaybackRate(this.params.audioRate);\n      this.createTimer();\n    }\n\n    /**\n     * Attach event listeners to media element.\n     */\n  }, {\n    key: \"_setupMediaListeners\",\n    value: function _setupMediaListeners() {\n      var _this2 = this;\n      this.mediaListeners.error = function () {\n        _this2.fireEvent('error', 'Error loading media element');\n      };\n      this.mediaListeners.waiting = function () {\n        _this2.fireEvent('waiting');\n      };\n      this.mediaListeners.canplay = function () {\n        _this2.fireEvent('canplay');\n      };\n      this.mediaListeners.ended = function () {\n        _this2.fireEvent('finish');\n      };\n      // listen to and relay play, pause and seeked events to enable\n      // playback control from the external media element\n      this.mediaListeners.play = function () {\n        _this2.fireEvent('play');\n      };\n      this.mediaListeners.pause = function () {\n        _this2.fireEvent('pause');\n      };\n      this.mediaListeners.seeked = function (event) {\n        _this2.fireEvent('seek');\n      };\n      this.mediaListeners.volumechange = function (event) {\n        _this2.isMuted = _this2.media.muted;\n        if (_this2.isMuted) {\n          _this2.volume = 0;\n        } else {\n          _this2.volume = _this2.media.volume;\n        }\n        _this2.fireEvent('volume');\n      };\n\n      // reset event listeners\n      Object.keys(this.mediaListeners).forEach(function (id) {\n        _this2.media.removeEventListener(id, _this2.mediaListeners[id]);\n        _this2.media.addEventListener(id, _this2.mediaListeners[id]);\n      });\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     */\n  }, {\n    key: \"createTimer\",\n    value: function createTimer() {\n      var _this3 = this;\n      var onAudioProcess = function onAudioProcess() {\n        if (_this3.isPaused()) {\n          return;\n        }\n        _this3.fireEvent('audioprocess', _this3.getCurrentTime());\n\n        // Call again in the next frame\n        util.frame(onAudioProcess)();\n      };\n      this.on('play', onAudioProcess);\n\n      // Update the progress one more time to prevent it from being stuck in\n      // case of lower framerates\n      this.on('pause', function () {\n        _this3.fireEvent('audioprocess', _this3.getCurrentTime());\n      });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `url` argument is not a valid media\n     * element.\n     */\n  }, {\n    key: \"load\",\n    value: function load(url, container, peaks, preload) {\n      var media = document.createElement(this.mediaType);\n      media.controls = this.params.mediaControls;\n      media.autoplay = this.params.autoplay || false;\n      media.preload = preload == null ? 'auto' : preload;\n      media.src = url;\n      media.style.width = '100%';\n      var prevMedia = container.querySelector(this.mediaType);\n      if (prevMedia) {\n        container.removeChild(prevMedia);\n      }\n      container.appendChild(media);\n      this._load(media, peaks, preload);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     */\n  }, {\n    key: \"loadElt\",\n    value: function loadElt(elt, peaks) {\n      elt.controls = this.params.mediaControls;\n      elt.autoplay = this.params.autoplay || false;\n      this._load(elt, peaks, elt.preload);\n    }\n\n    /**\n     * Method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `media` argument is not a valid media\n     * element.\n     * @private\n     */\n  }, {\n    key: \"_load\",\n    value: function _load(media, peaks, preload) {\n      // verify media element is valid\n      if (!(media instanceof HTMLMediaElement) || typeof media.addEventListener === 'undefined') {\n        throw new Error('media parameter is not a valid media element');\n      }\n\n      // load must be called manually on iOS, otherwise peaks won't draw\n      // until a user interaction triggers load --> 'ready' event\n      //\n      // note that we avoid calling media.load here when given peaks and preload == 'none'\n      // as this almost always triggers some browser fetch of the media.\n      if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\n        // Resets the media element and restarts the media resource. Any\n        // pending events are discarded. How much media data is fetched is\n        // still affected by the preload attribute.\n        media.load();\n      }\n      this.media = media;\n      this._setupMediaListeners();\n      this.peaks = peaks;\n      this.onPlayEnd = null;\n      this.buffer = null;\n      this.isMuted = media.muted;\n      this.setPlaybackRate(this.playbackRate);\n      this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Media paused or not\n     */\n  }, {\n    key: \"isPaused\",\n    value: function isPaused() {\n      return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration\n     */\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      if (this.explicitDuration) {\n        return this.explicitDuration;\n      }\n      var duration = (this.buffer || this.media).duration;\n      if (duration >= Infinity) {\n        // streaming audio\n        duration = this.media.seekable.end(0);\n      }\n      return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} Current time\n     */\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Current position\n     */\n  }, {\n    key: \"getPlayedPercents\",\n    value: function getPlayedPercents() {\n      return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number} Playback rate\n     */\n  }, {\n    key: \"getPlaybackRate\",\n    value: function getPlaybackRate() {\n      return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value Playback rate\n     */\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(value) {\n      this.playbackRate = value || 1;\n      this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n  }, {\n    key: \"seekTo\",\n    value: function seekTo(start) {\n      if (start != null && !isNaN(start)) {\n        this.media.currentTime = start;\n      }\n      this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise} Result\n     */\n  }, {\n    key: \"play\",\n    value: function play(start, end) {\n      this.seekTo(start);\n      var promise = this.media.play();\n      end && this.setPlayEnd(end);\n      return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise} Result\n     */\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var promise;\n      if (this.media) {\n        promise = this.media.pause();\n      }\n      this.clearPlayEnd();\n      return promise;\n    }\n\n    /**\n     * Set the play end\n     *\n     * @param {number} end Where to end\n     */\n  }, {\n    key: \"setPlayEnd\",\n    value: function setPlayEnd(end) {\n      var _this4 = this;\n      this.clearPlayEnd();\n      this._onPlayEnd = function (time) {\n        if (time >= end) {\n          _this4.pause();\n          _this4.seekTo(end);\n        }\n      };\n      this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n  }, {\n    key: \"clearPlayEnd\",\n    value: function clearPlayEnd() {\n      if (this._onPlayEnd) {\n        this.un('audioprocess', this._onPlayEnd);\n        this._onPlayEnd = null;\n      }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n  }, {\n    key: \"getPeaks\",\n    value: function getPeaks(length, first, last) {\n      if (this.buffer) {\n        return _get(_getPrototypeOf(MediaElement.prototype), \"getPeaks\", this).call(this, length, first, last);\n      }\n      return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n  }, {\n    key: \"setSinkId\",\n    value: function setSinkId(deviceId) {\n      if (deviceId) {\n        if (!this.media.setSinkId) {\n          return Promise.reject(new Error('setSinkId is not supported in your browser'));\n        }\n        return this.media.setSinkId(deviceId);\n      }\n      return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n  }, {\n    key: \"getVolume\",\n    value: function getVolume() {\n      return this.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(value) {\n      this.volume = value;\n      // no need to change when it's already at that volume\n      if (this.media.volume !== this.volume) {\n        this.media.volume = this.volume;\n      }\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @since 4.0.0\n     * @param {boolean} muted Specify `true` to mute audio.\n     */\n  }, {\n    key: \"setMute\",\n    value: function setMute(muted) {\n      // This causes a volume change to be emitted too through the\n      // volumechange event listener.\n      this.isMuted = this.media.muted = muted;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this5 = this;\n      this.pause();\n      this.unAll();\n      this.destroyed = true;\n\n      // cleanup media event listeners\n      Object.keys(this.mediaListeners).forEach(function (id) {\n        if (_this5.media) {\n          _this5.media.removeEventListener(id, _this5.mediaListeners[id]);\n        }\n      });\n      if (this.params.removeMediaElementOnDestroy && this.media && this.media.parentNode) {\n        this.media.parentNode.removeChild(this.media);\n      }\n      this.media = null;\n    }\n  }]);\n  return MediaElement;\n}(_webaudio.default);\nexports[\"default\"] = MediaElement;\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/peakcache.js\":\n/*!**************************!*\\\n  !*** ./src/peakcache.js ***!\n  \\**************************/\n/***/ ((module, exports) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nvar PeakCache = /*#__PURE__*/function () {\n  /**\n   * Instantiate cache\n   */\n  function PeakCache() {\n    _classCallCheck(this, PeakCache);\n    this.clearPeakCache();\n  }\n\n  /**\n   * Empty the cache\n   */\n  _createClass(PeakCache, [{\n    key: \"clearPeakCache\",\n    value: function clearPeakCache() {\n      /**\n       * Flat array with entries that are always in pairs to mark the\n       * beginning and end of each subrange.  This is a convenience so we can\n       * iterate over the pairs for easy set difference operations.\n       * @private\n       */\n      this.peakCacheRanges = [];\n      /**\n       * Length of the entire cachable region, used for resetting the cache\n       * when this changes (zoom events, for instance).\n       * @private\n       */\n      this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n  }, {\n    key: \"addRangeToPeakCache\",\n    value: function addRangeToPeakCache(length, start, end) {\n      if (length != this.peakCacheLength) {\n        this.clearPeakCache();\n        this.peakCacheLength = length;\n      }\n\n      // Return ranges that weren't in the cache before the call.\n      var uncachedRanges = [];\n      var i = 0;\n      // Skip ranges before the current start.\n      while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] < start) {\n        i++;\n      }\n      // If |i| is even, |start| falls after an existing range.  Otherwise,\n      // |start| falls between an existing range, and the uncached region\n      // starts when we encounter the next node in |peakCacheRanges| or\n      // |end|, whichever comes first.\n      if (i % 2 == 0) {\n        uncachedRanges.push(start);\n      }\n      while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] <= end) {\n        uncachedRanges.push(this.peakCacheRanges[i]);\n        i++;\n      }\n      // If |i| is even, |end| is after all existing ranges.\n      if (i % 2 == 0) {\n        uncachedRanges.push(end);\n      }\n\n      // Filter out the 0-length ranges.\n      uncachedRanges = uncachedRanges.filter(function (item, pos, arr) {\n        if (pos == 0) {\n          return item != arr[pos + 1];\n        } else if (pos == arr.length - 1) {\n          return item != arr[pos - 1];\n        }\n        return item != arr[pos - 1] && item != arr[pos + 1];\n      });\n\n      // Merge the two ranges together, uncachedRanges will either contain\n      // wholly new points, or duplicates of points in peakCacheRanges.  If\n      // duplicates are detected, remove both and extend the range.\n      this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n      this.peakCacheRanges = this.peakCacheRanges.sort(function (a, b) {\n        return a - b;\n      }).filter(function (item, pos, arr) {\n        if (pos == 0) {\n          return item != arr[pos + 1];\n        } else if (pos == arr.length - 1) {\n          return item != arr[pos - 1];\n        }\n        return item != arr[pos - 1] && item != arr[pos + 1];\n      });\n\n      // Push the uncached ranges into an array of arrays for ease of\n      // iteration in the functions that call this.\n      var uncachedRangePairs = [];\n      for (i = 0; i < uncachedRanges.length; i += 2) {\n        uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n      }\n      return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n  }, {\n    key: \"getCacheRanges\",\n    value: function getCacheRanges() {\n      var peakCacheRangePairs = [];\n      var i;\n      for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n        peakCacheRangePairs.push([this.peakCacheRanges[i], this.peakCacheRanges[i + 1]]);\n      }\n      return peakCacheRangePairs;\n    }\n  }]);\n  return PeakCache;\n}();\nexports[\"default\"] = PeakCache;\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/util/absMax.js\":\n/*!****************************!*\\\n  !*** ./src/util/absMax.js ***!\n  \\****************************/\n/***/ ((module, exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = absMax;\nvar _max = _interopRequireDefault(__webpack_require__(/*! ./max */ \"./src/util/max.js\"));\nvar _min = _interopRequireDefault(__webpack_require__(/*! ./min */ \"./src/util/min.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\r\n * Get the largest absolute value in an array\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n * @since 4.3.0\r\n */\nfunction absMax(values) {\n  var max = (0, _max.default)(values);\n  var min = (0, _min.default)(values);\n  return -min > max ? -min : max;\n}\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/util/clamp.js\":\n/*!***************************!*\\\n  !*** ./src/util/clamp.js ***!\n  \\***************************/\n/***/ ((module, exports) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = clamp;\n/**\n * Returns a number limited to the given range.\n *\n * @param {number} val The number to be limited to a range\n * @param {number} min The lower boundary of the limit range\n * @param {number} max The upper boundary of the limit range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(val, min, max) {\n  return Math.min(Math.max(min, val), max);\n}\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/util/fetch.js\":\n/*!***************************!*\\\n  !*** ./src/util/fetch.js ***!\n  \\***************************/\n/***/ ((module, exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = fetchFile;\nvar _observer = _interopRequireDefault(__webpack_require__(/*! ./observer */ \"./src/util/observer.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar ProgressHandler = /*#__PURE__*/function () {\n  /**\n   * Instantiate ProgressHandler\n   *\n   * @param {Observer} instance The `fetchFile` observer instance.\n   * @param {Number} contentLength Content length.\n   * @param {Response} response Response object.\n   */\n  function ProgressHandler(instance, contentLength, response) {\n    _classCallCheck(this, ProgressHandler);\n    this.instance = instance;\n    this.instance._reader = response.body.getReader();\n    this.total = parseInt(contentLength, 10);\n    this.loaded = 0;\n  }\n\n  /**\n   * A method that is called once, immediately after the `ReadableStream``\n   * is constructed.\n   *\n   * @param {ReadableStreamDefaultController} controller Controller instance\n   *     used to control the stream.\n   */\n  _createClass(ProgressHandler, [{\n    key: \"start\",\n    value: function start(controller) {\n      var _this = this;\n      var read = function read() {\n        // instance._reader.read() returns a promise that resolves\n        // when a value has been received\n        _this.instance._reader.read().then(function (_ref) {\n          var done = _ref.done,\n            value = _ref.value;\n          // result objects contain two properties:\n          // done  - true if the stream has already given you all its data.\n          // value - some data. Always undefined when done is true.\n          if (done) {\n            // ensure onProgress called when content-length=0\n            if (_this.total === 0) {\n              _this.instance.onProgress.call(_this.instance, {\n                loaded: _this.loaded,\n                total: _this.total,\n                lengthComputable: false\n              });\n            }\n            // no more data needs to be consumed, close the stream\n            controller.close();\n            return;\n          }\n          _this.loaded += value.byteLength;\n          _this.instance.onProgress.call(_this.instance, {\n            loaded: _this.loaded,\n            total: _this.total,\n            lengthComputable: !(_this.total === 0)\n          });\n          // enqueue the next data chunk into our target stream\n          controller.enqueue(value);\n          read();\n        }).catch(function (error) {\n          controller.error(error);\n        });\n      };\n      read();\n    }\n  }]);\n  return ProgressHandler;\n}();\n/**\n * Load a file using `fetch`.\n *\n * @param {object} options Request options to use. See example below.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     url: undefined,\n *     method: 'GET',\n *     mode: 'cors',\n *     credentials: 'same-origin',\n *     cache: 'default',\n *     responseType: 'json',\n *     requestHeaders: [],\n *     redirect: 'follow',\n *     referrer: 'client'\n * };\n *\n * // override some options\n * options.url = '../media/demo.wav';\n\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n * options.responseType = 'arraybuffer';\n *\n * // make fetch call\n * let request = util.fetchFile(options);\n *\n * // listen for events\n * request.on('progress', e => {\n *     console.log('progress', e);\n * });\n *\n * request.on('success', data => {\n *     console.log('success!', data);\n * });\n *\n * request.on('error', e => {\n *     console.warn('fetchFile error: ', e);\n * });\n */\nfunction fetchFile(options) {\n  if (!options) {\n    throw new Error('fetch options missing');\n  } else if (!options.url) {\n    throw new Error('fetch url missing');\n  }\n  var instance = new _observer.default();\n  var fetchHeaders = new Headers();\n  var fetchRequest = new Request(options.url);\n\n  // add ability to abort\n  instance.controller = new AbortController();\n\n  // check if headers have to be added\n  if (options && options.requestHeaders) {\n    // add custom request headers\n    options.requestHeaders.forEach(function (header) {\n      fetchHeaders.append(header.key, header.value);\n    });\n  }\n\n  // parse fetch options\n  var responseType = options.responseType || 'json';\n  var fetchOptions = {\n    method: options.method || 'GET',\n    headers: fetchHeaders,\n    mode: options.mode || 'cors',\n    credentials: options.credentials || 'same-origin',\n    cache: options.cache || 'default',\n    redirect: options.redirect || 'follow',\n    referrer: options.referrer || 'client',\n    signal: instance.controller.signal\n  };\n  fetch(fetchRequest, fetchOptions).then(function (response) {\n    // store response reference\n    instance.response = response;\n    var progressAvailable = true;\n    if (!response.body) {\n      // ReadableStream is not yet supported in this browser\n      // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n      progressAvailable = false;\n    }\n\n    // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n    var contentLength = response.headers.get('content-length');\n    if (contentLength === null) {\n      // Content-Length server response header missing.\n      // Don't evaluate download progress if we can't compare against a total size\n      // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n      progressAvailable = false;\n    }\n    if (!progressAvailable) {\n      // not able to check download progress so skip it\n      return response;\n    }\n\n    // fire progress event when during load\n    instance.onProgress = function (e) {\n      instance.fireEvent('progress', e);\n    };\n    return new Response(new ReadableStream(new ProgressHandler(instance, contentLength, response)), fetchOptions);\n  }).then(function (response) {\n    var errMsg;\n    if (response.ok) {\n      switch (responseType) {\n        case 'arraybuffer':\n          return response.arrayBuffer();\n        case 'json':\n          return response.json();\n        case 'blob':\n          return response.blob();\n        case 'text':\n          return response.text();\n        default:\n          errMsg = 'Unknown responseType: ' + responseType;\n          break;\n      }\n    }\n    if (!errMsg) {\n      errMsg = 'HTTP error status: ' + response.status;\n    }\n    throw new Error(errMsg);\n  }).then(function (response) {\n    instance.fireEvent('success', response);\n  }).catch(function (error) {\n    instance.fireEvent('error', error);\n  });\n\n  // return the fetch request\n  instance.fetchRequest = fetchRequest;\n  return instance;\n}\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/util/frame.js\":\n/*!***************************!*\\\n  !*** ./src/util/frame.js ***!\n  \\***************************/\n/***/ ((module, exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = frame;\nvar _requestAnimationFrame = _interopRequireDefault(__webpack_require__(/*! ./request-animation-frame */ \"./src/util/request-animation-frame.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nfunction frame(func) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (0, _requestAnimationFrame.default)(function () {\n      return func.apply(void 0, args);\n    });\n  };\n}\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/util/get-id.js\":\n/*!****************************!*\\\n  !*** ./src/util/get-id.js ***!\n  \\****************************/\n/***/ ((module, exports) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = getId;\n/**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */\nfunction getId(prefix) {\n  if (prefix === undefined) {\n    prefix = 'wavesurfer_';\n  }\n  return prefix + Math.random().toString(32).substring(2);\n}\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/util/index.js\":\n/*!***************************!*\\\n  !*** ./src/util/index.js ***!\n  \\***************************/\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"Observer\", ({\n  enumerable: true,\n  get: function get() {\n    return _observer.default;\n  }\n}));\nObject.defineProperty(exports, \"absMax\", ({\n  enumerable: true,\n  get: function get() {\n    return _absMax.default;\n  }\n}));\nObject.defineProperty(exports, \"clamp\", ({\n  enumerable: true,\n  get: function get() {\n    return _clamp.default;\n  }\n}));\nObject.defineProperty(exports, \"debounce\", ({\n  enumerable: true,\n  get: function get() {\n    return _debounce.default;\n  }\n}));\nObject.defineProperty(exports, \"fetchFile\", ({\n  enumerable: true,\n  get: function get() {\n    return _fetch.default;\n  }\n}));\nObject.defineProperty(exports, \"frame\", ({\n  enumerable: true,\n  get: function get() {\n    return _frame.default;\n  }\n}));\nObject.defineProperty(exports, \"getId\", ({\n  enumerable: true,\n  get: function get() {\n    return _getId.default;\n  }\n}));\nObject.defineProperty(exports, \"ignoreSilenceMode\", ({\n  enumerable: true,\n  get: function get() {\n    return _silenceMode.default;\n  }\n}));\nObject.defineProperty(exports, \"max\", ({\n  enumerable: true,\n  get: function get() {\n    return _max.default;\n  }\n}));\nObject.defineProperty(exports, \"min\", ({\n  enumerable: true,\n  get: function get() {\n    return _min.default;\n  }\n}));\nObject.defineProperty(exports, \"preventClick\", ({\n  enumerable: true,\n  get: function get() {\n    return _preventClick.default;\n  }\n}));\nObject.defineProperty(exports, \"requestAnimationFrame\", ({\n  enumerable: true,\n  get: function get() {\n    return _requestAnimationFrame.default;\n  }\n}));\nObject.defineProperty(exports, \"style\", ({\n  enumerable: true,\n  get: function get() {\n    return _style.default;\n  }\n}));\nObject.defineProperty(exports, \"withOrientation\", ({\n  enumerable: true,\n  get: function get() {\n    return _orientation.default;\n  }\n}));\nvar _getId = _interopRequireDefault(__webpack_require__(/*! ./get-id */ \"./src/util/get-id.js\"));\nvar _max = _interopRequireDefault(__webpack_require__(/*! ./max */ \"./src/util/max.js\"));\nvar _min = _interopRequireDefault(__webpack_require__(/*! ./min */ \"./src/util/min.js\"));\nvar _absMax = _interopRequireDefault(__webpack_require__(/*! ./absMax */ \"./src/util/absMax.js\"));\nvar _observer = _interopRequireDefault(__webpack_require__(/*! ./observer */ \"./src/util/observer.js\"));\nvar _style = _interopRequireDefault(__webpack_require__(/*! ./style */ \"./src/util/style.js\"));\nvar _requestAnimationFrame = _interopRequireDefault(__webpack_require__(/*! ./request-animation-frame */ \"./src/util/request-animation-frame.js\"));\nvar _frame = _interopRequireDefault(__webpack_require__(/*! ./frame */ \"./src/util/frame.js\"));\nvar _debounce = _interopRequireDefault(__webpack_require__(/*! debounce */ \"./node_modules/debounce/index.js\"));\nvar _preventClick = _interopRequireDefault(__webpack_require__(/*! ./prevent-click */ \"./src/util/prevent-click.js\"));\nvar _fetch = _interopRequireDefault(__webpack_require__(/*! ./fetch */ \"./src/util/fetch.js\"));\nvar _clamp = _interopRequireDefault(__webpack_require__(/*! ./clamp */ \"./src/util/clamp.js\"));\nvar _orientation = _interopRequireDefault(__webpack_require__(/*! ./orientation */ \"./src/util/orientation.js\"));\nvar _silenceMode = _interopRequireDefault(__webpack_require__(/*! ./silence-mode */ \"./src/util/silence-mode.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n\n/***/ \"./src/util/max.js\":\n/*!*************************!*\\\n  !*** ./src/util/max.js ***!\n  \\*************************/\n/***/ ((module, exports) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = max;\n/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nfunction max(values) {\n  var largest = -Infinity;\n  Object.keys(values).forEach(function (i) {\n    if (values[i] > largest) {\n      largest = values[i];\n    }\n  });\n  return largest;\n}\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/util/min.js\":\n/*!*************************!*\\\n  !*** ./src/util/min.js ***!\n  \\*************************/\n/***/ ((module, exports) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = min;\n/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nfunction min(values) {\n  var smallest = Number(Infinity);\n  Object.keys(values).forEach(function (i) {\n    if (values[i] < smallest) {\n      smallest = values[i];\n    }\n  });\n  return smallest;\n}\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/util/observer.js\":\n/*!******************************!*\\\n  !*** ./src/util/observer.js ***!\n  \\******************************/\n/***/ ((module, exports) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n/**\n * Observer class\n */\nvar Observer = /*#__PURE__*/function () {\n  /**\n   * Instantiate Observer\n   */\n  function Observer() {\n    _classCallCheck(this, Observer);\n    /**\n     * @private\n     * @todo Initialise the handlers here already and remove the conditional\n     * assignment in `on()`\n     */\n    this._disabledEventEmissions = [];\n    this.handlers = null;\n  }\n  /**\n   * Attach a handler function for an event.\n   *\n   * @param {string} event Name of the event to listen to\n   * @param {function} fn The callback to trigger when the event is fired\n   * @return {ListenerDescriptor} The event descriptor\n   */\n  _createClass(Observer, [{\n    key: \"on\",\n    value: function on(event, fn) {\n      var _this = this;\n      if (!this.handlers) {\n        this.handlers = {};\n      }\n      var handlers = this.handlers[event];\n      if (!handlers) {\n        handlers = this.handlers[event] = [];\n      }\n      handlers.push(fn);\n\n      // Return an event descriptor\n      return {\n        name: event,\n        callback: fn,\n        un: function un(e, fn) {\n          return _this.un(e, fn);\n        }\n      };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n  }, {\n    key: \"un\",\n    value: function un(event, fn) {\n      if (!this.handlers) {\n        return;\n      }\n      var handlers = this.handlers[event];\n      var i;\n      if (handlers) {\n        if (fn) {\n          for (i = handlers.length - 1; i >= 0; i--) {\n            if (handlers[i] == fn) {\n              handlers.splice(i, 1);\n            }\n          }\n        } else {\n          handlers.length = 0;\n        }\n      }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n  }, {\n    key: \"unAll\",\n    value: function unAll() {\n      this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor} The event descriptor\n     */\n  }, {\n    key: \"once\",\n    value: function once(event, handler) {\n      var _this2 = this;\n      var fn = function fn() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        /*  eslint-disable no-invalid-this */\n        handler.apply(_this2, args);\n        /*  eslint-enable no-invalid-this */\n        setTimeout(function () {\n          _this2.un(event, fn);\n        }, 0);\n      };\n      return this.on(event, fn);\n    }\n\n    /**\n     * Disable firing a list of events by name. When specified, event handlers for any event type\n     * passed in here will not be called.\n     *\n     * @since 4.0.0\n     * @param {string[]} eventNames an array of event names to disable emissions for\n     * @example\n     * // disable seek and interaction events\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n     */\n  }, {\n    key: \"setDisabledEventEmissions\",\n    value: function setDisabledEventEmissions(eventNames) {\n      this._disabledEventEmissions = eventNames;\n    }\n\n    /**\n     * plugins borrow part of this class without calling the constructor,\n     * so we have to be careful about _disabledEventEmissions\n     */\n  }, {\n    key: \"_isDisabledEventEmission\",\n    value: function _isDisabledEventEmission(event) {\n      return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n  }, {\n    key: \"fireEvent\",\n    value: function fireEvent(event) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      if (!this.handlers || this._isDisabledEventEmission(event)) {\n        return;\n      }\n      var handlers = this.handlers[event];\n      handlers && handlers.forEach(function (fn) {\n        fn.apply(void 0, args);\n      });\n    }\n  }]);\n  return Observer;\n}();\nexports[\"default\"] = Observer;\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/util/orientation.js\":\n/*!*********************************!*\\\n  !*** ./src/util/orientation.js ***!\n  \\*********************************/\n/***/ ((module, exports) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = withOrientation;\nvar verticalPropMap = {\n  width: 'height',\n  height: 'width',\n  overflowX: 'overflowY',\n  overflowY: 'overflowX',\n  clientWidth: 'clientHeight',\n  clientHeight: 'clientWidth',\n  clientX: 'clientY',\n  clientY: 'clientX',\n  scrollWidth: 'scrollHeight',\n  scrollLeft: 'scrollTop',\n  offsetLeft: 'offsetTop',\n  offsetTop: 'offsetLeft',\n  offsetHeight: 'offsetWidth',\n  offsetWidth: 'offsetHeight',\n  left: 'top',\n  right: 'bottom',\n  top: 'left',\n  bottom: 'right',\n  borderRightStyle: 'borderBottomStyle',\n  borderRightWidth: 'borderBottomWidth',\n  borderRightColor: 'borderBottomColor'\n};\n\n/**\n * Convert a horizontally-oriented property name to a vertical one.\n *\n * @param {string} prop A property name\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {string} prop, converted appropriately\n */\nfunction mapProp(prop, vertical) {\n  if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\n    return vertical ? verticalPropMap[prop] : prop;\n  } else {\n    return prop;\n  }\n}\nvar isProxy = Symbol(\"isProxy\");\n\n/**\n * Returns an appropriately oriented object based on vertical.\n * If vertical is true, attribute getting and setting will be mapped through\n * verticalPropMap, so that e.g. getting the object's .width will give its\n * .height instead.\n * Certain methods of an oriented object will return oriented objects as well.\n * Oriented objects can't be added to the DOM directly since they are Proxy objects\n * and thus fail typechecks. Use domElement to get the actual element for this.\n *\n * @param {object} target The object to be wrapped and oriented\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n * @since 5.0.0\n */\nfunction withOrientation(target, vertical) {\n  if (target[isProxy]) {\n    return target;\n  } else {\n    return new Proxy(target, {\n      get: function get(obj, prop, receiver) {\n        if (prop === isProxy) {\n          return true;\n        } else if (prop === 'domElement') {\n          return obj;\n        } else if (prop === 'style') {\n          return withOrientation(obj.style, vertical);\n        } else if (prop === 'canvas') {\n          return withOrientation(obj.canvas, vertical);\n        } else if (prop === 'getBoundingClientRect') {\n          return function () {\n            return withOrientation(obj.getBoundingClientRect.apply(obj, arguments), vertical);\n          };\n        } else if (prop === 'getContext') {\n          return function () {\n            return withOrientation(obj.getContext.apply(obj, arguments), vertical);\n          };\n        } else {\n          var value = obj[mapProp(prop, vertical)];\n          return typeof value == 'function' ? value.bind(obj) : value;\n        }\n      },\n      set: function set(obj, prop, value) {\n        obj[mapProp(prop, vertical)] = value;\n        return true;\n      }\n    });\n  }\n}\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/util/prevent-click.js\":\n/*!***********************************!*\\\n  !*** ./src/util/prevent-click.js ***!\n  \\***********************************/\n/***/ ((module, exports) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = preventClick;\n/**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */\nfunction preventClickHandler(event) {\n  event.stopPropagation();\n  document.body.removeEventListener('click', preventClickHandler, true);\n}\n\n/**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */\nfunction preventClick(values) {\n  document.body.addEventListener('click', preventClickHandler, true);\n}\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/util/request-animation-frame.js\":\n/*!*********************************************!*\\\n  !*** ./src/util/request-animation-frame.js ***!\n  \\*********************************************/\n/***/ ((module, exports) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n/* eslint-disable valid-jsdoc */\n/**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */\nvar _default = (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback, element) {\n  return setTimeout(callback, 1000 / 60);\n}).bind(window);\nexports[\"default\"] = _default;\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/util/silence-mode.js\":\n/*!**********************************!*\\\n  !*** ./src/util/silence-mode.js ***!\n  \\**********************************/\n/***/ ((module, exports) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = ignoreSilenceMode;\n/**\n * Ignores device silence mode when using the `WebAudio` backend.\n *\n * Many mobile devices contain a hardware button to mute the ringtone for incoming\n * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n * when muting the device ringer.\n *\n * @since 5.2.0\n */\nfunction ignoreSilenceMode() {\n  // Set webaudio context with 1 second silent audio 44100 bit rate buffer to allow playing audio even if silent switch is on the device\n  var silentAC = new AudioContext();\n  var silentBS = silentAC.createBufferSource();\n  silentBS.buffer = silentAC.createBuffer(1, 1, 44100);\n  silentBS.connect(silentAC.destination);\n  silentBS.start();\n\n  // Set the src to a short bit of url encoded as a silent mp3\n  // NOTE The silence MP3 must be high quality, when web audio sounds are played\n  // in parallel the web audio sound is mixed to match the bitrate of the html sound\n  // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n  var audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\n\n  // disable iOS Airplay (setting the attribute in js doesn't work)\n  var tmp = document.createElement(\"div\");\n  tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n  var audioSilentMode = tmp.children.item(0);\n  audioSilentMode.src = audioData;\n  audioSilentMode.preload = \"auto\";\n  audioSilentMode.type = \"audio/mpeg\";\n  audioSilentMode.disableRemotePlayback = true;\n\n  // play\n  audioSilentMode.play();\n\n  // cleanup\n  audioSilentMode.remove();\n  tmp.remove();\n}\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/util/style.js\":\n/*!***************************!*\\\n  !*** ./src/util/style.js ***!\n  \\***************************/\n/***/ ((module, exports) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = style;\n/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nfunction style(el, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    if (el.style[prop] !== styles[prop]) {\n      el.style[prop] = styles[prop];\n    }\n  });\n  return el;\n}\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/wavesurfer.js\":\n/*!***************************!*\\\n  !*** ./src/wavesurfer.js ***!\n  \\***************************/\n/***/ ((module, exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar util = _interopRequireWildcard(__webpack_require__(/*! ./util */ \"./src/util/index.js\"));\nvar _drawer = _interopRequireDefault(__webpack_require__(/*! ./drawer.multicanvas */ \"./src/drawer.multicanvas.js\"));\nvar _webaudio = _interopRequireDefault(__webpack_require__(/*! ./webaudio */ \"./src/webaudio.js\"));\nvar _mediaelement = _interopRequireDefault(__webpack_require__(/*! ./mediaelement */ \"./src/mediaelement.js\"));\nvar _peakcache = _interopRequireDefault(__webpack_require__(/*! ./peakcache */ \"./src/peakcache.js\"));\nvar _mediaelementWebaudio = _interopRequireDefault(__webpack_require__(/*! ./mediaelement-webaudio */ \"./src/mediaelement-webaudio.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform on current progress\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n * waveform is centered\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n * center waveform on current progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n * also with audio with big duration. For example:\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n *   wavesurfer.play();\n *   wavesurfer.setFilter(customFilter);\n * `\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave bars.\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {number} barWidth=null Draw the waveform using bars.\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n * eliminating waveform gaps\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n * attributes.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} hideCursor=false Whether to hide the mouse cursor\n * when one would normally be shown by default.\n * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n * when using the `WebAudio` backend.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * `'audio'|'video'` ('video' only for `MediaElement`)\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options. For example:\n * `let xhr = {\n *     cache: 'default',\n *     mode: 'cors',\n *     method: 'GET',\n *     credentials: 'same-origin',\n *     redirect: 'follow',\n *     referrer: 'client',\n *     requestHeaders: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ]\n * };`\n */\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n/**\n * @typedef {Object} SplitChannelOptions\n * @desc parameters applied when splitChannels option is true\n * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n * @property {object} channelColors={} object describing color for each channel. Example:\n * {\n *     0: {\n *         progressColor: 'green',\n *         waveColor: 'pink'\n *     },\n *     1: {\n *         progressColor: 'orange',\n *         waveColor: 'purple'\n *     }\n * }\n * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n * @property {boolean} relativeNormalization=false determines whether\n * normalization is done per channel or maintains proportionality between\n * channels. Only applied when normalize and splitChannels are both true.\n * @property {boolean} splitDragSelection=false determines if drag selection in regions\n * plugin works separately on each channel or only one selection for all channels\n * @since 4.3.0\n */\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nvar PluginClass = /*#__PURE__*/function () {\n  /**\n   * Construct the plugin\n   *\n   * @param {Object} params={} The plugin params (specific to the plugin)\n   * @param {Object} ws The wavesurfer instance\n   */\n  function PluginClass(params, ws) {\n    _classCallCheck(this, PluginClass);\n  }\n  /**\n   * Initialise the plugin\n   *\n   * Start doing something. This is called by\n   * `wavesurfer.initPlugin(pluginName)`\n   */\n  _createClass(PluginClass, [{\n    key: \"create\",\n    value:\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    function create(params) {}\n  }, {\n    key: \"init\",\n    value: function init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {}\n  }]);\n  return PluginClass;\n}();\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nvar WaveSurfer = /*#__PURE__*/function (_util$Observer) {\n  _inherits(WaveSurfer, _util$Observer);\n  var _super = _createSuper(WaveSurfer);\n  /**\n   * Initialise wavesurfer instance\n   *\n   * @param {WavesurferParams} params Instantiation options for wavesurfer\n   * @example\n   * const wavesurfer = new WaveSurfer(params);\n   * @returns {this} Wavesurfer instance\n   */\n  function WaveSurfer(params) {\n    var _this;\n    _classCallCheck(this, WaveSurfer);\n    _this = _super.call(this);\n    /**\n     * Extract relevant parameters (or defaults)\n     * @private\n     */\n    /** @private */\n    _defineProperty(_assertThisInitialized(_this), \"defaultParams\", {\n      audioContext: null,\n      audioScriptProcessor: null,\n      audioRate: 1,\n      autoCenter: true,\n      autoCenterRate: 5,\n      autoCenterImmediately: false,\n      backend: 'WebAudio',\n      backgroundColor: null,\n      barHeight: 1,\n      barRadius: 0,\n      barGap: null,\n      barMinHeight: null,\n      container: null,\n      cursorColor: '#333',\n      cursorWidth: 1,\n      dragSelection: true,\n      drawingContextAttributes: {\n        // Boolean that hints the user agent to reduce the latency\n        // by desynchronizing the canvas paint cycle from the event\n        // loop\n        desynchronized: false\n      },\n      duration: null,\n      fillParent: true,\n      forceDecode: false,\n      height: 128,\n      hideScrollbar: false,\n      hideCursor: false,\n      ignoreSilenceMode: false,\n      interact: true,\n      loopSelection: true,\n      maxCanvasWidth: 4000,\n      mediaContainer: null,\n      mediaControls: false,\n      mediaType: 'audio',\n      minPxPerSec: 20,\n      normalize: false,\n      partialRender: false,\n      pixelRatio: window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n      plugins: [],\n      progressColor: '#555',\n      removeMediaElementOnDestroy: true,\n      renderer: _drawer.default,\n      responsive: false,\n      rtl: false,\n      scrollParent: false,\n      skipLength: 2,\n      splitChannels: false,\n      splitChannelsOptions: {\n        overlay: false,\n        channelColors: {},\n        filterChannels: [],\n        relativeNormalization: false,\n        splitDragSelection: false\n      },\n      vertical: false,\n      waveColor: '#999',\n      xhr: {}\n    });\n    /** @private */\n    _defineProperty(_assertThisInitialized(_this), \"backends\", {\n      MediaElement: _mediaelement.default,\n      WebAudio: _webaudio.default,\n      MediaElementWebAudio: _mediaelementWebaudio.default\n    });\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    _defineProperty(_assertThisInitialized(_this), \"util\", util);\n    _this.params = Object.assign({}, _this.defaultParams, params);\n    _this.params.splitChannelsOptions = Object.assign({}, _this.defaultParams.splitChannelsOptions, params.splitChannelsOptions);\n    /** @private */\n    _this.container = 'string' == typeof params.container ? document.querySelector(_this.params.container) : _this.params.container;\n    if (!_this.container) {\n      throw new Error('Container element not found');\n    }\n    if (_this.params.mediaContainer == null) {\n      /** @private */\n      _this.mediaContainer = _this.container;\n    } else if (typeof _this.params.mediaContainer == 'string') {\n      /** @private */\n      _this.mediaContainer = document.querySelector(_this.params.mediaContainer);\n    } else {\n      /** @private */\n      _this.mediaContainer = _this.params.mediaContainer;\n    }\n    if (!_this.mediaContainer) {\n      throw new Error('Media Container element not found');\n    }\n    if (_this.params.maxCanvasWidth <= 1) {\n      throw new Error('maxCanvasWidth must be greater than 1');\n    } else if (_this.params.maxCanvasWidth % 2 == 1) {\n      throw new Error('maxCanvasWidth must be an even number');\n    }\n    if (_this.params.rtl === true) {\n      if (_this.params.vertical === true) {\n        util.style(_this.container, {\n          transform: 'rotateX(180deg)'\n        });\n      } else {\n        util.style(_this.container, {\n          transform: 'rotateY(180deg)'\n        });\n      }\n    }\n    if (_this.params.backgroundColor) {\n      _this.setBackgroundColor(_this.params.backgroundColor);\n    }\n\n    /**\n     * @private Used to save the current volume when muting so we can\n     * restore once unmuted\n     * @type {number}\n     */\n    _this.savedVolume = 0;\n\n    /**\n     * @private The current muted state\n     * @type {boolean}\n     */\n    _this.isMuted = false;\n\n    /**\n     * @private Will hold a list of event descriptors that need to be\n     * canceled on subsequent loads of audio\n     * @type {Object[]}\n     */\n    _this.tmpEvents = [];\n\n    /**\n     * @private Holds any running audio downloads\n     * @type {Observer}\n     */\n    _this.currentRequest = null;\n    /** @private */\n    _this.arraybuffer = null;\n    /** @private */\n    _this.drawer = null;\n    /** @private */\n    _this.backend = null;\n    /** @private */\n    _this.peakCache = null;\n\n    // cache constructor objects\n    if (typeof _this.params.renderer !== 'function') {\n      throw new Error('Renderer parameter is invalid');\n    }\n    /**\n     * @private The uninitialised Drawer class\n     */\n    _this.Drawer = _this.params.renderer;\n    /**\n     * @private The uninitialised Backend class\n     */\n    // Back compat\n    if (_this.params.backend == 'AudioElement') {\n      _this.params.backend = 'MediaElement';\n    }\n    if ((_this.params.backend == 'WebAudio' || _this.params.backend === 'MediaElementWebAudio') && !_webaudio.default.prototype.supportsWebAudio.call(null)) {\n      _this.params.backend = 'MediaElement';\n    }\n    _this.Backend = _this.backends[_this.params.backend];\n\n    /**\n     * @private map of plugin names that are currently initialised\n     */\n    _this.initialisedPluginList = {};\n    /** @private */\n    _this.isDestroyed = false;\n\n    /**\n     * Get the current ready status.\n     *\n     * @example const isReady = wavesurfer.isReady;\n     * @return {boolean}\n     */\n    _this.isReady = false;\n\n    // responsive debounced event listener. If this.params.responsive is not\n    // set, this is never called. Use 100ms or this.params.responsive as\n    // timeout for the debounce function.\n    var prevWidth = 0;\n    _this._onResize = util.debounce(function () {\n      if (_this.drawer.wrapper && prevWidth != _this.drawer.wrapper.clientWidth && !_this.params.scrollParent) {\n        prevWidth = _this.drawer.wrapper.clientWidth;\n        if (prevWidth) {\n          // redraw only if waveform container is rendered and has a width\n          _this.drawer.fireEvent('redraw');\n        }\n      }\n    }, typeof _this.params.responsive === 'number' ? _this.params.responsive : 100);\n    return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n  }\n\n  /**\n   * Initialise the wave\n   *\n   * @example\n   * var wavesurfer = new WaveSurfer(params);\n   * wavesurfer.init();\n   * @return {this} The wavesurfer instance\n   */\n  _createClass(WaveSurfer, [{\n    key: \"init\",\n    value: function init() {\n      this.registerPlugins(this.params.plugins);\n      this.createDrawer();\n      this.createBackend();\n      this.createPeakCache();\n      return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this} The wavesurfer instance\n     */\n  }, {\n    key: \"registerPlugins\",\n    value: function registerPlugins(plugins) {\n      var _this2 = this;\n      // first instantiate all the plugins\n      plugins.forEach(function (plugin) {\n        return _this2.addPlugin(plugin);\n      });\n\n      // now run the init functions\n      plugins.forEach(function (plugin) {\n        // call init function of the plugin if deferInit is falsey\n        // in that case you would manually use initPlugins()\n        if (!plugin.deferInit) {\n          _this2.initPlugin(plugin.name);\n        }\n      });\n      this.fireEvent('plugins-registered', plugins);\n      return this;\n    }\n\n    /**\n     * Get a map of plugin names that are currently initialised\n     *\n     * @example wavesurfer.getPlugins();\n     * @return {Object} Object with plugin names\n     */\n  }, {\n    key: \"getActivePlugins\",\n    value: function getActivePlugins() {\n      return this.initialisedPluginList;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this} The wavesurfer instance\n     */\n  }, {\n    key: \"addPlugin\",\n    value: function addPlugin(plugin) {\n      var _this3 = this;\n      if (!plugin.name) {\n        throw new Error('Plugin does not have a name!');\n      }\n      if (!plugin.instance) {\n        throw new Error(\"Plugin \".concat(plugin.name, \" does not have an instance property!\"));\n      }\n\n      // staticProps properties are applied to wavesurfer instance\n      if (plugin.staticProps) {\n        Object.keys(plugin.staticProps).forEach(function (pluginStaticProp) {\n          /**\n           * Properties defined in a plugin definition's `staticProps` property are added as\n           * staticProps properties of the WaveSurfer instance\n           */\n          _this3[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n        });\n      }\n      var Instance = plugin.instance;\n\n      // turn the plugin instance into an observer\n      var observerPrototypeKeys = Object.getOwnPropertyNames(util.Observer.prototype);\n      observerPrototypeKeys.forEach(function (key) {\n        Instance.prototype[key] = util.Observer.prototype[key];\n      });\n\n      /**\n       * Instantiated plugin classes are added as a property of the wavesurfer\n       * instance\n       * @type {Object}\n       */\n      this[plugin.name] = new Instance(plugin.params || {}, this);\n      this.fireEvent('plugin-added', plugin.name);\n      return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this} The wavesurfer instance\n     */\n  }, {\n    key: \"initPlugin\",\n    value: function initPlugin(name) {\n      if (!this[name]) {\n        throw new Error(\"Plugin \".concat(name, \" has not been added yet!\"));\n      }\n      if (this.initialisedPluginList[name]) {\n        // destroy any already initialised plugins\n        this.destroyPlugin(name);\n      }\n      this[name].init();\n      this.initialisedPluginList[name] = true;\n      this.fireEvent('plugin-initialised', name);\n      return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this} The wavesurfer instance\n     */\n  }, {\n    key: \"destroyPlugin\",\n    value: function destroyPlugin(name) {\n      if (!this[name]) {\n        throw new Error(\"Plugin \".concat(name, \" has not been added yet and cannot be destroyed!\"));\n      }\n      if (!this.initialisedPluginList[name]) {\n        throw new Error(\"Plugin \".concat(name, \" is not active and cannot be destroyed!\"));\n      }\n      if (typeof this[name].destroy !== 'function') {\n        throw new Error(\"Plugin \".concat(name, \" does not have a destroy function!\"));\n      }\n      this[name].destroy();\n      delete this.initialisedPluginList[name];\n      this.fireEvent('plugin-destroyed', name);\n      return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n  }, {\n    key: \"destroyAllPlugins\",\n    value: function destroyAllPlugins() {\n      var _this4 = this;\n      Object.keys(this.initialisedPluginList).forEach(function (name) {\n        return _this4.destroyPlugin(name);\n      });\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n  }, {\n    key: \"createDrawer\",\n    value: function createDrawer() {\n      var _this5 = this;\n      this.drawer = new this.Drawer(this.container, this.params);\n      this.drawer.init();\n      this.fireEvent('drawer-created', this.drawer);\n      if (this.params.responsive !== false) {\n        window.addEventListener('resize', this._onResize, true);\n        window.addEventListener('orientationchange', this._onResize, true);\n      }\n      this.drawer.on('redraw', function () {\n        _this5.drawBuffer();\n        _this5.drawer.progress(_this5.backend.getPlayedPercents());\n      });\n\n      // Click-to-seek\n      this.drawer.on('click', function (e, progress) {\n        setTimeout(function () {\n          return _this5.seekTo(progress);\n        }, 0);\n      });\n\n      // Relay the scroll event from the drawer\n      this.drawer.on('scroll', function (e) {\n        if (_this5.params.partialRender) {\n          _this5.drawBuffer();\n        }\n        _this5.fireEvent('scroll', e);\n      });\n\n      // Relay the dblclick event from the drawer\n      this.drawer.on('dblclick', function (e, progress) {\n        _this5.fireEvent('dblclick', e, progress);\n      });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n  }, {\n    key: \"createBackend\",\n    value: function createBackend() {\n      var _this6 = this;\n      if (this.backend) {\n        this.backend.destroy();\n      }\n      this.backend = new this.Backend(this.params);\n      this.backend.init();\n      this.fireEvent('backend-created', this.backend);\n      this.backend.on('finish', function () {\n        _this6.drawer.progress(_this6.backend.getPlayedPercents());\n        _this6.fireEvent('finish');\n      });\n      this.backend.on('play', function () {\n        return _this6.fireEvent('play');\n      });\n      this.backend.on('pause', function () {\n        return _this6.fireEvent('pause');\n      });\n      this.backend.on('audioprocess', function (time) {\n        _this6.drawer.progress(_this6.backend.getPlayedPercents());\n        _this6.fireEvent('audioprocess', time);\n      });\n\n      // only needed for MediaElement and MediaElementWebAudio backend\n      if (this.params.backend === 'MediaElement' || this.params.backend === 'MediaElementWebAudio') {\n        this.backend.on('seek', function () {\n          _this6.drawer.progress(_this6.backend.getPlayedPercents());\n        });\n        this.backend.on('volume', function () {\n          var newVolume = _this6.getVolume();\n          _this6.fireEvent('volume', newVolume);\n          if (_this6.backend.isMuted !== _this6.isMuted) {\n            _this6.isMuted = _this6.backend.isMuted;\n            _this6.fireEvent('mute', _this6.isMuted);\n          }\n        });\n      }\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n  }, {\n    key: \"createPeakCache\",\n    value: function createPeakCache() {\n      if (this.params.partialRender) {\n        this.peakCache = new _peakcache.default();\n      }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n  }, {\n    key: \"setCurrentTime\",\n    value: function setCurrentTime(seconds) {\n      if (seconds >= this.getDuration()) {\n        this.seekTo(1);\n      } else {\n        this.seekTo(seconds / this.getDuration());\n      }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise} Result of the backend play method\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n  }, {\n    key: \"play\",\n    value: function play(start, end) {\n      var _this7 = this;\n      if (this.params.ignoreSilenceMode) {\n        // ignores device hardware silence mode\n        util.ignoreSilenceMode();\n      }\n      this.fireEvent('interaction', function () {\n        return _this7.play(start, end);\n      });\n      return this.backend.play(start, end);\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} position Position (in seconds) to stop at\n     * @version 3.3.0\n     */\n  }, {\n    key: \"setPlayEnd\",\n    value: function setPlayEnd(position) {\n      this.backend.setPlayEnd(position);\n    }\n\n    /**\n     * Stops and pauses playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise} Result of the backend pause method\n     */\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (!this.backend.isPaused()) {\n        return this.backend.pause();\n      }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise} Result of the backend play or pause method\n     */\n  }, {\n    key: \"playPause\",\n    value: function playPause() {\n      return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n  }, {\n    key: \"isPlaying\",\n    value: function isPlaying() {\n      return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n  }, {\n    key: \"skipBackward\",\n    value: function skipBackward(seconds) {\n      this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n  }, {\n    key: \"skipForward\",\n    value: function skipForward(seconds) {\n      this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n  }, {\n    key: \"skip\",\n    value: function skip(offset) {\n      var duration = this.getDuration() || 1;\n      var position = this.getCurrentTime() || 0;\n      position = Math.max(0, Math.min(duration, position + (offset || 0)));\n      this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n  }, {\n    key: \"seekAndCenter\",\n    value: function seekAndCenter(progress) {\n      this.seekTo(progress);\n      this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n  }, {\n    key: \"seekTo\",\n    value: function seekTo(progress) {\n      var _this8 = this;\n      // return an error if progress is not a number between 0 and 1\n      if (typeof progress !== 'number' || !isFinite(progress) || progress < 0 || progress > 1) {\n        throw new Error('Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!');\n      }\n      this.fireEvent('interaction', function () {\n        return _this8.seekTo(progress);\n      });\n      var isWebAudioBackend = this.params.backend === 'WebAudio';\n      var paused = this.backend.isPaused();\n      if (isWebAudioBackend && !paused) {\n        this.backend.pause();\n      }\n\n      // avoid small scrolls while paused seeking\n      var oldScrollParent = this.params.scrollParent;\n      this.params.scrollParent = false;\n      this.backend.seekTo(progress * this.getDuration());\n      this.drawer.progress(progress);\n      if (isWebAudioBackend && !paused) {\n        this.backend.play();\n      }\n      this.params.scrollParent = oldScrollParent;\n      this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.pause();\n      this.seekTo(0);\n      this.drawer.progress(0);\n    }\n\n    /**\n     * Sets the ID of the audio device to use for output and returns a Promise.\n     *\n     * @param {string} deviceId String value representing underlying output\n     * device\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\n     * no errors detected.\n     */\n  }, {\n    key: \"setSinkId\",\n    value: function setSinkId(deviceId) {\n      return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(newVolume) {\n      if (this.isMuted === true) {\n        this.savedVolume = newVolume;\n        return;\n      }\n      this.backend.setVolume(newVolume);\n      this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n  }, {\n    key: \"getVolume\",\n    value: function getVolume() {\n      return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(rate) {\n      this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number} The current playback rate.\n     */\n  }, {\n    key: \"getPlaybackRate\",\n    value: function getPlaybackRate() {\n      return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. If not currently muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n  }, {\n    key: \"toggleMute\",\n    value: function toggleMute() {\n      this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute Specify `true` to mute audio.\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     * console.log(wavesurfer.getMute()) // logs false\n     */\n  }, {\n    key: \"setMute\",\n    value: function setMute(mute) {\n      // ignore all muting requests if the audio is already in that state\n      if (mute === this.isMuted) {\n        this.fireEvent('mute', this.isMuted);\n        return;\n      }\n      if (this.backend.setMute) {\n        // Backends such as the MediaElement backend have their own handling\n        // of mute, let them handle it.\n        this.backend.setMute(mute);\n        this.isMuted = mute;\n      } else {\n        if (mute) {\n          // If currently not muted then save current volume,\n          // turn off the volume and update the mute properties\n          this.savedVolume = this.backend.getVolume();\n          this.backend.setVolume(0);\n          this.isMuted = true;\n          this.fireEvent('volume', 0);\n        } else {\n          // If currently muted then restore to the saved volume\n          // and update the mute properties\n          this.backend.setVolume(this.savedVolume);\n          this.isMuted = false;\n          this.fireEvent('volume', this.savedVolume);\n        }\n      }\n      this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean} Current mute status\n     */\n  }, {\n    key: \"getMute\",\n    value: function getMute() {\n      return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array} List of enabled filters\n     */\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n  }, {\n    key: \"toggleScroll\",\n    value: function toggleScroll() {\n      this.params.scrollParent = !this.params.scrollParent;\n      this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n  }, {\n    key: \"toggleInteraction\",\n    value: function toggleInteraction() {\n      this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @param {?number} channelIdx Optional index of the channel to get its wave color if splitChannels is true\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\n     */\n  }, {\n    key: \"getWaveColor\",\n    value: function getWaveColor() {\n      var channelIdx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n        return this.params.splitChannelsOptions.channelColors[channelIdx].waveColor;\n      }\n      return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\n     * @param {?number} channelIdx Optional index of the channel to set its wave color if splitChannels is true\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n  }, {\n    key: \"setWaveColor\",\n    value: function setWaveColor(color) {\n      var channelIdx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n        this.params.splitChannelsOptions.channelColors[channelIdx].waveColor = color;\n      } else {\n        this.params.waveColor = color;\n      }\n      this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @param {?number} channelIdx Optional index of the channel to get its progress color if splitChannels is true\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\n     */\n  }, {\n    key: \"getProgressColor\",\n    value: function getProgressColor() {\n      var channelIdx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n        return this.params.splitChannelsOptions.channelColors[channelIdx].progressColor;\n      }\n      return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\n     * @param {?number} channelIdx Optional index of the channel to set its progress color if splitChannels is true\n     * @example wavesurfer.setProgressColor('#400');\n     */\n  }, {\n    key: \"setProgressColor\",\n    value: function setProgressColor(color, channelIdx) {\n      if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n        this.params.splitChannelsOptions.channelColors[channelIdx].progressColor = color;\n      } else {\n        this.params.progressColor = color;\n      }\n      this.drawBuffer();\n    }\n\n    /**\n     * Get the background color of the waveform container.\n     *\n     * @return {string} A CSS color string.\n     */\n  }, {\n    key: \"getBackgroundColor\",\n    value: function getBackgroundColor() {\n      return this.params.backgroundColor;\n    }\n\n    /**\n     * Set the background color of the waveform container.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\n     */\n  }, {\n    key: \"setBackgroundColor\",\n    value: function setBackgroundColor(color) {\n      this.params.backgroundColor = color;\n      util.style(this.container, {\n        background: this.params.backgroundColor\n      });\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n  }, {\n    key: \"getCursorColor\",\n    value: function getCursorColor() {\n      return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n  }, {\n    key: \"setCursorColor\",\n    value: function setCursorColor(color) {\n      this.params.cursorColor = color;\n      this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n  }, {\n    key: \"setHeight\",\n    value: function setHeight(height) {\n      this.params.height = height;\n      this.drawer.setHeight(height * this.params.pixelRatio);\n      this.drawBuffer();\n    }\n\n    /**\n     * Hide channels from being drawn on the waveform if splitting channels.\n     *\n     * For example, if we want to draw only the peaks for the right stereo channel:\n     *\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n     * wavesurfer.load('stereo_audio.mp3');\n     *\n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n     *\n     * @param {array} channelIndices Channels to be filtered out from drawing.\n     * @version 4.0.0\n     */\n  }, {\n    key: \"setFilteredChannels\",\n    value: function setFilteredChannels(channelIndices) {\n      this.params.splitChannelsOptions.filterChannels = channelIndices;\n      this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave view-port and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n  }, {\n    key: \"drawBuffer\",\n    value: function drawBuffer() {\n      var nominalWidth = Math.round(this.getDuration() * this.params.minPxPerSec * this.params.pixelRatio);\n      var parentWidth = this.drawer.getWidth();\n      var width = nominalWidth;\n      // always start at 0 after zooming for scrolling : issue redraw left part\n      var start = 0;\n      var end = Math.max(start + parentWidth, width);\n      // Fill container\n      if (this.params.fillParent && (!this.params.scrollParent || nominalWidth < parentWidth)) {\n        width = parentWidth;\n        start = 0;\n        end = width;\n      }\n      var peaks;\n      if (this.params.partialRender) {\n        var newRanges = this.peakCache.addRangeToPeakCache(width, start, end);\n        var i;\n        for (i = 0; i < newRanges.length; i++) {\n          peaks = this.backend.getPeaks(width, newRanges[i][0], newRanges[i][1]);\n          this.drawer.drawPeaks(peaks, width, newRanges[i][0], newRanges[i][1]);\n        }\n      } else {\n        peaks = this.backend.getPeaks(width, start, end);\n        this.drawer.drawPeaks(peaks, width, start, end);\n      }\n      this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n  }, {\n    key: \"zoom\",\n    value: function zoom(pxPerSec) {\n      if (!pxPerSec) {\n        this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n        this.params.scrollParent = false;\n      } else {\n        this.params.minPxPerSec = pxPerSec;\n        this.params.scrollParent = true;\n      }\n      this.drawBuffer();\n      this.drawer.progress(this.backend.getPlayedPercents());\n      this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n      this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer Buffer to process\n     */\n  }, {\n    key: \"loadArrayBuffer\",\n    value: function loadArrayBuffer(arraybuffer) {\n      var _this9 = this;\n      this.decodeArrayBuffer(arraybuffer, function (data) {\n        if (!_this9.isDestroyed) {\n          _this9.loadDecodedBuffer(data);\n        }\n      });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer Buffer to process\n     * @emits WaveSurfer#ready\n     */\n  }, {\n    key: \"loadDecodedBuffer\",\n    value: function loadDecodedBuffer(buffer) {\n      this.backend.load(buffer);\n      this.drawBuffer();\n      this.isReady = true;\n      this.fireEvent('ready');\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n  }, {\n    key: \"loadBlob\",\n    value: function loadBlob(blob) {\n      var _this10 = this;\n      // Create file reader\n      var reader = new FileReader();\n      reader.addEventListener('progress', function (e) {\n        return _this10.onProgress(e);\n      });\n      reader.addEventListener('load', function (e) {\n        return _this10.loadArrayBuffer(e.target.result);\n      });\n      reader.addEventListener('error', function () {\n        return _this10.fireEvent('error', 'Error reading file');\n      });\n      reader.readAsArrayBuffer(blob);\n      this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current `minPxPerSec` and zoom value) without having to decode\n     * the audio.\n     * @returns {void}\n     * @throws Will throw an error if the `url` argument is empty.\n     * @example\n     * // uses fetch or media element to load file (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * // peaks\n     * wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true\n     * );\n     */\n  }, {\n    key: \"load\",\n    value: function load(url, peaks, preload, duration) {\n      if (!url) {\n        throw new Error('url parameter cannot be empty');\n      }\n      this.empty();\n      if (preload) {\n        // check whether the preload attribute will be usable and if not log\n        // a warning listing the reasons why not and nullify the variable\n        var preloadIgnoreReasons = {\n          \"Preload is not 'auto', 'none' or 'metadata'\": ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n          'Peaks are not provided': !peaks,\n          \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\": ['MediaElement', 'MediaElementWebAudio'].indexOf(this.params.backend) === -1,\n          'Url is not of type string': typeof url !== 'string'\n        };\n        var activeReasons = Object.keys(preloadIgnoreReasons).filter(function (reason) {\n          return preloadIgnoreReasons[reason];\n        });\n        if (activeReasons.length) {\n          // eslint-disable-next-line no-console\n          console.warn('Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' + activeReasons.join('\\n\\t- '));\n          // stop invalid values from being used\n          preload = null;\n        }\n      }\n\n      // loadBuffer(url, peaks, duration) requires that url is a string\n      // but users can pass in a HTMLMediaElement to WaveSurfer\n      if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\n        url = url.src;\n      }\n      switch (this.params.backend) {\n        case 'WebAudio':\n          return this.loadBuffer(url, peaks, duration);\n        case 'MediaElement':\n        case 'MediaElementWebAudio':\n          return this.loadMediaElement(url, peaks, preload, duration);\n      }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string} url URL of audio file\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Optional duration of audio file\n     * @returns {void}\n     */\n  }, {\n    key: \"loadBuffer\",\n    value: function loadBuffer(url, peaks, duration) {\n      var _this11 = this;\n      var load = function load(action) {\n        if (action) {\n          _this11.tmpEvents.push(_this11.once('ready', action));\n        }\n        return _this11.getArrayBuffer(url, function (data) {\n          return _this11.loadArrayBuffer(data);\n        });\n      };\n      if (peaks) {\n        this.backend.setPeaks(peaks, duration);\n        this.drawBuffer();\n        this.fireEvent('waveform-ready');\n        this.tmpEvents.push(this.once('interaction', load));\n      } else {\n        return load();\n      }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration Optional duration of audio file\n     */\n  }, {\n    key: \"loadMediaElement\",\n    value: function loadMediaElement(urlOrElt, peaks, preload, duration) {\n      var _this12 = this;\n      var url = urlOrElt;\n      if (typeof urlOrElt === 'string') {\n        this.backend.load(url, this.mediaContainer, peaks, preload);\n      } else {\n        var elt = urlOrElt;\n        this.backend.loadElt(elt, peaks);\n\n        // If peaks are not provided,\n        // url = element.src so we can get peaks with web audio\n        url = elt.src;\n      }\n      this.tmpEvents.push(this.backend.once('canplay', function () {\n        // ignore when backend was already destroyed\n        if (!_this12.backend.destroyed) {\n          _this12.drawBuffer();\n          _this12.isReady = true;\n          _this12.fireEvent('ready');\n        }\n      }), this.backend.once('error', function (err) {\n        return _this12.fireEvent('error', err);\n      }));\n\n      // If peaks are provided, render them and fire the `waveform-ready` event.\n      if (peaks) {\n        this.backend.setPeaks(peaks, duration);\n        this.drawBuffer();\n        this.fireEvent('waveform-ready');\n      }\n\n      // If no pre-decoded peaks are provided, or are provided with\n      // forceDecode flag, attempt to download the audio file and decode it\n      // with Web Audio.\n      if ((!peaks || this.params.forceDecode) && this.backend.supportsWebAudio()) {\n        this.getArrayBuffer(url, function (arraybuffer) {\n          _this12.decodeArrayBuffer(arraybuffer, function (buffer) {\n            _this12.backend.buffer = buffer;\n            _this12.backend.setPeaks(null);\n            _this12.drawBuffer();\n            _this12.fireEvent('waveform-ready');\n          });\n        });\n      }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete\n     */\n  }, {\n    key: \"decodeArrayBuffer\",\n    value: function decodeArrayBuffer(arraybuffer, callback) {\n      var _this13 = this;\n      if (!this.isDestroyed) {\n        this.arraybuffer = arraybuffer;\n        this.backend.decodeArrayBuffer(arraybuffer, function (data) {\n          // Only use the decoded data if we haven't been destroyed or\n          // another decode started in the meantime\n          if (!_this13.isDestroyed && _this13.arraybuffer == arraybuffer) {\n            callback(data);\n            _this13.arraybuffer = null;\n          }\n        }, function () {\n          return _this13.fireEvent('error', 'Error decoding audiobuffer');\n        });\n      }\n    }\n\n    /**\n     * Load an array buffer using fetch and pass the result to a callback\n     *\n     * @param {string} url The URL of the file object\n     * @param {function} callback The function to call on complete\n     * @returns {util.fetchFile} fetch call\n     * @private\n     */\n  }, {\n    key: \"getArrayBuffer\",\n    value: function getArrayBuffer(url, callback) {\n      var _this14 = this;\n      var options = Object.assign({\n        url: url,\n        responseType: 'arraybuffer'\n      }, this.params.xhr);\n      var request = util.fetchFile(options);\n      this.currentRequest = request;\n      this.tmpEvents.push(request.on('progress', function (e) {\n        _this14.onProgress(e);\n      }), request.on('success', function (data) {\n        callback(data);\n        _this14.currentRequest = null;\n      }), request.on('error', function (e) {\n        _this14.fireEvent('error', e);\n        _this14.currentRequest = null;\n      }));\n      return request;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e Progress event\n     * @emits WaveSurfer#loading\n     */\n  }, {\n    key: \"onProgress\",\n    value: function onProgress(e) {\n      var percentComplete;\n      if (e.lengthComputable) {\n        percentComplete = e.loaded / e.total;\n      } else {\n        // Approximate progress with an asymptotic\n        // function, and assume downloads in the 1-3 MB range.\n        percentComplete = e.loaded / (e.loaded + 1000000);\n      }\n      this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and optionally opens in a new window\n     * as valid JSON Blob instance.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks\n     * @param {number} accuracy=10000\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start Start index\n     * @param {number} end End index\n     * @return {Promise} Promise that resolves with array of peaks\n     */\n  }, {\n    key: \"exportPCM\",\n    value: function exportPCM(length, accuracy, noWindow, start, end) {\n      length = length || 1024;\n      start = start || 0;\n      accuracy = accuracy || 10000;\n      noWindow = noWindow || false;\n      var peaks = this.backend.getPeaks(length, start, end);\n      var arr = [].map.call(peaks, function (val) {\n        return Math.round(val * accuracy) / accuracy;\n      });\n      return new Promise(function (resolve, reject) {\n        if (!noWindow) {\n          var blobJSON = new Blob([JSON.stringify(arr)], {\n            type: 'application/json;charset=utf-8'\n          });\n          var objURL = URL.createObjectURL(blobJSON);\n          window.open(objURL);\n          URL.revokeObjectURL(objURL);\n        }\n        resolve(arr);\n      });\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `image/png`. Other supported types are\n     * `image/jpeg` and `image/webp`.\n     *\n     * @param {string} format='image/png' A string indicating the image format.\n     * The default format type is `image/png`.\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\n     * quality to use for image formats that use lossy compression such as\n     * `image/jpeg` and `image/webp`.\n     * @param {string} type Image data type to return. Either `dataURL` (default)\n     * or `blob`.\n     * @return {string|string[]|Promise} When using `dataURL` type this returns\n     * a single data URL or an array of data URLs, one for each canvas. When using\n     * `blob` type this returns a `Promise` resolving with an array of `Blob`\n     * instances, one for each canvas.\n     */\n  }, {\n    key: \"exportImage\",\n    value: function exportImage(format, quality, type) {\n      if (!format) {\n        format = 'image/png';\n      }\n      if (!quality) {\n        quality = 1;\n      }\n      if (!type) {\n        type = 'dataURL';\n      }\n      return this.drawer.getImage(format, quality, type);\n    }\n\n    /**\n     * Cancel any fetch request currently in progress\n     */\n  }, {\n    key: \"cancelAjax\",\n    value: function cancelAjax() {\n      if (this.currentRequest && this.currentRequest.controller) {\n        // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n        // See: Wavesurfer issue #2042\n        // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n        if (this.currentRequest._reader) {\n          // Ignoring exceptions thrown by call to cancel()\n          this.currentRequest._reader.cancel().catch(function (err) {});\n        }\n        this.currentRequest.controller.abort();\n        this.currentRequest = null;\n      }\n    }\n\n    /**\n     * @private\n     */\n  }, {\n    key: \"clearTmpEvents\",\n    value: function clearTmpEvents() {\n      this.tmpEvents.forEach(function (e) {\n        return e.un();\n      });\n    }\n\n    /**\n     * Display empty waveform.\n     */\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      if (!this.backend.isPaused()) {\n        this.stop();\n        this.backend.disconnectSource();\n      }\n      this.isReady = false;\n      this.cancelAjax();\n      this.clearTmpEvents();\n\n      // empty drawer\n      this.drawer.progress(0);\n      this.drawer.setWidth(0);\n      this.drawer.drawPeaks({\n        length: this.drawer.getWidth()\n      }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.destroyAllPlugins();\n      this.fireEvent('destroy');\n      this.cancelAjax();\n      this.clearTmpEvents();\n      this.unAll();\n      if (this.params.responsive !== false) {\n        window.removeEventListener('resize', this._onResize, true);\n        window.removeEventListener('orientationchange', this._onResize, true);\n      }\n      if (this.backend) {\n        this.backend.destroy();\n        // clears memory usage\n        this.backend = null;\n      }\n      if (this.drawer) {\n        this.drawer.destroy();\n      }\n      this.isDestroyed = true;\n      this.isReady = false;\n      this.arraybuffer = null;\n    }\n  }], [{\n    key: \"create\",\n    value:\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    function create(params) {\n      var wavesurfer = new WaveSurfer(params);\n      return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n  }]);\n  return WaveSurfer;\n}(util.Observer);\nexports[\"default\"] = WaveSurfer;\n_defineProperty(WaveSurfer, \"VERSION\", \"6.6.4\");\n/**\n * Functions in the `util` property are available as a static property of the\n * WaveSurfer class\n *\n * @type {Object}\n * @example\n * WaveSurfer.util.style(myElement, { background: 'blue' });\n */\n_defineProperty(WaveSurfer, \"util\", util);\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./src/webaudio.js\":\n/*!*************************!*\\\n  !*** ./src/webaudio.js ***!\n  \\*************************/\n/***/ ((module, exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar util = _interopRequireWildcard(__webpack_require__(/*! ./util */ \"./src/util/index.js\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// using constants to prevent someone writing the string wrong\nvar PLAYING = 'playing';\nvar PAUSED = 'paused';\nvar FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {util.Observer}\n */\nvar WebAudio = /*#__PURE__*/function (_util$Observer) {\n  _inherits(WebAudio, _util$Observer);\n  var _super = _createSuper(WebAudio);\n  /**\n   * Construct the backend\n   *\n   * @param {WavesurferParams} params Wavesurfer parameters\n   */\n  function WebAudio(params) {\n    var _defineProperty2, _this$states;\n    var _this;\n    _classCallCheck(this, WebAudio);\n    _this = _super.call(this);\n    /** @private */\n    /** audioContext: allows to process audio with WebAudio API */\n    _defineProperty(_assertThisInitialized(_this), \"audioContext\", null);\n    /** @private */\n    _defineProperty(_assertThisInitialized(_this), \"stateBehaviors\", (_defineProperty2 = {}, _defineProperty(_defineProperty2, PLAYING, {\n      init: function init() {\n        this.addOnAudioProcess();\n      },\n      getPlayedPercents: function getPlayedPercents() {\n        var duration = this.getDuration();\n        return this.getCurrentTime() / duration || 0;\n      },\n      getCurrentTime: function getCurrentTime() {\n        return this.startPosition + this.getPlayedTime();\n      }\n    }), _defineProperty(_defineProperty2, PAUSED, {\n      init: function init() {},\n      getPlayedPercents: function getPlayedPercents() {\n        var duration = this.getDuration();\n        return this.getCurrentTime() / duration || 0;\n      },\n      getCurrentTime: function getCurrentTime() {\n        return this.startPosition;\n      }\n    }), _defineProperty(_defineProperty2, FINISHED, {\n      init: function init() {\n        this.fireEvent('finish');\n      },\n      getPlayedPercents: function getPlayedPercents() {\n        return 1;\n      },\n      getCurrentTime: function getCurrentTime() {\n        return this.getDuration();\n      }\n    }), _defineProperty2));\n    _this.params = params;\n    /** ac: Audio Context instance */\n    _this.ac = params.audioContext || (_this.supportsWebAudio() ? _this.getAudioContext() : {});\n    /**@private */\n    _this.lastPlay = _this.ac.currentTime;\n    /** @private */\n    _this.startPosition = 0;\n    /** @private */\n    _this.scheduledPause = null;\n    /** @private */\n    _this.states = (_this$states = {}, _defineProperty(_this$states, PLAYING, Object.create(_this.stateBehaviors[PLAYING])), _defineProperty(_this$states, PAUSED, Object.create(_this.stateBehaviors[PAUSED])), _defineProperty(_this$states, FINISHED, Object.create(_this.stateBehaviors[FINISHED])), _this$states);\n    /** @private */\n    _this.buffer = null;\n    /** @private */\n    _this.filters = [];\n    /** gainNode: allows to control audio volume */\n    _this.gainNode = null;\n    /** @private */\n    _this.mergedPeaks = null;\n    /** @private */\n    _this.offlineAc = null;\n    /** @private */\n    _this.peaks = null;\n    /** @private */\n    _this.playbackRate = 1;\n    /** analyser: provides audio analysis information */\n    _this.analyser = null;\n    /** scriptNode: allows processing audio */\n    _this.scriptNode = null;\n    /** @private */\n    _this.source = null;\n    /** @private */\n    _this.splitPeaks = [];\n    /** @private */\n    _this.state = null;\n    /** @private */\n    _this.explicitDuration = params.duration;\n    /** @private */\n    _this.sinkStreamDestination = null;\n    /** @private */\n    _this.sinkAudioElement = null;\n    /**\n     * Boolean indicating if the backend was destroyed.\n     */\n    _this.destroyed = false;\n    return _this;\n  }\n\n  /**\n   * Initialise the backend, called in `wavesurfer.createBackend()`\n   */\n  _createClass(WebAudio, [{\n    key: \"supportsWebAudio\",\n    value:\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */\n    function supportsWebAudio() {\n      return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext} Existing audio context, or creates a new one\n     */\n  }, {\n    key: \"getAudioContext\",\n    value: function getAudioContext() {\n      if (!window.WaveSurferAudioContext) {\n        window.WaveSurferAudioContext = new (window.AudioContext || window.webkitAudioContext)();\n      }\n      return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate The sample rate to use\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\n     * a new one\n     */\n  }, {\n    key: \"getOfflineAudioContext\",\n    value: function getOfflineAudioContext(sampleRate) {\n      if (!window.WaveSurferOfflineAudioContext) {\n        window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext || window.webkitOfflineAudioContext)(1, 2, sampleRate);\n      }\n      return window.WaveSurferOfflineAudioContext;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.createVolumeNode();\n      this.createScriptNode();\n      this.createAnalyserNode();\n      this.setState(PAUSED);\n      this.setPlaybackRate(this.params.audioRate);\n      this.setLength(0);\n    }\n\n    /** @private */\n  }, {\n    key: \"disconnectFilters\",\n    value: function disconnectFilters() {\n      if (this.filters) {\n        this.filters.forEach(function (filter) {\n          filter && filter.disconnect();\n        });\n        this.filters = null;\n        // Reconnect direct path\n        this.analyser.connect(this.gainNode);\n      }\n    }\n\n    /**\n     * @private\n     *\n     * @param {string} state The new state\n     */\n  }, {\n    key: \"setState\",\n    value: function setState(state) {\n      if (this.state !== this.states[state]) {\n        this.state = this.states[state];\n        this.state.init.call(this);\n      }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters One or more filters to set\n     */\n  }, {\n    key: \"setFilter\",\n    value: function setFilter() {\n      for (var _len = arguments.length, filters = new Array(_len), _key = 0; _key < _len; _key++) {\n        filters[_key] = arguments[_key];\n      }\n      this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n  }, {\n    key: \"setFilters\",\n    value: function setFilters(filters) {\n      // Remove existing filters\n      this.disconnectFilters();\n\n      // Insert filters if filter array not empty\n      if (filters && filters.length) {\n        this.filters = filters;\n\n        // Disconnect direct path before inserting filters\n        this.analyser.disconnect();\n\n        // Connect each filter in turn\n        filters.reduce(function (prev, curr) {\n          prev.connect(curr);\n          return curr;\n        }, this.analyser).connect(this.gainNode);\n      }\n    }\n    /** Create ScriptProcessorNode to process audio */\n  }, {\n    key: \"createScriptNode\",\n    value: function createScriptNode() {\n      if (this.params.audioScriptProcessor) {\n        this.scriptNode = this.params.audioScriptProcessor;\n        this.scriptNode.connect(this.ac.destination);\n      }\n    }\n\n    /** @private */\n  }, {\n    key: \"addOnAudioProcess\",\n    value: function addOnAudioProcess() {\n      var _this2 = this;\n      var loop = function loop() {\n        var time = _this2.getCurrentTime();\n        if (time >= _this2.getDuration() && _this2.state !== _this2.states[FINISHED]) {\n          _this2.setState(FINISHED);\n          _this2.fireEvent('pause');\n        } else if (time >= _this2.scheduledPause && _this2.state !== _this2.states[PAUSED]) {\n          _this2.pause();\n        } else if (_this2.state === _this2.states[PLAYING]) {\n          _this2.fireEvent('audioprocess', time);\n          util.frame(loop)();\n        }\n      };\n      loop();\n    }\n\n    /** Create analyser node to perform audio analysis */\n  }, {\n    key: \"createAnalyserNode\",\n    value: function createAnalyserNode() {\n      this.analyser = this.ac.createAnalyser();\n      this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     */\n  }, {\n    key: \"createVolumeNode\",\n    value: function createVolumeNode() {\n      // Create gain node using the AudioContext\n      if (this.ac.createGain) {\n        this.gainNode = this.ac.createGain();\n      } else {\n        this.gainNode = this.ac.createGainNode();\n      }\n      // Add the gain node to the graph\n      this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n  }, {\n    key: \"setSinkId\",\n    value: function setSinkId(deviceId) {\n      if (deviceId) {\n        /**\n         * The webaudio API doesn't currently support setting the device\n         * output. Here we create an HTMLAudioElement, connect the\n         * webaudio stream to that element and setSinkId there.\n         */\n        if (!this.sinkAudioElement) {\n          this.sinkAudioElement = new window.Audio();\n          // autoplay is necessary since we're not invoking .play()\n          this.sinkAudioElement.autoplay = true;\n        }\n        if (!this.sinkAudioElement.setSinkId) {\n          return Promise.reject(new Error('setSinkId is not supported in your browser'));\n        }\n        if (!this.sinkStreamDestination) {\n          this.sinkStreamDestination = this.ac.createMediaStreamDestination();\n        }\n        this.gainNode.disconnect();\n        this.gainNode.connect(this.sinkStreamDestination);\n        this.sinkAudioElement.srcObject = this.sinkStreamDestination.stream;\n        return this.sinkAudioElement.setSinkId(deviceId);\n      } else {\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n      }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(value) {\n      this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n  }, {\n    key: \"getVolume\",\n    value: function getVolume() {\n      return this.gainNode.gain.value;\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete.\n     * @param {function} errback The function to call on error.\n     */\n  }, {\n    key: \"decodeArrayBuffer\",\n    value: function decodeArrayBuffer(arraybuffer, callback, errback) {\n      if (!this.offlineAc) {\n        this.offlineAc = this.getOfflineAudioContext(this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100);\n      }\n      if ('webkitAudioContext' in window) {\n        // Safari: no support for Promise-based decodeAudioData enabled\n        // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n        this.offlineAc.decodeAudioData(arraybuffer, function (data) {\n          return callback(data);\n        }, errback);\n      } else {\n        this.offlineAc.decodeAudioData(arraybuffer).then(function (data) {\n          return callback(data);\n        }).catch(function (err) {\n          return errback(err);\n        });\n      }\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Explicit duration\n     */\n  }, {\n    key: \"setPeaks\",\n    value: function setPeaks(peaks, duration) {\n      if (duration != null) {\n        this.explicitDuration = duration;\n      }\n      this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio)\n     *\n     * @param {number} length The rendered length\n     */\n  }, {\n    key: \"setLength\",\n    value: function setLength(length) {\n      // No resize, we can preserve the cached peaks.\n      if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n        return;\n      }\n      this.splitPeaks = [];\n      this.mergedPeaks = [];\n      // Set the last element of the sparse array so the peak arrays are\n      // appropriately sized for other calculations.\n      var channels = this.buffer ? this.buffer.numberOfChannels : 1;\n      var c;\n      for (c = 0; c < channels; c++) {\n        this.splitPeaks[c] = [];\n        this.splitPeaks[c][2 * (length - 1)] = 0;\n        this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n      }\n      this.mergedPeaks[2 * (length - 1)] = 0;\n      this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n  }, {\n    key: \"getPeaks\",\n    value: function getPeaks(length, first, last) {\n      if (this.peaks) {\n        return this.peaks;\n      }\n      if (!this.buffer) {\n        return [];\n      }\n      first = first || 0;\n      last = last || length - 1;\n      this.setLength(length);\n      if (!this.buffer) {\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n      }\n\n      /**\n       * The following snippet fixes a buffering data issue on the Safari\n       * browser which returned undefined It creates the missing buffer based\n       * on 1 channel, 4096 samples and the sampleRate from the current\n       * webaudio context 4096 samples seemed to be the best fit for rendering\n       * will review this code once a stable version of Safari TP is out\n       */\n      if (!this.buffer.length) {\n        var newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n        this.buffer = newBuffer.buffer;\n      }\n      var sampleSize = this.buffer.length / length;\n      var sampleStep = ~~(sampleSize / 10) || 1;\n      var channels = this.buffer.numberOfChannels;\n      var c;\n      for (c = 0; c < channels; c++) {\n        var peaks = this.splitPeaks[c];\n        var chan = this.buffer.getChannelData(c);\n        var i = void 0;\n        for (i = first; i <= last; i++) {\n          var start = ~~(i * sampleSize);\n          var end = ~~(start + sampleSize);\n          /**\n           * Initialize the max and min to the first sample of this\n           * subrange, so that even if the samples are entirely\n           * on one side of zero, we still return the true max and\n           * min values in the subrange.\n           */\n          var min = chan[start];\n          var max = min;\n          var j = void 0;\n          for (j = start; j < end; j += sampleStep) {\n            var value = chan[j];\n            if (value > max) {\n              max = value;\n            }\n            if (value < min) {\n              min = value;\n            }\n          }\n          peaks[2 * i] = max;\n          peaks[2 * i + 1] = min;\n          if (c == 0 || max > this.mergedPeaks[2 * i]) {\n            this.mergedPeaks[2 * i] = max;\n          }\n          if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n            this.mergedPeaks[2 * i + 1] = min;\n          }\n        }\n      }\n      return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Position\n     */\n  }, {\n    key: \"getPlayedPercents\",\n    value: function getPlayedPercents() {\n      return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n  }, {\n    key: \"disconnectSource\",\n    value: function disconnectSource() {\n      if (this.source) {\n        this.source.disconnect();\n      }\n    }\n    /**\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n     */\n  }, {\n    key: \"destroyWebAudio\",\n    value: function destroyWebAudio() {\n      this.disconnectFilters();\n      this.disconnectSource();\n      this.gainNode.disconnect();\n      this.scriptNode && this.scriptNode.disconnect();\n      this.analyser.disconnect();\n\n      // close the audioContext if closeAudioContext option is set to true\n      if (this.params.closeAudioContext) {\n        // check if browser supports AudioContext.close()\n        if (typeof this.ac.close === 'function' && this.ac.state != 'closed') {\n          this.ac.close();\n        }\n        // clear the reference to the audiocontext\n        this.ac = null;\n        // clear the actual audiocontext, either passed as param or the\n        // global singleton\n        if (!this.params.audioContext) {\n          window.WaveSurferAudioContext = null;\n        } else {\n          this.params.audioContext = null;\n        }\n        // clear the offlineAudioContext\n        window.WaveSurferOfflineAudioContext = null;\n      }\n\n      // disconnect resources used by setSinkId\n      if (this.sinkStreamDestination) {\n        this.sinkAudioElement.pause();\n        this.sinkAudioElement.srcObject = null;\n        this.sinkStreamDestination.disconnect();\n        this.sinkStreamDestination = null;\n      }\n    }\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (!this.isPaused()) {\n        this.pause();\n      }\n      this.unAll();\n      this.buffer = null;\n      this.destroyed = true;\n      this.destroyWebAudio();\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer Decoded audio buffer to load\n     */\n  }, {\n    key: \"load\",\n    value: function load(buffer) {\n      this.startPosition = 0;\n      this.lastPlay = this.ac.currentTime;\n      this.buffer = buffer;\n      this.createSource();\n    }\n\n    /** @private */\n  }, {\n    key: \"createSource\",\n    value: function createSource() {\n      this.disconnectSource();\n      this.source = this.ac.createBufferSource();\n\n      // adjust for old browsers\n      this.source.start = this.source.start || this.source.noteGrainOn;\n      this.source.stop = this.source.stop || this.source.noteOff;\n      this.setPlaybackRate(this.playbackRate);\n      this.source.buffer = this.buffer;\n      this.source.connect(this.analyser);\n    }\n\n    /**\n     * @private\n     *\n     * some browsers require an explicit call to #resume before they will play back audio\n     */\n  }, {\n    key: \"resumeAudioContext\",\n    value: function resumeAudioContext() {\n      if (this.ac.state == 'suspended') {\n        this.ac.resume && this.ac.resume();\n      }\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Whether or not this backend is currently paused\n     */\n  }, {\n    key: \"isPaused\",\n    value: function isPaused() {\n      return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration of loaded buffer\n     */\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      if (this.explicitDuration) {\n        return this.explicitDuration;\n      }\n      if (!this.buffer) {\n        return 0;\n      }\n      return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}} Object containing start and end\n     * positions\n     */\n  }, {\n    key: \"seekTo\",\n    value: function seekTo(start, end) {\n      if (!this.buffer) {\n        return;\n      }\n      this.scheduledPause = null;\n      if (start == null) {\n        start = this.getCurrentTime();\n        if (start >= this.getDuration()) {\n          start = 0;\n        }\n      }\n      if (end == null) {\n        end = this.getDuration();\n      }\n      this.startPosition = start;\n      this.lastPlay = this.ac.currentTime;\n      if (this.state === this.states[FINISHED]) {\n        this.setState(PAUSED);\n      }\n      return {\n        start: start,\n        end: end\n      };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number} The playback position in seconds\n     */\n  }, {\n    key: \"getPlayedTime\",\n    value: function getPlayedTime() {\n      return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n  }, {\n    key: \"play\",\n    value: function play(start, end) {\n      if (!this.buffer) {\n        return;\n      }\n\n      // need to re-create source on each playback\n      this.createSource();\n      var adjustedTime = this.seekTo(start, end);\n      start = adjustedTime.start;\n      end = adjustedTime.end;\n      this.scheduledPause = end;\n      this.source.start(0, start);\n      this.resumeAudioContext();\n      this.setState(PLAYING);\n      this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.scheduledPause = null;\n      this.startPosition += this.getPlayedTime();\n      try {\n        this.source && this.source.stop(0);\n      } catch (err) {\n        // Calling stop can throw the following 2 errors:\n        // - RangeError (The value specified for when is negative.)\n        // - InvalidStateNode (The node has not been started by calling start().)\n        // We can safely ignore both errors, because:\n        // - The range is surely correct\n        // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n      }\n      this.setState(PAUSED);\n      this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} The current time in seconds\n     */\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number} The current playback rate\n     */\n  }, {\n    key: \"getPlaybackRate\",\n    value: function getPlaybackRate() {\n      return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value The playback rate to use\n     */\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(value) {\n      this.playbackRate = value || 1;\n      this.source && this.source.playbackRate.setValueAtTime(this.playbackRate, this.ac.currentTime);\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} end Position to end at\n     * @version 3.3.0\n     */\n  }, {\n    key: \"setPlayEnd\",\n    value: function setPlayEnd(end) {\n      this.scheduledPause = end;\n    }\n  }]);\n  return WebAudio;\n}(util.Observer);\nexports[\"default\"] = WebAudio;\nmodule.exports = exports.default;\n\n/***/ }),\n\n/***/ \"./node_modules/debounce/index.js\":\n/*!****************************************!*\\\n  !*** ./node_modules/debounce/index.js ***!\n  \\****************************************/\n/***/ ((module) => {\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \tvar __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n/******/ \t\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n//# sourceMappingURL=wavesurfer.js.map","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(self, () => {\nreturn ","/**\n * @since 3.0.0\n */\n\nimport style from './util/style';\nimport getId from './util/get-id';\n\n/**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */\nexport default class CanvasEntry {\n    constructor() {\n        /**\n         * The wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.wave = null;\n        /**\n         * The wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.waveCtx = null;\n        /**\n         * The (optional) progress wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.progress = null;\n        /**\n         * The (optional) progress wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.progressCtx = null;\n        /**\n         * Start of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.start = 0;\n        /**\n         * End of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.end = 1;\n        /**\n         * Unique identifier for this entry\n         *\n         * @type {string}\n         */\n        this.id = getId(\n            typeof this.constructor.name !== 'undefined'\n                ? this.constructor.name.toLowerCase() + '_'\n                : 'canvasentry_'\n        );\n        /**\n         * Canvas 2d context attributes\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = {};\n    }\n\n    /**\n     * Store the wave canvas element and create the 2D rendering context\n     *\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\n     */\n    initWave(element) {\n        this.wave = element;\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n    }\n\n    /**\n     * Store the progress wave canvas element and create the 2D rendering\n     * context\n     *\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n     */\n    initProgress(element) {\n        this.progress = element;\n        this.progressCtx = this.progress.getContext(\n            '2d',\n            this.canvasContextAttributes\n        );\n    }\n\n    /**\n     * Update the dimensions\n     *\n     * @param {number} elementWidth Width of the entry\n     * @param {number} totalWidth Total width of the multi canvas renderer\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(elementWidth, totalWidth, width, height) {\n        // where the canvas starts and ends in the waveform, represented as a\n        // decimal between 0 and 1\n        this.start = this.wave.offsetLeft / totalWidth || 0;\n        this.end = this.start + elementWidth / totalWidth;\n\n        // set wave canvas dimensions\n        this.wave.width = width;\n        this.wave.height = height;\n        let elementSize = { width: elementWidth + 'px' };\n        style(this.wave, elementSize);\n\n        if (this.hasProgressCanvas) {\n            // set progress canvas dimensions\n            this.progress.width = width;\n            this.progress.height = height;\n            style(this.progress, elementSize);\n        }\n    }\n\n    /**\n     * Clear the wave and progress rendering contexts\n     */\n    clearWave() {\n        // wave\n        this.waveCtx.clearRect(\n            0,\n            0,\n            this.waveCtx.canvas.width,\n            this.waveCtx.canvas.height\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            this.progressCtx.clearRect(\n                0,\n                0,\n                this.progressCtx.canvas.width,\n                this.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Set the fill styles for wave and progress\n     * @param {string|string[]} waveColor Fill color for the wave canvas,\n     * or an array of colors to apply as a gradient\n     * @param {?string|string[]} progressColor Fill color for the progress canvas,\n     * or an array of colors to apply as a gradient\n     */\n    setFillStyles(waveColor, progressColor) {\n        this.waveCtx.fillStyle = this.getFillStyle(this.waveCtx, waveColor);\n\n        if (this.hasProgressCanvas) {\n            this.progressCtx.fillStyle = this.getFillStyle(this.progressCtx, progressColor);\n        }\n    }\n\n    /**\n     * Utility function to handle wave color arguments\n     *\n     * When the color argument type is a string or CanvasGradient instance,\n     * it will be returned as is. Otherwise, it will be treated as an array,\n     * and a new CanvasGradient will be returned\n     *\n     * @since 6.0.0\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {string|string[]|CanvasGradient} color Either a single fill color\n     *     for the wave canvas, an existing CanvasGradient instance, or an array\n     *     of colors to apply as a gradient\n     * @returns {string|CanvasGradient} Returns a string fillstyle value, or a\n     *     canvas gradient\n     */\n    getFillStyle(ctx, color) {\n        if (typeof color == 'string' || color instanceof CanvasGradient) {\n            return color;\n        }\n\n        const waveGradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\n        color.forEach((value, index) => waveGradient.addColorStop((index / color.length), value));\n\n        return waveGradient;\n    }\n\n    /**\n     * Set the canvas transforms for wave and progress\n     *\n     * @param {boolean} vertical Whether to render vertically\n     */\n    applyCanvasTransforms(vertical) {\n        if (vertical) {\n            // Reflect the waveform across the line y = -x\n            this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n\n            if (this.hasProgressCanvas) {\n                this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n            }\n        }\n    }\n\n    /**\n     * Draw a rectangle for wave and progress\n     *\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRects(x, y, width, height, radius) {\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n\n        if (this.hasProgressCanvas) {\n            this.fillRectToContext(\n                this.progressCtx,\n                x,\n                y,\n                width,\n                height,\n                radius\n            );\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRectToContext(ctx, x, y, width, height, radius) {\n        if (!ctx) {\n            return;\n        }\n\n        if (radius) {\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\n        } else {\n            ctx.fillRect(x, y, width, height);\n        }\n    }\n\n    /**\n     * Draw a rounded rectangle on Canvas\n     *\n     * @param {CanvasRenderingContext2D} ctx Canvas context\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     *\n     * @return {void}\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n     */\n    drawRoundedRect(ctx, x, y, width, height, radius) {\n        if (height === 0) {\n            return;\n        }\n        // peaks are float values from -1 to 1. Use absolute height values in\n        // order to correctly calculate rounded rectangle coordinates\n        if (height < 0) {\n            height *= -1;\n            y -= height;\n        }\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(\n            x + width,\n            y + height,\n            x + width - radius,\n            y + height\n        );\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Render the actual wave and progress lines\n     *\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\n        this.drawLineToContext(\n            this.waveCtx,\n            peaks,\n            absmax,\n            halfH,\n            offsetY,\n            start,\n            end\n        );\n\n        if (this.hasProgressCanvas) {\n            this.drawLineToContext(\n                this.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        }\n    }\n\n    /**\n     * Render the actual waveform line on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const first = Math.round(length * this.start);\n\n        // use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas\n        const last = Math.round(length * this.end) + 1;\n\n        const canvasStart = first;\n        const canvasEnd = last;\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n        // optimization\n        const halfOffset = halfH + offsetY;\n        const absmaxHalf = absmax / halfH;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\n        );\n\n        let i, peak, h;\n        for (i = canvasStart; i < canvasEnd; i++) {\n            peak = peaks[2 * i] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        // draw the bottom edge going backwards, to make a single\n        // closed hull to fill\n        let j = canvasEnd - 1;\n        for (j; j >= canvasStart; j--) {\n            peak = peaks[2 * j + 1] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset -\n            Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\n        );\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Destroys this entry\n     */\n    destroy() {\n        this.waveCtx = null;\n        this.wave = null;\n\n        this.progressCtx = null;\n        this.progress = null;\n    }\n\n    /**\n     * Return image data of the wave `canvas` element\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise` that\n     * resolves with a `Blob` instance.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\n     * returns a data URL. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with a `Blob` instance.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return new Promise(resolve => {\n                this.wave.toBlob(resolve, format, quality);\n            });\n        } else if (type === 'dataURL') {\n            return this.wave.toDataURL(format, quality);\n        }\n    }\n}\n","import * as util from './util';\n\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n\n        this.container = util.withOrientation(container, params.vertical);\n        /**\n         * @type {WavesurferParams}\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = util.withOrientation(\n            this.container.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                cursor: this.params.hideCursor ? 'none' : 'auto',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = util.withOrientation(\n            e.targetTouches ? e.targetTouches[0] : e,\n            this.params.vertical\n        ).clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n        const progressPixels = this.getProgressPixels(bbox, clientX);\n\n        let progress;\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress = progressPixels *\n                (this.params.pixelRatio / nominalWidth) || 0;\n        } else {\n            progress = (progressPixels + this.wrapper.scrollLeft) /\n                this.wrapper.scrollWidth || 0;\n        }\n\n        return util.clamp(progress, 0, 1);\n    }\n\n    getProgressPixels(wrapperBbox, clientX) {\n        if (this.params.rtl) {\n            return wrapperBbox.right - clientX;\n        } else {\n            return clientX - wrapperBbox.left;\n        }\n    }\n\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const orientedEvent = util.withOrientation(e, this.params.vertical);\n            const scrollbarHeight = this.wrapper.offsetHeight -\n                  this.wrapper.clientHeight;\n\n            if (scrollbarHeight !== 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('dblclick', e => {\n            if (this.params.interact) {\n                this.fireEvent('dblclick', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth\n            ? this.drawBars(peaks, 0, start, end)\n            : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the view-port at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the view-port on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // set rate at which waveform is centered\n            let rate = this.params.autoCenterRate;\n\n            // make rate depend on width of view and length of waveform\n            rate /= half;\n            rate *= maxScroll;\n\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number} Horizontal scroll position in pixels\n     */\n    getScrollX() {\n        let x = 0;\n        if (this.wrapper) {\n            const pixelRatio = this.params.pixelRatio;\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n            // In cases of elastic scroll (safari with mouse wheel) you can\n            // scroll beyond the limits of the container\n            // Calculate and floor the scrollable extent to make sure an out\n            // of bounds value is not returned\n            // Ticket #1312\n            if (this.params.scrollParent) {\n                const maxScroll = ~~(\n                    this.wrapper.scrollWidth * pixelRatio -\n                    this.getWidth()\n                );\n                x = Math.min(maxScroll, Math.max(0, x));\n            }\n        }\n        return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number} The width of the container\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width The new width of the container\n     * @return {boolean} Whether the width of the container was updated or not\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            const newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\n            this.style(this.wrapper, {\n                width: newWidth\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height The new height of the container.\n     * @return {boolean} Whether the height of the container was updated or not\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be rendered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(\n                    newPos,\n                    this.params.autoCenterImmediately\n                );\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container.domElement) {\n                this.container.removeChild(this.wrapper.domElement);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n","import Drawer from './drawer';\nimport * as util from './util';\nimport CanvasEntry from './drawer.canvasentry';\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is rendered. If the `waveColor`\n         * and `progressColor` are the same color it is not.\n         *\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n        /**\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n\n        /**\n         * List of `CanvasEntry` instances.\n         *\n         * @type {Array}\n         */\n        this.canvases = [];\n\n        /**\n         * @type {HTMLElement}\n         */\n        this.progressWave = null;\n\n        /**\n         * Class used to generate entries.\n         *\n         * @type {function}\n         */\n        this.EntryClass = CanvasEntry;\n\n        /**\n         * Canvas 2d context attributes.\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = params.drawingContextAttributes;\n\n        /**\n         * Overlap added between entries to prevent vertical white stripes\n         * between `canvas` elements.\n         *\n         * @type {number}\n         */\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n\n        /**\n         * The radius of the wave bars. Makes bars rounded\n         *\n         * @type {number}\n         */\n        this.barRadius = params.barRadius || 0;\n\n        /**\n         * Whether to render the waveform vertically. Defaults to false.\n         *\n         * @type {boolean}\n         */\n        this.vertical = params.vertical;\n    }\n\n    /**\n     * Initialize the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     */\n    createElements() {\n        this.progressWave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n        this.style(this.progressWave, {\n            position: 'absolute',\n            zIndex: 3,\n            left: 0,\n            top: 0,\n            bottom: 0,\n            overflow: 'hidden',\n            width: '0',\n            display: 'none',\n            boxSizing: 'border-box',\n            borderRightStyle: 'solid',\n            pointerEvents: 'none'\n        });\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\n        );\n\n        // add required canvases\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        // remove older existing canvases, if any\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\n        const lastCanvas = this.canvases.length - 1;\n        this.canvases.forEach((entry, i) => {\n            if (i == lastCanvas) {\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\n            }\n            this.updateDimensions(entry, canvasWidth, this.height);\n\n            entry.clearWave();\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     */\n    addCanvas() {\n        const entry = new this.EntryClass();\n        entry.canvasContextAttributes = this.canvasContextAttributes;\n        entry.hasProgressCanvas = this.hasProgressCanvas;\n        entry.halfPixel = this.halfPixel;\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        // wave\n        let wave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('canvas')),\n            this.params.vertical\n        );\n        this.style(wave, {\n            position: 'absolute',\n            zIndex: 2,\n            left: leftOffset + 'px',\n            top: 0,\n            bottom: 0,\n            height: '100%',\n            pointerEvents: 'none'\n        });\n        entry.initWave(wave);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            let progress = util.withOrientation(\n                this.progressWave.appendChild(document.createElement('canvas')),\n                this.params.vertical\n            );\n            this.style(progress, {\n                position: 'absolute',\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0,\n                height: '100%'\n            });\n            entry.initProgress(progress);\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop single canvas from the list\n     *\n     */\n    removeCanvas() {\n        let lastEntry = this.canvases[this.canvases.length - 1];\n\n        // wave\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n        }\n\n        // cleanup\n        if (lastEntry) {\n            lastEntry.destroy();\n            lastEntry = null;\n        }\n\n        this.canvases.pop();\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // update canvas dimensions\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n        // style element\n        this.style(this.progressWave, { display: 'block' });\n    }\n\n    /**\n     * Clear the whole multi-canvas\n     */\n    clearWave() {\n        util.frame(() => {\n            this.canvases.forEach(entry => entry.clearWave());\n        })();\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex: ch }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap =\n                    this.params.barGap === null\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\n                        : Math.max(\n                            this.params.pixelRatio,\n                            this.params.barGap * this.params.pixelRatio\n                        );\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let peakIndex = first;\n                for (peakIndex; peakIndex < last; peakIndex += step) {\n\n                    // search for the highest peak in the range this bar falls into\n                    let peak = 0;\n                    let peakIndexRange = Math.floor(peakIndex * scale) * peakIndexScale; // start index\n                    const peakIndexEnd = Math.floor((peakIndex + step) * scale) * peakIndexScale;\n                    do { // do..while makes sure at least one peak is always evaluated\n                        const newPeak = Math.abs(peaks[peakIndexRange]); // for arrays starting with negative values\n                        if (newPeak > peak) {\n                            peak = newPeak; // higher\n                        }\n                        peakIndexRange += peakIndexScale; // skip every other value for negatives\n                    } while (peakIndexRange < peakIndexEnd);\n\n                    // calculate the height of this bar according to the highest peak found\n                    let h = Math.round((peak / absmax) * halfH);\n\n                    // raise the bar height to the specified minimum height\n                    // Math.max is used to replace any value smaller than barMinHeight (not just 0) with barMinHeight\n                    if (this.params.barMinHeight) {\n                        h = Math.max(h, this.params.barMinHeight);\n                    }\n\n                    this.fillRect(\n                        peakIndex + this.halfPixel,\n                        halfH - h + offsetY,\n                        bar + this.halfPixel,\n                        h * 2,\n                        this.barRadius,\n                        ch\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i = 0;\n                    for (i; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                }\n\n                // always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel,\n                    this.barRadius,\n                    channelIndex\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @param {number[]} peaks Peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     * @param {channelIndex} channelIndex The channel index of the line drawn\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n        const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n        this.canvases.forEach((entry, i) => {\n            this.setFillStyles(entry, waveColor, progressColor);\n            this.applyCanvasTransforms(entry, this.params.vertical);\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Draw a rectangle on the multi-canvas\n     *\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     * @param {channelIndex} channelIndex The channel index of the bar drawn\n     */\n    fillRect(x, y, width, height, radius, channelIndex) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i = startCanvas;\n        for (i; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.wave.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n                this.setFillStyles(entry, waveColor, progressColor);\n                this.applyCanvasTransforms(entry, this.params.vertical);\n\n                entry.fillRects(\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1,\n                    radius\n                );\n            }\n        }\n    }\n\n    /**\n     * Returns whether to hide the channel from being drawn based on params.\n     *\n     * @param {number} channelIndex The index of the current channel.\n     * @returns {bool} True to hide the channel, false to draw.\n     */\n    hideChannel(channelIndex) {\n        return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by `drawBars`\n     * and `drawWave`\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n     * split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered. If this isn't set only a flat line is rendered\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call, e.g. `drawWave`\n     * @param {number} drawIndex The index of the current channel after filtering.\n     * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\n     * @returns {void}\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n\n                if (this.params.splitChannels) {\n                    const filteredChannels = channels.filter((c, i) => !this.hideChannel(i));\n                    if (!this.params.splitChannelsOptions.overlay) {\n                        this.setHeight(\n                            Math.max(filteredChannels.length, 1) *\n                                this.params.height *\n                                this.params.pixelRatio\n                        );\n                    }\n\n                    let overallAbsMax;\n                    if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.relativeNormalization) {\n                        // calculate maximum peak across channels to use for normalization\n                        overallAbsMax = util.max(channels.map((channelPeaks => util.absMax(channelPeaks))));\n                    }\n\n\n                    return channels.forEach((channelPeaks, i) =>\n                        this.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax)\n                    );\n                }\n                peaks = channels[0];\n            }\n\n            // Return and do not draw channel peaks if hidden.\n            if (this.hideChannel(channelIndex)) {\n                return;\n            }\n\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const halfH = height / 2;\n\n            let offsetY = height * drawIndex || 0;\n\n            // Override offsetY if overlay is true\n            if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.overlay) {\n                offsetY = 0;\n            }\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks,\n                channelIndex: channelIndex\n            });\n        })();\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {string} waveColor Wave color to draw this entry\n     * @param {string} progressColor Progress color to draw this entry\n     */\n    setFillStyles(entry, waveColor = this.params.waveColor, progressColor = this.params.progressColor) {\n        entry.setFillStyles(waveColor, progressColor);\n    }\n\n    /**\n     * Set the canvas transforms for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {boolean} vertical Whether to render the waveform vertically\n     */\n    applyCanvasTransforms(entry, vertical = false) {\n        entry.applyCanvasTransforms(vertical);\n    }\n\n    /**\n     * Return image data of the multi-canvas\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise`.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\n     * `type` this returns a single data URL or an array of data URLs,\n     * one for each canvas. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with an array of `Blob` instances, one for each\n     * canvas.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return Promise.all(\n                this.canvases.map(entry => {\n                    return entry.getImage(format, quality, type);\n                })\n            );\n        } else if (type === 'dataURL') {\n            let images = this.canvases.map(entry =>\n                entry.getImage(format, quality, type)\n            );\n            return images.length > 1 ? images : images[0];\n        }\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n","import MediaElement from './mediaelement';\n\n/**\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\n * of the webaudio API.\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\n *\n * @since 3.2.0\n */\nexport default class MediaElementWebAudio extends MediaElement {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.sourceMediaElement = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n    }\n    /**\n     * Private method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @private\n     */\n    _load(media, peaks, preload) {\n        super._load(media, peaks, preload);\n        this.createMediaElementSource(media);\n    }\n\n    /**\n     * Create MediaElementSource node\n     *\n     * @since 3.2.0\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n     */\n    createMediaElementSource(mediaElement) {\n        this.sourceMediaElement = this.ac.createMediaElementSource(\n            mediaElement\n        );\n        this.sourceMediaElement.connect(this.analyser);\n    }\n\n    play(start, end) {\n        this.resumeAudioContext();\n        return super.play(start, end);\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        super.destroy();\n\n        this.destroyWebAudio();\n    }\n}\n","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        /**\n         * Initially a dummy media element to catch errors. Once `_load` is\n         * called, this will contain the actual `HTMLMediaElement`.\n         * @private\n         */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {},\n            volume: 0\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.volume = 1;\n        /** @private */\n        this.isMuted = false;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n        /** @private */\n        this.mediaListeners = {};\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Attach event listeners to media element.\n     */\n    _setupMediaListeners() {\n        this.mediaListeners.error = () => {\n            this.fireEvent('error', 'Error loading media element');\n        };\n        this.mediaListeners.waiting = () => {\n            this.fireEvent('waiting');\n        };\n        this.mediaListeners.canplay = () => {\n            this.fireEvent('canplay');\n        };\n        this.mediaListeners.ended = () => {\n            this.fireEvent('finish');\n        };\n        // listen to and relay play, pause and seeked events to enable\n        // playback control from the external media element\n        this.mediaListeners.play = () => {\n            this.fireEvent('play');\n        };\n        this.mediaListeners.pause = () => {\n            this.fireEvent('pause');\n        };\n        this.mediaListeners.seeked = event => {\n            this.fireEvent('seek');\n        };\n        this.mediaListeners.volumechange = event => {\n            this.isMuted = this.media.muted;\n            if (this.isMuted) {\n                this.volume = 0;\n            } else {\n                this.volume = this.media.volume;\n            }\n            this.fireEvent('volume');\n        };\n\n        // reset event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            this.media.removeEventListener(id, this.mediaListeners[id]);\n            this.media.addEventListener(id, this.mediaListeners[id]);\n        });\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            util.frame(onAudioProcess)();\n        };\n\n        this.on('play', onAudioProcess);\n\n        // Update the progress one more time to prevent it from being stuck in\n        // case of lower framerates\n        this.on('pause', () => {\n            this.fireEvent('audioprocess', this.getCurrentTime());\n        });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `url` argument is not a valid media\n     * element.\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks, preload);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks, elt.preload);\n    }\n\n    /**\n     * Method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `media` argument is not a valid media\n     * element.\n     * @private\n     */\n    _load(media, peaks, preload) {\n        // verify media element is valid\n        if (\n            !(media instanceof HTMLMediaElement) ||\n            typeof media.addEventListener === 'undefined'\n        ) {\n            throw new Error('media parameter is not a valid media element');\n        }\n\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        //\n        // note that we avoid calling media.load here when given peaks and preload == 'none'\n        // as this almost always triggers some browser fetch of the media.\n        if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            media.load();\n        }\n\n        this.media = media;\n        this._setupMediaListeners();\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.isMuted = media.muted;\n        this.setPlaybackRate(this.playbackRate);\n        this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Media paused or not\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} Current time\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Current position\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number} Playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value Playback rate\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null && !isNaN(start)) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise} Result\n     */\n    play(start, end) {\n        this.seekTo(start);\n        const promise = this.media.play();\n        end && this.setPlayEnd(end);\n\n        return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise} Result\n     */\n    pause() {\n        let promise;\n\n        if (this.media) {\n            promise = this.media.pause();\n        }\n        this.clearPlayEnd();\n\n        return promise;\n    }\n\n    /**\n     * Set the play end\n     *\n     * @param {number} end Where to end\n     */\n    setPlayEnd(end) {\n        this.clearPlayEnd();\n\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            if (!this.media.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            return this.media.setSinkId(deviceId);\n        }\n\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.volume = value;\n        // no need to change when it's already at that volume\n        if (this.media.volume !== this.volume) {\n            this.media.volume = this.volume;\n        }\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @since 4.0.0\n     * @param {boolean} muted Specify `true` to mute audio.\n     */\n    setMute(muted) {\n        // This causes a volume change to be emitted too through the\n        // volumechange event listener.\n        this.isMuted = this.media.muted = muted;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n        this.destroyed = true;\n\n        // cleanup media event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            if (this.media) {\n                this.media.removeEventListener(id, this.mediaListeners[id]);\n            }\n        });\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n","/**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n","import utilMax from './max';\r\nimport utilmin from './min';\r\n\r\n/**\r\n * Get the largest absolute value in an array\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n * @since 4.3.0\r\n */\r\nexport default function absMax(values) {\r\n    const max = utilMax(values);\r\n    const min = utilmin(values);\r\n    return -min > max ? -min : max;\r\n}\r\n","/**\n * Returns a number limited to the given range.\n *\n * @param {number} val The number to be limited to a range\n * @param {number} min The lower boundary of the limit range\n * @param {number} max The upper boundary of the limit range\n * @returns {number} A number in the range [min, max]\n */\nexport default function clamp(val, min, max) {\n    return Math.min(Math.max(min, val), max);\n}\n","/**\n * @since 3.0.0\n */\n\nimport Observer from './observer';\n\nclass ProgressHandler {\n    /**\n     * Instantiate ProgressHandler\n     *\n     * @param {Observer} instance The `fetchFile` observer instance.\n     * @param {Number} contentLength Content length.\n     * @param {Response} response Response object.\n     */\n    constructor(instance, contentLength, response) {\n        this.instance = instance;\n        this.instance._reader = response.body.getReader();\n\n        this.total = parseInt(contentLength, 10);\n        this.loaded = 0;\n    }\n\n    /**\n     * A method that is called once, immediately after the `ReadableStream``\n     * is constructed.\n     *\n     * @param {ReadableStreamDefaultController} controller Controller instance\n     *     used to control the stream.\n     */\n    start(controller) {\n        const read = () => {\n            // instance._reader.read() returns a promise that resolves\n            // when a value has been received\n            this.instance._reader\n                .read()\n                .then(({ done, value }) => {\n                    // result objects contain two properties:\n                    // done  - true if the stream has already given you all its data.\n                    // value - some data. Always undefined when done is true.\n                    if (done) {\n                        // ensure onProgress called when content-length=0\n                        if (this.total === 0) {\n                            this.instance.onProgress.call(this.instance, {\n                                loaded: this.loaded,\n                                total: this.total,\n                                lengthComputable: false\n                            });\n                        }\n                        // no more data needs to be consumed, close the stream\n                        controller.close();\n                        return;\n                    }\n\n                    this.loaded += value.byteLength;\n                    this.instance.onProgress.call(this.instance, {\n                        loaded: this.loaded,\n                        total: this.total,\n                        lengthComputable: !(this.total === 0)\n                    });\n                    // enqueue the next data chunk into our target stream\n                    controller.enqueue(value);\n                    read();\n                })\n                .catch(error => {\n                    controller.error(error);\n                });\n        };\n\n        read();\n    }\n}\n\n/**\n * Load a file using `fetch`.\n *\n * @param {object} options Request options to use. See example below.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     url: undefined,\n *     method: 'GET',\n *     mode: 'cors',\n *     credentials: 'same-origin',\n *     cache: 'default',\n *     responseType: 'json',\n *     requestHeaders: [],\n *     redirect: 'follow',\n *     referrer: 'client'\n * };\n *\n * // override some options\n * options.url = '../media/demo.wav';\n\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n * options.responseType = 'arraybuffer';\n *\n * // make fetch call\n * let request = util.fetchFile(options);\n *\n * // listen for events\n * request.on('progress', e => {\n *     console.log('progress', e);\n * });\n *\n * request.on('success', data => {\n *     console.log('success!', data);\n * });\n *\n * request.on('error', e => {\n *     console.warn('fetchFile error: ', e);\n * });\n */\nexport default function fetchFile(options) {\n    if (!options) {\n        throw new Error('fetch options missing');\n    } else if (!options.url) {\n        throw new Error('fetch url missing');\n    }\n    const instance = new Observer();\n    const fetchHeaders = new Headers();\n    const fetchRequest = new Request(options.url);\n\n    // add ability to abort\n    instance.controller = new AbortController();\n\n    // check if headers have to be added\n    if (options && options.requestHeaders) {\n        // add custom request headers\n        options.requestHeaders.forEach(header => {\n            fetchHeaders.append(header.key, header.value);\n        });\n    }\n\n    // parse fetch options\n    const responseType = options.responseType || 'json';\n    const fetchOptions = {\n        method: options.method || 'GET',\n        headers: fetchHeaders,\n        mode: options.mode || 'cors',\n        credentials: options.credentials || 'same-origin',\n        cache: options.cache || 'default',\n        redirect: options.redirect || 'follow',\n        referrer: options.referrer || 'client',\n        signal: instance.controller.signal\n    };\n\n    fetch(fetchRequest, fetchOptions)\n        .then(response => {\n            // store response reference\n            instance.response = response;\n\n            let progressAvailable = true;\n            if (!response.body) {\n                // ReadableStream is not yet supported in this browser\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                progressAvailable = false;\n            }\n\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n            const contentLength = response.headers.get('content-length');\n            if (contentLength === null) {\n                // Content-Length server response header missing.\n                // Don't evaluate download progress if we can't compare against a total size\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                progressAvailable = false;\n            }\n\n            if (!progressAvailable) {\n                // not able to check download progress so skip it\n                return response;\n            }\n\n            // fire progress event when during load\n            instance.onProgress = e => {\n                instance.fireEvent('progress', e);\n            };\n\n            return new Response(\n                new ReadableStream(\n                    new ProgressHandler(instance, contentLength, response)\n                ),\n                fetchOptions\n            );\n        })\n        .then(response => {\n            let errMsg;\n            if (response.ok) {\n                switch (responseType) {\n                    case 'arraybuffer':\n                        return response.arrayBuffer();\n\n                    case 'json':\n                        return response.json();\n\n                    case 'blob':\n                        return response.blob();\n\n                    case 'text':\n                        return response.text();\n\n                    default:\n                        errMsg = 'Unknown responseType: ' + responseType;\n                        break;\n                }\n            }\n            if (!errMsg) {\n                errMsg = 'HTTP error status: ' + response.status;\n            }\n            throw new Error(errMsg);\n        })\n        .then(response => {\n            instance.fireEvent('success', response);\n        })\n        .catch(error => {\n            instance.fireEvent('error', error);\n        });\n\n    // return the fetch request\n    instance.fetchRequest = fetchRequest;\n    return instance;\n}\n","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n","/**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */\nexport default function getId(prefix) {\n    if (prefix === undefined) {\n        prefix = 'wavesurfer_';\n    }\n    return (\n        prefix +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n","export { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as absMax } from './absMax';\nexport { default as Observer } from './observer';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\nexport { default as preventClick } from './prevent-click';\nexport { default as fetchFile } from './fetch';\nexport { default as clamp } from './clamp';\nexport { default as withOrientation } from './orientation';\nexport { default as ignoreSilenceMode } from './silence-mode';\n","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this._disabledEventEmissions = [];\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Disable firing a list of events by name. When specified, event handlers for any event type\n     * passed in here will not be called.\n     *\n     * @since 4.0.0\n     * @param {string[]} eventNames an array of event names to disable emissions for\n     * @example\n     * // disable seek and interaction events\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n     */\n    setDisabledEventEmissions(eventNames) {\n        this._disabledEventEmissions = eventNames;\n    }\n\n    /**\n     * plugins borrow part of this class without calling the constructor,\n     * so we have to be careful about _disabledEventEmissions\n     */\n\n    _isDisabledEventEmission(event) {\n        return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers || this._isDisabledEventEmission(event)) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n","const verticalPropMap = {\n    width: 'height',\n    height: 'width',\n\n    overflowX: 'overflowY',\n    overflowY: 'overflowX',\n\n    clientWidth: 'clientHeight',\n    clientHeight: 'clientWidth',\n\n    clientX: 'clientY',\n    clientY: 'clientX',\n\n    scrollWidth: 'scrollHeight',\n    scrollLeft: 'scrollTop',\n\n    offsetLeft: 'offsetTop',\n    offsetTop: 'offsetLeft',\n    offsetHeight: 'offsetWidth',\n    offsetWidth: 'offsetHeight',\n\n    left: 'top',\n    right: 'bottom',\n    top: 'left',\n    bottom: 'right',\n\n    borderRightStyle: 'borderBottomStyle',\n    borderRightWidth: 'borderBottomWidth',\n    borderRightColor: 'borderBottomColor'\n};\n\n/**\n * Convert a horizontally-oriented property name to a vertical one.\n *\n * @param {string} prop A property name\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {string} prop, converted appropriately\n */\nfunction mapProp(prop, vertical) {\n    if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\n        return vertical ? verticalPropMap[prop] : prop;\n    } else {\n        return prop;\n    }\n}\n\nconst isProxy = Symbol(\"isProxy\");\n\n/**\n * Returns an appropriately oriented object based on vertical.\n * If vertical is true, attribute getting and setting will be mapped through\n * verticalPropMap, so that e.g. getting the object's .width will give its\n * .height instead.\n * Certain methods of an oriented object will return oriented objects as well.\n * Oriented objects can't be added to the DOM directly since they are Proxy objects\n * and thus fail typechecks. Use domElement to get the actual element for this.\n *\n * @param {object} target The object to be wrapped and oriented\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n * @since 5.0.0\n */\nexport default function withOrientation(target, vertical) {\n    if (target[isProxy]) {\n        return target;\n    } else {\n        return new Proxy(\n            target, {\n                get: function(obj, prop, receiver) {\n                    if (prop === isProxy) {\n                        return true;\n                    } else if (prop === 'domElement') {\n                        return obj;\n                    } else if (prop === 'style') {\n                        return withOrientation(obj.style, vertical);\n                    } else if (prop === 'canvas') {\n                        return withOrientation(obj.canvas, vertical);\n                    } else if (prop === 'getBoundingClientRect') {\n                        return function(...args) {\n                            return withOrientation(obj.getBoundingClientRect(...args), vertical);\n                        };\n                    } else if (prop === 'getContext') {\n                        return function(...args) {\n                            return withOrientation(obj.getContext(...args), vertical);\n                        };\n                    } else {\n                        let value = obj[mapProp(prop, vertical)];\n                        return typeof value == 'function' ? value.bind(obj) : value;\n                    }\n                },\n                set: function(obj, prop, value) {\n                    obj[mapProp(prop, vertical)] = value;\n                    return true;\n                }\n            }\n        );\n    }\n}\n","/**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */\nfunction preventClickHandler(event) {\n    event.stopPropagation();\n    document.body.removeEventListener('click', preventClickHandler, true);\n}\n\n/**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */\nexport default function preventClick(values) {\n    document.body.addEventListener('click', preventClickHandler, true);\n}\n","/* eslint-disable valid-jsdoc */\n/**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n","/**\n * Ignores device silence mode when using the `WebAudio` backend.\n *\n * Many mobile devices contain a hardware button to mute the ringtone for incoming\n * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n * when muting the device ringer.\n *\n * @since 5.2.0\n */\nexport default function ignoreSilenceMode() {\n    // Set webaudio context with 1 second silent audio 44100 bit rate buffer to allow playing audio even if silent switch is on the device\n    const silentAC = new AudioContext();\n    const silentBS = silentAC.createBufferSource();\n    silentBS.buffer = silentAC.createBuffer(1, 1, 44100);\n    silentBS.connect(silentAC.destination);\n    silentBS.start();\n\n    // Set the src to a short bit of url encoded as a silent mp3\n    // NOTE The silence MP3 must be high quality, when web audio sounds are played\n    // in parallel the web audio sound is mixed to match the bitrate of the html sound\n    // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n    const audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\n\n    // disable iOS Airplay (setting the attribute in js doesn't work)\n    let tmp = document.createElement(\"div\");\n    tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n\n    let audioSilentMode = tmp.children.item(0);\n    audioSilentMode.src = audioData;\n    audioSilentMode.preload = \"auto\";\n    audioSilentMode.type = \"audio/mpeg\";\n    audioSilentMode.disableRemotePlayback = true;\n\n    // play\n    audioSilentMode.play();\n\n    // cleanup\n    audioSilentMode.remove();\n    tmp.remove();\n}\n","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\nimport MediaElementWebAudio from './mediaelement-webaudio';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform on current progress\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n * waveform is centered\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n * center waveform on current progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n * also with audio with big duration. For example:\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n *   wavesurfer.play();\n *   wavesurfer.setFilter(customFilter);\n * `\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave bars.\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {number} barWidth=null Draw the waveform using bars.\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n * eliminating waveform gaps\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n * attributes.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} hideCursor=false Whether to hide the mouse cursor\n * when one would normally be shown by default.\n * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n * when using the `WebAudio` backend.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * `'audio'|'video'` ('video' only for `MediaElement`)\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options. For example:\n * `let xhr = {\n *     cache: 'default',\n *     mode: 'cors',\n *     method: 'GET',\n *     credentials: 'same-origin',\n *     redirect: 'follow',\n *     referrer: 'client',\n *     requestHeaders: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ]\n * };`\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @typedef {Object} SplitChannelOptions\n * @desc parameters applied when splitChannels option is true\n * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n * @property {object} channelColors={} object describing color for each channel. Example:\n * {\n *     0: {\n *         progressColor: 'green',\n *         waveColor: 'pink'\n *     },\n *     1: {\n *         progressColor: 'orange',\n *         waveColor: 'purple'\n *     }\n * }\n * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n * @property {boolean} relativeNormalization=false determines whether\n * normalization is done per channel or maintains proportionality between\n * channels. Only applied when normalize and splitChannels are both true.\n * @property {boolean} splitDragSelection=false determines if drag selection in regions\n * plugin works separately on each channel or only one selection for all channels\n * @since 4.3.0\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     * @param {Object} ws The wavesurfer instance\n     */\n    constructor(params, ws) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioScriptProcessor: null,\n        audioRate: 1,\n        autoCenter: true,\n        autoCenterRate: 5,\n        autoCenterImmediately: false,\n        backend: 'WebAudio',\n        backgroundColor: null,\n        barHeight: 1,\n        barRadius: 0,\n        barGap: null,\n        barMinHeight: null,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        drawingContextAttributes: {\n            // Boolean that hints the user agent to reduce the latency\n            // by desynchronizing the canvas paint cycle from the event\n            // loop\n            desynchronized: false\n        },\n        duration: null,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        hideCursor: false,\n        ignoreSilenceMode: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        rtl: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        splitChannelsOptions: {\n            overlay: false,\n            channelColors: {},\n            filterChannels: [],\n            relativeNormalization: false,\n            splitDragSelection: false\n        },\n        vertical: false,\n        waveColor: '#999',\n        xhr: {}\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio,\n        MediaElementWebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n    static VERSION = __VERSION__;\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this} Wavesurfer instance\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = Object.assign({}, this.defaultParams, params);\n        this.params.splitChannelsOptions = Object.assign(\n            {},\n            this.defaultParams.splitChannelsOptions,\n            params.splitChannelsOptions\n        );\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        if (this.params.rtl === true) {\n            if (this.params.vertical === true) {\n                util.style(this.container, { transform: 'rotateX(180deg)' });\n            } else {\n                util.style(this.container, { transform: 'rotateY(180deg)' });\n            }\n        }\n\n        if (this.params.backgroundColor) {\n            this.setBackgroundColor(this.params.backgroundColor);\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * canceled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentRequest = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            (this.params.backend == 'WebAudio' ||\n                this.params.backend === 'MediaElementWebAudio') &&\n            !WebAudio.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n\n        /**\n         * Get the current ready status.\n         *\n         * @example const isReady = wavesurfer.isReady;\n         * @return {boolean}\n         */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(\n            () => {\n                if (\n                    this.drawer.wrapper &&\n                    prevWidth != this.drawer.wrapper.clientWidth &&\n                    !this.params.scrollParent\n                ) {\n                    prevWidth = this.drawer.wrapper.clientWidth;\n                    if (prevWidth) {\n                        // redraw only if waveform container is rendered and has a width\n                        this.drawer.fireEvent('redraw');\n                    }\n                }\n            },\n            typeof this.params.responsive === 'number'\n                ? this.params.responsive\n                : 100\n        );\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this} The wavesurfer instance\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this} The wavesurfer instance\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Get a map of plugin names that are currently initialised\n     *\n     * @example wavesurfer.getPlugins();\n     * @return {Object} Object with plugin names\n     */\n    getActivePlugins() {\n        return this.initialisedPluginList;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this} The wavesurfer instance\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this} The wavesurfer instance\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this} The wavesurfer instance\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n\n        // Relay the dblclick event from the drawer\n        this.drawer.on('dblclick', (e, progress) => {\n            this.fireEvent('dblclick', e, progress);\n        });\n\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('finish');\n        });\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n\n        // only needed for MediaElement and MediaElementWebAudio backend\n        if (\n            this.params.backend === 'MediaElement' ||\n            this.params.backend === 'MediaElementWebAudio'\n        ) {\n            this.backend.on('seek', () => {\n                this.drawer.progress(this.backend.getPlayedPercents());\n            });\n\n            this.backend.on('volume', () => {\n                let newVolume = this.getVolume();\n                this.fireEvent('volume', newVolume);\n\n                if (this.backend.isMuted !== this.isMuted) {\n                    this.isMuted = this.backend.isMuted;\n                    this.fireEvent('mute', this.isMuted);\n                }\n            });\n        }\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (seconds >= this.getDuration()) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise} Result of the backend play method\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        if (this.params.ignoreSilenceMode) {\n            // ignores device hardware silence mode\n            util.ignoreSilenceMode();\n        }\n\n        this.fireEvent('interaction', () => this.play(start, end));\n        return this.backend.play(start, end);\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} position Position (in seconds) to stop at\n     * @version 3.3.0\n     */\n    setPlayEnd(position) {\n        this.backend.setPlayEnd(position);\n    }\n\n    /**\n     * Stops and pauses playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise} Result of the backend pause method\n     */\n    pause() {\n        if (!this.backend.isPaused()) {\n            return this.backend.pause();\n        }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise} Result of the backend play or pause method\n     */\n    playPause() {\n        return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            throw new Error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const isWebAudioBackend = this.params.backend === 'WebAudio';\n        const paused = this.backend.isPaused();\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.pause();\n        }\n\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.play();\n        }\n\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Sets the ID of the audio device to use for output and returns a Promise.\n     *\n     * @param {string} deviceId String value representing underlying output\n     * device\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\n     * no errors detected.\n     */\n    setSinkId(deviceId) {\n        return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n    setVolume(newVolume) {\n        if (this.isMuted === true) {\n            this.savedVolume = newVolume;\n            return;\n        }\n        this.backend.setVolume(newVolume);\n        this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number} The current playback rate.\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. If not currently muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute Specify `true` to mute audio.\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     * console.log(wavesurfer.getMute()) // logs false\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            this.fireEvent('mute', this.isMuted);\n            return;\n        }\n\n        if (this.backend.setMute) {\n            // Backends such as the MediaElement backend have their own handling\n            // of mute, let them handle it.\n            this.backend.setMute(mute);\n            this.isMuted = mute;\n        } else {\n            if (mute) {\n                // If currently not muted then save current volume,\n                // turn off the volume and update the mute properties\n                this.savedVolume = this.backend.getVolume();\n                this.backend.setVolume(0);\n                this.isMuted = true;\n                this.fireEvent('volume', 0);\n            } else {\n                // If currently muted then restore to the saved volume\n                // and update the mute properties\n                this.backend.setVolume(this.savedVolume);\n                this.isMuted = false;\n                this.fireEvent('volume', this.savedVolume);\n            }\n        }\n        this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean} Current mute status\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array} List of enabled filters\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @param {?number} channelIdx Optional index of the channel to get its wave color if splitChannels is true\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\n     */\n    getWaveColor(channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            return this.params.splitChannelsOptions.channelColors[channelIdx].waveColor;\n        }\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\n     * @param {?number} channelIdx Optional index of the channel to set its wave color if splitChannels is true\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color, channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            this.params.splitChannelsOptions.channelColors[channelIdx].waveColor = color;\n        } else {\n            this.params.waveColor = color;\n        }\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @param {?number} channelIdx Optional index of the channel to get its progress color if splitChannels is true\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\n     */\n    getProgressColor(channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            return this.params.splitChannelsOptions.channelColors[channelIdx].progressColor;\n        }\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\n     * @param {?number} channelIdx Optional index of the channel to set its progress color if splitChannels is true\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color, channelIdx) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            this.params.splitChannelsOptions.channelColors[channelIdx].progressColor = color;\n        } else {\n            this.params.progressColor = color;\n        }\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the background color of the waveform container.\n     *\n     * @return {string} A CSS color string.\n     */\n    getBackgroundColor() {\n        return this.params.backgroundColor;\n    }\n\n    /**\n     * Set the background color of the waveform container.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\n     */\n    setBackgroundColor(color) {\n        this.params.backgroundColor = color;\n        util.style(this.container, { background: this.params.backgroundColor });\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Hide channels from being drawn on the waveform if splitting channels.\n     *\n     * For example, if we want to draw only the peaks for the right stereo channel:\n     *\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n     * wavesurfer.load('stereo_audio.mp3');\n     *\n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n     *\n     * @param {array} channelIndices Channels to be filtered out from drawing.\n     * @version 4.0.0\n     */\n    setFilteredChannels(channelIndices) {\n        this.params.splitChannelsOptions.filterChannels = channelIndices;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave view-port and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() *\n                this.params.minPxPerSec *\n                this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        // always start at 0 after zooming for scrolling : issue redraw left part\n        let start = 0;\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (\n            this.params.fillParent &&\n            (!this.params.scrollParent || nominalWidth < parentWidth)\n        ) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(\n                width,\n                start,\n                end\n            );\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n                this.drawer.drawPeaks(\n                    peaks,\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n            }\n        } else {\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer Buffer to process\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer Buffer to process\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.isReady = true;\n        this.fireEvent('ready');\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current `minPxPerSec` and zoom value) without having to decode\n     * the audio.\n     * @returns {void}\n     * @throws Will throw an error if the `url` argument is empty.\n     * @example\n     * // uses fetch or media element to load file (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * // peaks\n     * wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        if (!url) {\n            throw new Error('url parameter cannot be empty');\n        }\n        this.empty();\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\n                        this.params.backend\n                    ) === -1,\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        // loadBuffer(url, peaks, duration) requires that url is a string\n        // but users can pass in a HTMLMediaElement to WaveSurfer\n        if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\n            url = url.src;\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n            case 'MediaElementWebAudio':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string} url URL of audio file\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Optional duration of audio file\n     * @returns {void}\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration Optional duration of audio file\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                // ignore when backend was already destroyed\n                if (!this.backend.destroyed) {\n                    this.drawBuffer();\n                    this.isReady = true;\n                    this.fireEvent('ready');\n                }\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If peaks are provided, render them and fire the `waveform-ready` event.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n        }\n\n        // If no pre-decoded peaks are provided, or are provided with\n        // forceDecode flag, attempt to download the audio file and decode it\n        // with Web Audio.\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        if (!this.isDestroyed) {\n            this.arraybuffer = arraybuffer;\n            this.backend.decodeArrayBuffer(\n                arraybuffer,\n                data => {\n                    // Only use the decoded data if we haven't been destroyed or\n                    // another decode started in the meantime\n                    if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                        callback(data);\n                        this.arraybuffer = null;\n                    }\n                },\n                () => this.fireEvent('error', 'Error decoding audiobuffer')\n            );\n        }\n    }\n\n    /**\n     * Load an array buffer using fetch and pass the result to a callback\n     *\n     * @param {string} url The URL of the file object\n     * @param {function} callback The function to call on complete\n     * @returns {util.fetchFile} fetch call\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        let options = Object.assign(\n            {\n                url: url,\n                responseType: 'arraybuffer'\n            },\n            this.params.xhr\n        );\n        const request = util.fetchFile(options);\n\n        this.currentRequest = request;\n\n        this.tmpEvents.push(\n            request.on('progress', e => {\n                this.onProgress(e);\n            }),\n            request.on('success', data => {\n                callback(data);\n                this.currentRequest = null;\n            }),\n            request.on('error', e => {\n                this.fireEvent('error', e);\n                this.currentRequest = null;\n            })\n        );\n\n        return request;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e Progress event\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and optionally opens in a new window\n     * as valid JSON Blob instance.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks\n     * @param {number} accuracy=10000\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start Start index\n     * @param {number} end End index\n     * @return {Promise} Promise that resolves with array of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start, end) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start, end);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n\n        return new Promise((resolve, reject) => {\n            if (!noWindow){\n                const blobJSON = new Blob(\n                    [JSON.stringify(arr)],\n                    {type: 'application/json;charset=utf-8'}\n                );\n                const objURL = URL.createObjectURL(blobJSON);\n                window.open(objURL);\n                URL.revokeObjectURL(objURL);\n            }\n            resolve(arr);\n        });\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `image/png`. Other supported types are\n     * `image/jpeg` and `image/webp`.\n     *\n     * @param {string} format='image/png' A string indicating the image format.\n     * The default format type is `image/png`.\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\n     * quality to use for image formats that use lossy compression such as\n     * `image/jpeg` and `image/webp`.\n     * @param {string} type Image data type to return. Either `dataURL` (default)\n     * or `blob`.\n     * @return {string|string[]|Promise} When using `dataURL` type this returns\n     * a single data URL or an array of data URLs, one for each canvas. When using\n     * `blob` type this returns a `Promise` resolving with an array of `Blob`\n     * instances, one for each canvas.\n     */\n    exportImage(format, quality, type) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n        if (!type) {\n            type = 'dataURL';\n        }\n\n        return this.drawer.getImage(format, quality, type);\n    }\n\n    /**\n     * Cancel any fetch request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentRequest && this.currentRequest.controller) {\n            // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n            // See: Wavesurfer issue #2042\n            // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n            if (this.currentRequest._reader) {\n                // Ignoring exceptions thrown by call to cancel()\n                this.currentRequest._reader.cancel().catch(err => {});\n            }\n\n            this.currentRequest.controller.abort();\n            this.currentRequest = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.isReady = false;\n        this.cancelAjax();\n        this.clearTmpEvents();\n\n        // empty drawer\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        if (this.backend) {\n            this.backend.destroy();\n            // clears memory usage\n            this.backend = null;\n        }\n        if (this.drawer) {\n            this.drawer.destroy();\n        }\n        this.isDestroyed = true;\n        this.isReady = false;\n        this.arraybuffer = null;\n    }\n}\n","import * as util from './util';\n\n// using constants to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {util.Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** audioContext: allows to process audio with WebAudio API */\n    audioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext} Existing audio context, or creates a new one\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate The sample rate to use\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\n     * a new one\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** ac: Audio Context instance */\n        this.ac =\n            params.audioContext ||\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** gainNode: allows to control audio volume */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** analyser: provides audio analysis information */\n        this.analyser = null;\n        /** scriptNode: allows processing audio */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = params.duration;\n        /** @private */\n        this.sinkStreamDestination = null;\n        /** @private */\n        this.sinkAudioElement = null;\n        /**\n         * Boolean indicating if the backend was destroyed.\n         */\n        this.destroyed = false;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {string} state The new state\n     */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters One or more filters to set\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n    /** Create ScriptProcessorNode to process audio */\n    createScriptNode() {\n        if (this.params.audioScriptProcessor) {\n            this.scriptNode = this.params.audioScriptProcessor;\n            this.scriptNode.connect(this.ac.destination);\n        }\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        const loop = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration() && this.state !== this.states[FINISHED]) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause && this.state !== this.states[PAUSED]) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n                util.frame(loop)();\n            }\n        };\n\n        loop();\n    }\n\n    /** Create analyser node to perform audio analysis */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            /**\n             * The webaudio API doesn't currently support setting the device\n             * output. Here we create an HTMLAudioElement, connect the\n             * webaudio stream to that element and setSinkId there.\n             */\n            if (!this.sinkAudioElement) {\n                this.sinkAudioElement = new window.Audio();\n                // autoplay is necessary since we're not invoking .play()\n                this.sinkAudioElement.autoplay = true;\n            }\n            if (!this.sinkAudioElement.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            if (!this.sinkStreamDestination) {\n                this.sinkStreamDestination = this.ac.createMediaStreamDestination();\n            }\n            this.gainNode.disconnect();\n            this.gainNode.connect(this.sinkStreamDestination);\n            this.sinkAudioElement.srcObject = this.sinkStreamDestination.stream;\n\n            return this.sinkAudioElement.setSinkId(deviceId);\n        } else {\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n        }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete.\n     * @param {function} errback The function to call on error.\n     */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\n            );\n        }\n        if ('webkitAudioContext' in window) {\n            // Safari: no support for Promise-based decodeAudioData enabled\n            // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n            this.offlineAc.decodeAudioData(\n                arraybuffer,\n                data => callback(data),\n                errback\n            );\n        } else {\n            this.offlineAc.decodeAudioData(arraybuffer).then(\n                (data) => callback(data)\n            ).catch(\n                (err) => errback(err)\n            );\n        }\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Explicit duration\n     */\n    setPeaks(peaks, duration) {\n        if (duration != null) {\n            this.explicitDuration = duration;\n        }\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio)\n     *\n     * @param {number} length The rendered length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n        if (!this.buffer) {\n            return [];\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        if (!this.buffer) {\n            return this.params.splitChannels\n                ? this.splitPeaks\n                : this.mergedPeaks;\n        }\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                /**\n                 * Initialize the max and min to the first sample of this\n                 * subrange, so that even if the samples are entirely\n                 * on one side of zero, we still return the true max and\n                 * min values in the subrange.\n                 */\n                let min = chan[start];\n                let max = min;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Position\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n    /**\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n     */\n    destroyWebAudio() {\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode && this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n\n        // disconnect resources used by setSinkId\n        if (this.sinkStreamDestination) {\n            this.sinkAudioElement.pause();\n            this.sinkAudioElement.srcObject = null;\n            this.sinkStreamDestination.disconnect();\n            this.sinkStreamDestination = null;\n        }\n    }\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.destroyed = true;\n\n        this.destroyWebAudio();\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer Decoded audio buffer to load\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        // adjust for old browsers\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.setPlaybackRate(this.playbackRate);\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * @private\n     *\n     * some browsers require an explicit call to #resume before they will play back audio\n     */\n    resumeAudioContext() {\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Whether or not this backend is currently paused\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration of loaded buffer\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}} Object containing start and end\n     * positions\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number} The playback position in seconds\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start);\n\n        this.resumeAudioContext();\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        try {\n            this.source && this.source.stop(0);\n        } catch (err) {\n            // Calling stop can throw the following 2 errors:\n            // - RangeError (The value specified for when is negative.)\n            // - InvalidStateNode (The node has not been started by calling start().)\n            // We can safely ignore both errors, because:\n            // - The range is surely correct\n            // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n        }\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} The current time in seconds\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number} The current playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value The playback rate to use\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.source && this.source.playbackRate.setValueAtTime(\n            this.playbackRate,\n            this.ac.currentTime\n        );\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} end Position to end at\n     * @version 3.3.0\n     */\n    setPlayEnd(end) {\n        this.scheduledPause = end;\n    }\n}\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n",null,"// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n",null,"/*!\n  * PhotoSwipe Lightbox 5.3.7 - https://photoswipe.com\n  * (c) 2023 Dmytro Semenov\n  */\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\r\nfunction createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName);\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\r\nfunction toTransformString(x, y, scale) {\r\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ` scale3d(${scale},${scale},1)`;\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nfunction setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? `${w}px` : w;\r\n  el.style.height = (typeof h === 'number') ? `${h}px` : h;\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nconst LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\r\nfunction specialKeyUsed(e) {\r\n  return ('button' in e && e.button === 1) || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nfunction getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\r\nfunction isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nfunction isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\n\n/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thubmnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thubmnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    this.defaultPrevented = false;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe | undefined} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions | undefined} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name]?.push({ fn, priority });\r\n    this._filters[name]?.sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    this.pswp?.addFilter(name, fn, priority);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    this._filters[name]?.forEach((filter) => {\r\n      // @ts-expect-error\r\n      args[0] = filter.fn.apply(this, args);\r\n    });\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name]?.push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    this.pswp?.on(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    this.pswp?.off(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    this._listeners[name]?.forEach((listener) => {\r\n      listener.call(this, event);\r\n    });\r\n\r\n    return event;\r\n  }\r\n}\n\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : 'div',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      const imgEl = /** @type {HTMLImageElement} */ (this.element);\r\n      imgEl.decoding = 'async';\r\n      imgEl.alt = '';\r\n      imgEl.src = imageSrc;\r\n      imgEl.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element?.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\n\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {Placeholder | undefined} */\r\n    this.placeholder = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.slide = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.isDecoding = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = undefined;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content', 'div');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    if (!this.isImageContent()\r\n      || !this.element\r\n      || this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src ?? '';\r\n    imageElement.alt = this.data.alt ?? '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide && this.element) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch(\r\n      'contentResize',\r\n      { content: this, width, height }).defaultPrevented\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch(\r\n          'imageSizeChange',\r\n          { slide: this.slide, width, height, content: this }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\r\n      return;\r\n    }\r\n\r\n    const image = /** @type HTMLImageElement */ (this.element);\r\n    const sizesWidth = this.instance.applyFilters(\r\n      'srcsetSizesWidth',\r\n      this.displayedImageWidth,\r\n      this\r\n    );\r\n\r\n    if (\r\n      !image.dataset.largestUsedSize\r\n      || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)\r\n    ) {\r\n      image.sizes = sizesWidth + 'px';\r\n      image.dataset.largestUsedSize = String(sizesWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = undefined;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = undefined;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\r\n      errorMsgEl.innerText = this.instance.options?.errorMsg ?? '';\r\n      errorMsgEl = /** @type {HTMLDivElement} */ (this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      ));\r\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached || !this.element) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.slide && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented\r\n      || !this.slide) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n      // add image to slide when it becomes active,\r\n      // even if it's not finished decoding\r\n      this.appendImage();\r\n    } else if (this.isError()) {\r\n      this.load(false, true); // try to reload\r\n    }\r\n\r\n    if (this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n    if (this.slide && this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\r\nfunction getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nfunction parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue = 0;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return Number(paddingValue) || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\r\nfunction getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\n\nconst MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n    /** @type { Point | null } */\r\n    this.panAreaSize = null;\r\n    /** @type { Point | null } */\r\n    this.elementSize = null;\r\n    this.fit = 1;\r\n    this.fill = 1;\r\n    this.vFill = 1;\r\n    this.initial = 1;\r\n    this.secondary = 1;\r\n    this.max = 1;\r\n    this.min = 1;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    /** @type {Point} */\r\n    const elementSize = { x: maxWidth, y: maxHeight };\r\n    this.elementSize = elementSize;\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = panAreaSize.x / elementSize.x;\r\n    const vRatio = panAreaSize.y / elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (\r\n      optionPrefix + 'ZoomLevel'\r\n    );\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\r\n  }\r\n}\n\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\r\nfunction lazyLoadData(itemData, instance, index) {\r\n  const content = instance.createContentFromData(itemData, index);\r\n  /** @type {ZoomLevel | undefined} */\r\n  let zoomLevel;\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset, and we need to define sizes\r\n  if (options) {\r\n    zoomLevel = new ZoomLevel(options, itemData, -1);\r\n\r\n    let viewportSize;\r\n    if (instance.pswp) {\r\n      viewportSize = instance.pswp.viewportSize;\r\n    } else {\r\n      viewportSize = getViewportSize(options, instance);\r\n    }\r\n\r\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n    zoomLevel.update(content.width, content.height, panAreaSize);\r\n  }\r\n\r\n  content.lazyLoad();\r\n\r\n  if (zoomLevel) {\r\n    content.setDisplayedSize(\r\n      Math.ceil(content.width * zoomLevel.initial),\r\n      Math.ceil(content.height * zoomLevel.initial)\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\r\nfunction lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\n\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems = 0;\r\n    const dataSource = this.options?.dataSource;\r\n\r\n    if (dataSource && 'length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\r\n  getItemData(index) {\r\n    const dataSource = this.options?.dataSource;\r\n    /** @type {SlideData | HTMLElement} */\r\n    let dataSourceItem = {};\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options?.children || this.options?.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (\r\n      element.tagName === 'A'\r\n        ? element\r\n        : element.querySelector('a')\r\n    );\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\r\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt') ?? '';\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\n\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/content.js').default} Content */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n\r\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\r\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\r\n  constructor(options) {\r\n    super();\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = options || {};\r\n    this._uid = 0;\r\n    this.shouldOpen = false;\r\n    /**\r\n     * @private\r\n     * @type {Content | undefined}\r\n     */\r\n    this._preloadedContent = undefined;\r\n\r\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\r\n  init() {\r\n    // Bind click events to each gallery\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.addEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  onThumbnailsClick(e) {\r\n    // Exit and allow default browser action if:\r\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\r\n        || window.pswp // ... if PhotoSwipe is already open\r\n        || window.navigator.onLine === false) { // ... if offline\r\n      return;\r\n    }\r\n\r\n    // If both clientX and clientY are 0 or not defined,\r\n    // the event is likely triggered by keyboard,\r\n    // so we do not pass the initialPoint\r\n    //\r\n    // Note that some screen readers emulate the mouse position,\r\n    // so it's not the ideal way to detect them.\r\n    //\r\n    /** @type {Point | null} */\r\n    let initialPoint = { x: e.clientX, y: e.clientY };\r\n\r\n    if (!initialPoint.x && !initialPoint.y) {\r\n      initialPoint = null;\r\n    }\r\n\r\n    let clickedIndex = this.getClickedIndex(e);\r\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\r\n    /** @type {DataSource} */\r\n    const dataSource = {\r\n      gallery: /** @type {HTMLElement} */ (e.currentTarget)\r\n    };\r\n\r\n    if (clickedIndex >= 0) {\r\n      e.preventDefault();\r\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   * @returns {number}\r\n   */\r\n  getClickedIndex(e) {\r\n    // legacy option\r\n    if (this.options.getClickedIndexFn) {\r\n      return this.options.getClickedIndexFn.call(this, e);\r\n    }\r\n\r\n    const clickedTarget = /** @type {HTMLElement} */ (e.target);\r\n    const childElements = getElementsFromOption(\r\n      this.options.children,\r\n      this.options.childSelector,\r\n      /** @type {HTMLElement} */ (e.currentTarget)\r\n    );\r\n    const clickedChildIndex = childElements.findIndex(\r\n      child => child === clickedTarget || child.contains(clickedTarget)\r\n    );\r\n\r\n    if (clickedChildIndex !== -1) {\r\n      return clickedChildIndex;\r\n    } else if (this.options.children || this.options.childSelector) {\r\n      // click wasn't on a child element\r\n      return -1;\r\n    }\r\n\r\n    // There is only one item (which is the gallery)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} dataSource\r\n   * @param {Point | null} [initialPoint]\r\n   * @returns {boolean}\r\n   */\r\n  loadAndOpen(index, dataSource, initialPoint) {\r\n    // Check if the gallery is already open\r\n    if (window.pswp) {\r\n      return false;\r\n    }\r\n\r\n    // set initial index\r\n    this.options.index = index;\r\n\r\n    // define options for PhotoSwipe constructor\r\n    this.options.initialPointerPos = initialPoint;\r\n\r\n    this.shouldOpen = true;\r\n    this.preload(index, dataSource);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   */\r\n  preload(index, dataSource) {\r\n    const { options } = this;\r\n\r\n    if (dataSource) {\r\n      options.dataSource = dataSource;\r\n    }\r\n\r\n    // Add the main module\r\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\r\n    const promiseArray = [];\r\n\r\n    const pswpModuleType = typeof options.pswpModule;\r\n    if (isPswpClass(options.pswpModule)) {\r\n      promiseArray.push(Promise.resolve(/** @type {Type<PhotoSwipe>} */ (options.pswpModule)));\r\n    } else if (pswpModuleType === 'string') {\r\n      throw new Error('pswpModule as string is no longer supported');\r\n    } else if (pswpModuleType === 'function') {\r\n      promiseArray.push(/** @type {() => Promise<Type<PhotoSwipe>>} */ (options.pswpModule)());\r\n    } else {\r\n      throw new Error('pswpModule is not valid');\r\n    }\r\n\r\n    // Add custom-defined promise, if any\r\n    if (typeof options.openPromise === 'function') {\r\n      // allow developers to perform some task before opening\r\n      promiseArray.push(options.openPromise());\r\n    }\r\n\r\n    if (options.preloadFirstSlide !== false && index >= 0) {\r\n      this._preloadedContent = lazyLoadSlide(index, this);\r\n    }\r\n\r\n    // Wait till all promises resolve and open PhotoSwipe\r\n    const uid = ++this._uid;\r\n    Promise.all(promiseArray).then((iterableModules) => {\r\n      if (this.shouldOpen) {\r\n        const mainModule = iterableModules[0];\r\n        this._openPhotoswipe(mainModule, uid);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\r\n  _openPhotoswipe(module, uid) {\r\n    // Cancel opening if UID doesn't match the current one\r\n    // (if user clicked on another gallery item before current was loaded).\r\n    //\r\n    // Or if shouldOpen flag is set to false\r\n    // (developer may modify it via public API)\r\n    if (uid !== this._uid && this.shouldOpen) {\r\n      return;\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n\r\n    // PhotoSwipe is already open\r\n    if (window.pswp) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\r\n    const pswp = typeof module === 'object'\r\n        ? new module.default(this.options) // eslint-disable-line\r\n        : new module(this.options); // eslint-disable-line\r\n\r\n    this.pswp = pswp;\r\n    window.pswp = pswp;\r\n\r\n    // map listeners from Lightbox to PhotoSwipe Core\r\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\r\n    (Object.keys(this._listeners)).forEach((name) => {\r\n      this._listeners[name]?.forEach((fn) => {\r\n        pswp.on(name, /** @type {EventCallback<typeof name>} */(fn));\r\n      });\r\n    });\r\n\r\n    // same with filters\r\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\r\n    (Object.keys(this._filters)).forEach((name) => {\r\n      this._filters[name]?.forEach((filter) => {\r\n        pswp.addFilter(name, filter.fn, filter.priority);\r\n      });\r\n    });\r\n\r\n    if (this._preloadedContent) {\r\n      pswp.contentLoader.addToCache(this._preloadedContent);\r\n      this._preloadedContent = undefined;\r\n    }\r\n\r\n    pswp.on('destroy', () => {\r\n      // clean up public variables\r\n      this.pswp = undefined;\r\n      delete window.pswp;\r\n    });\r\n\r\n    pswp.init();\r\n  }\r\n\r\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\r\n  destroy() {\r\n    this.pswp?.destroy();\r\n\r\n    this.shouldOpen = false;\r\n    this._listeners = {};\r\n\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n}\n\nexport { PhotoSwipeLightbox as default };\n//# sourceMappingURL=photoswipe-lightbox.esm.js.map\n","/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName);\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {number}\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are equal\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {boolean}\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n * @returns {number}\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ` scale3d(${scale},${scale},1)`;\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string} [prop] CSS property to animate\r\n * @param {number} [duration] in ms\r\n * @param {string} [ease] CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? `${prop} ${duration}ms ${ease || defaultCSSEasing}`\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? `${w}px` : w;\r\n  el.style.height = (typeof h === 'number') ? `${h}px` : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode().catch(() => {});\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\r\nexport function specialKeyUsed(e) {\r\n  return ('button' in e && e.button === 1) || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\r\n\r\n","/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thubmnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thubmnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    this.defaultPrevented = false;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe | undefined} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions | undefined} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name]?.push({ fn, priority });\r\n    this._filters[name]?.sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    this.pswp?.addFilter(name, fn, priority);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    this._filters[name]?.forEach((filter) => {\r\n      // @ts-expect-error\r\n      args[0] = filter.fn.apply(this, args);\r\n    });\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name]?.push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    this.pswp?.on(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    this.pswp?.off(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    this._listeners[name]?.forEach((listener) => {\r\n      listener.call(this, event);\r\n    });\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n","import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\r\n\r\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : 'div',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      const imgEl = /** @type {HTMLImageElement} */ (this.element);\r\n      imgEl.decoding = 'async';\r\n      imgEl.alt = '';\r\n      imgEl.src = imageSrc;\r\n      imgEl.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element?.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nexport default Placeholder;\r\n","import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {Placeholder | undefined} */\r\n    this.placeholder = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.slide = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.isDecoding = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = undefined;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content', 'div');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    if (!this.isImageContent()\r\n      || !this.element\r\n      || this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src ?? '';\r\n    imageElement.alt = this.data.alt ?? '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide && this.element) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch(\r\n      'contentResize',\r\n      { content: this, width, height }).defaultPrevented\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch(\r\n          'imageSizeChange',\r\n          { slide: this.slide, width, height, content: this }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\r\n      return;\r\n    }\r\n\r\n    const image = /** @type HTMLImageElement */ (this.element);\r\n    const sizesWidth = this.instance.applyFilters(\r\n      'srcsetSizesWidth',\r\n      this.displayedImageWidth,\r\n      this\r\n    );\r\n\r\n    if (\r\n      !image.dataset.largestUsedSize\r\n      || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)\r\n    ) {\r\n      image.sizes = sizesWidth + 'px';\r\n      image.dataset.largestUsedSize = String(sizesWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = undefined;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = undefined;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\r\n      errorMsgEl.innerText = this.instance.options?.errorMsg ?? '';\r\n      errorMsgEl = /** @type {HTMLDivElement} */ (this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      ));\r\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached || !this.element) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.slide && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented\r\n      || !this.slide) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n      // add image to slide when it becomes active,\r\n      // even if it's not finished decoding\r\n      this.appendImage();\r\n    } else if (this.isError()) {\r\n      this.load(false, true); // try to reload\r\n    }\r\n\r\n    if (this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n    if (this.slide && this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue = 0;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return Number(paddingValue) || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n","const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n    /** @type { Point | null } */\r\n    this.panAreaSize = null;\r\n    /** @type { Point | null } */\r\n    this.elementSize = null;\r\n    this.fit = 1;\r\n    this.fill = 1;\r\n    this.vFill = 1;\r\n    this.initial = 1;\r\n    this.secondary = 1;\r\n    this.max = 1;\r\n    this.min = 1;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    /** @type {Point} */\r\n    const elementSize = { x: maxWidth, y: maxHeight };\r\n    this.elementSize = elementSize;\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = panAreaSize.x / elementSize.x;\r\n    const vRatio = panAreaSize.y / elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (\r\n      optionPrefix + 'ZoomLevel'\r\n    );\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n","import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import('./content.js').default} Content */\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  const content = instance.createContentFromData(itemData, index);\r\n  /** @type {ZoomLevel | undefined} */\r\n  let zoomLevel;\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset, and we need to define sizes\r\n  if (options) {\r\n    zoomLevel = new ZoomLevel(options, itemData, -1);\r\n\r\n    let viewportSize;\r\n    if (instance.pswp) {\r\n      viewportSize = instance.pswp.viewportSize;\r\n    } else {\r\n      viewportSize = getViewportSize(options, instance);\r\n    }\r\n\r\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n    zoomLevel.update(content.width, content.height, panAreaSize);\r\n  }\r\n\r\n  content.lazyLoad();\r\n\r\n  if (zoomLevel) {\r\n    content.setDisplayedSize(\r\n      Math.ceil(content.width * zoomLevel.initial),\r\n      Math.ceil(content.height * zoomLevel.initial)\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number} [diff] Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} initialIndex\r\n   */\r\n  loadSlideByIndex(initialIndex) {\r\n    const index = this.pswp.getLoopedIndex(initialIndex);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   * @returns {Content}\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      this.addToCache(content);\r\n    }\r\n\r\n    // assign slide to content\r\n    content.setSlide(slide);\r\n\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   * @returns {Content | undefined}\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = [];\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n","import Eventable from './eventable.js';\r\nimport { getElementsFromOption } from '../util/util.js';\r\nimport Content from '../slide/content.js';\r\nimport { lazyLoadData } from '../slide/loader.js';\r\n\r\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems = 0;\r\n    const dataSource = this.options?.dataSource;\r\n\r\n    if (dataSource && 'length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\r\n  getItemData(index) {\r\n    const dataSource = this.options?.dataSource;\r\n    /** @type {SlideData | HTMLElement} */\r\n    let dataSourceItem = {};\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options?.children || this.options?.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (\r\n      element.tagName === 'A'\r\n        ? element\r\n        : element.querySelector('a')\r\n    );\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\r\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt') ?? '';\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n","import {\r\n  specialKeyUsed,\r\n  getElementsFromOption,\r\n  isPswpClass\r\n} from '../util/util.js';\r\n\r\nimport PhotoSwipeBase from '../core/base.js';\r\nimport { lazyLoadSlide } from '../slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/content.js').default} Content */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n\r\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\r\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\r\n  constructor(options) {\r\n    super();\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = options || {};\r\n    this._uid = 0;\r\n    this.shouldOpen = false;\r\n    /**\r\n     * @private\r\n     * @type {Content | undefined}\r\n     */\r\n    this._preloadedContent = undefined;\r\n\r\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\r\n  init() {\r\n    // Bind click events to each gallery\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.addEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  onThumbnailsClick(e) {\r\n    // Exit and allow default browser action if:\r\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\r\n        || window.pswp // ... if PhotoSwipe is already open\r\n        || window.navigator.onLine === false) { // ... if offline\r\n      return;\r\n    }\r\n\r\n    // If both clientX and clientY are 0 or not defined,\r\n    // the event is likely triggered by keyboard,\r\n    // so we do not pass the initialPoint\r\n    //\r\n    // Note that some screen readers emulate the mouse position,\r\n    // so it's not the ideal way to detect them.\r\n    //\r\n    /** @type {Point | null} */\r\n    let initialPoint = { x: e.clientX, y: e.clientY };\r\n\r\n    if (!initialPoint.x && !initialPoint.y) {\r\n      initialPoint = null;\r\n    }\r\n\r\n    let clickedIndex = this.getClickedIndex(e);\r\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\r\n    /** @type {DataSource} */\r\n    const dataSource = {\r\n      gallery: /** @type {HTMLElement} */ (e.currentTarget)\r\n    };\r\n\r\n    if (clickedIndex >= 0) {\r\n      e.preventDefault();\r\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   * @returns {number}\r\n   */\r\n  getClickedIndex(e) {\r\n    // legacy option\r\n    if (this.options.getClickedIndexFn) {\r\n      return this.options.getClickedIndexFn.call(this, e);\r\n    }\r\n\r\n    const clickedTarget = /** @type {HTMLElement} */ (e.target);\r\n    const childElements = getElementsFromOption(\r\n      this.options.children,\r\n      this.options.childSelector,\r\n      /** @type {HTMLElement} */ (e.currentTarget)\r\n    );\r\n    const clickedChildIndex = childElements.findIndex(\r\n      child => child === clickedTarget || child.contains(clickedTarget)\r\n    );\r\n\r\n    if (clickedChildIndex !== -1) {\r\n      return clickedChildIndex;\r\n    } else if (this.options.children || this.options.childSelector) {\r\n      // click wasn't on a child element\r\n      return -1;\r\n    }\r\n\r\n    // There is only one item (which is the gallery)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} dataSource\r\n   * @param {Point | null} [initialPoint]\r\n   * @returns {boolean}\r\n   */\r\n  loadAndOpen(index, dataSource, initialPoint) {\r\n    // Check if the gallery is already open\r\n    if (window.pswp) {\r\n      return false;\r\n    }\r\n\r\n    // set initial index\r\n    this.options.index = index;\r\n\r\n    // define options for PhotoSwipe constructor\r\n    this.options.initialPointerPos = initialPoint;\r\n\r\n    this.shouldOpen = true;\r\n    this.preload(index, dataSource);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   */\r\n  preload(index, dataSource) {\r\n    const { options } = this;\r\n\r\n    if (dataSource) {\r\n      options.dataSource = dataSource;\r\n    }\r\n\r\n    // Add the main module\r\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\r\n    const promiseArray = [];\r\n\r\n    const pswpModuleType = typeof options.pswpModule;\r\n    if (isPswpClass(options.pswpModule)) {\r\n      promiseArray.push(Promise.resolve(/** @type {Type<PhotoSwipe>} */ (options.pswpModule)));\r\n    } else if (pswpModuleType === 'string') {\r\n      throw new Error('pswpModule as string is no longer supported');\r\n    } else if (pswpModuleType === 'function') {\r\n      promiseArray.push(/** @type {() => Promise<Type<PhotoSwipe>>} */ (options.pswpModule)());\r\n    } else {\r\n      throw new Error('pswpModule is not valid');\r\n    }\r\n\r\n    // Add custom-defined promise, if any\r\n    if (typeof options.openPromise === 'function') {\r\n      // allow developers to perform some task before opening\r\n      promiseArray.push(options.openPromise());\r\n    }\r\n\r\n    if (options.preloadFirstSlide !== false && index >= 0) {\r\n      this._preloadedContent = lazyLoadSlide(index, this);\r\n    }\r\n\r\n    // Wait till all promises resolve and open PhotoSwipe\r\n    const uid = ++this._uid;\r\n    Promise.all(promiseArray).then((iterableModules) => {\r\n      if (this.shouldOpen) {\r\n        const mainModule = iterableModules[0];\r\n        this._openPhotoswipe(mainModule, uid);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\r\n  _openPhotoswipe(module, uid) {\r\n    // Cancel opening if UID doesn't match the current one\r\n    // (if user clicked on another gallery item before current was loaded).\r\n    //\r\n    // Or if shouldOpen flag is set to false\r\n    // (developer may modify it via public API)\r\n    if (uid !== this._uid && this.shouldOpen) {\r\n      return;\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n\r\n    // PhotoSwipe is already open\r\n    if (window.pswp) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\r\n    const pswp = typeof module === 'object'\r\n        ? new module.default(this.options) // eslint-disable-line\r\n        : new module(this.options); // eslint-disable-line\r\n\r\n    this.pswp = pswp;\r\n    window.pswp = pswp;\r\n\r\n    // map listeners from Lightbox to PhotoSwipe Core\r\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\r\n    (Object.keys(this._listeners)).forEach((name) => {\r\n      this._listeners[name]?.forEach((fn) => {\r\n        pswp.on(name, /** @type {EventCallback<typeof name>} */(fn));\r\n      });\r\n    });\r\n\r\n    // same with filters\r\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\r\n    (Object.keys(this._filters)).forEach((name) => {\r\n      this._filters[name]?.forEach((filter) => {\r\n        pswp.addFilter(name, filter.fn, filter.priority);\r\n      });\r\n    });\r\n\r\n    if (this._preloadedContent) {\r\n      pswp.contentLoader.addToCache(this._preloadedContent);\r\n      this._preloadedContent = undefined;\r\n    }\r\n\r\n    pswp.on('destroy', () => {\r\n      // clean up public variables\r\n      this.pswp = undefined;\r\n      delete window.pswp;\r\n    });\r\n\r\n    pswp.init();\r\n  }\r\n\r\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\r\n  destroy() {\r\n    this.pswp?.destroy();\r\n\r\n    this.shouldOpen = false;\r\n    this._listeners = {};\r\n\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeLightbox;\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$f13ecebb1f16f955$export$6503ec6e8aabbaf","$f13ecebb1f16f955$export$f7ad0328861e2f03","$f13ecebb1f16f955$var$mapping","pairs","keys","i","length","resolved","getBundleURL","resolve","then","$7lV8K","bundle","Promise","reject","concat","document","getElementsByTagName","some","script","src","preloadLink","createElement","href","rel","as","head","appendChild","async","type","onerror","error","TypeError","message","onload","remove","$55a6d16921f8ab25$var$cachedBundles","$55a6d16921f8ab25$var$cachedPreloads","$55a6d16921f8ab25$var$cachedPrefetches","loader","cache","$55a6d16921f8ab25$var$getCache","apply","arguments","catch","$ce4ea6902f7a0721$export$bdfd709ae4826697","$ce4ea6902f7a0721$var$bundleURL","value","$ce4ea6902f7a0721$var$getBundleURL","matches","stack","match","replace","JSON","parse","$87196e333c431a48$exports","$f069a6f367b4d8a2$var$createElement","className","tagName","appendToEl","el","$f069a6f367b4d8a2$var$setWidthHeight","w","h","style","width","height","__webpack_modules__","module1","__webpack_require__","_style","_interopRequireDefault","_getId","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_defineProperties","target","props","descriptor","writable","_toPropertyKey","arg","key","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","String","Number","CanvasEntry","protoProps","staticProps","_classCallCheck","instance","Constructor","wave","waveCtx","progress","progressCtx","start","end","name","toLowerCase","canvasContextAttributes","element","getContext","elementWidth","totalWidth","offsetLeft","elementSize","hasProgressCanvas","clearRect","canvas","waveColor","progressColor","fillStyle","getFillStyle","ctx","color","CanvasGradient","waveGradient","createLinearGradient","forEach","index","addColorStop","vertical","setTransform","x","y","radius","fillRectToContext","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","peaks","absmax","halfH","offsetY","drawLineToContext","first","Math","round","last","scale","canvasEnd","halfOffset","absmaxHalf","canvasStart","peak","halfPixel","j","format","quality","_this","toBlob","toDataURL","util","_interopRequireWildcard","nodeInterop","_getRequireWildcardCache","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","desc","WeakMap","cacheBabelInterop","cacheNodeInterop","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_getPrototypeOf","getPrototypeOf","Drawer","_util$Observer","_inherits","subClass","superClass","create","hasNativeReflectConstruct","_super","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","result","Super","NewTarget","_possibleConstructorReturn","self1","_assertThisInitialized","ReferenceError","container","params","withOrientation","pixelRatio","lastPos","wrapper","styles","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","cursor","hideCursor","overflowX","hideScrollbar","overflowY","setupWrapperEvents","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","progressPixels","getProgressPixels","scrollLeft","scrollWidth","clamp","wrapperBbox","rtl","right","left","_this2","addEventListener","orientedEvent","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","handleEvent","setWidth","clearWave","barWidth","drawBars","drawWave","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","offset","rate","autoCenterRate","max","min","newWidth","updateSize","_progress","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","parentNode","domElement","removeChild","channelIndex","Observer","_drawer","_drawer2","MultiCanvas","_Drawer","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","ceil","barRadius","createWrapper","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","updateCursor","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","entry","updateDimensions","leftOffset","initWave","initProgress","push","lastEntry","parentElement","destroy","pop","_this3","frame","_this4","prepareDraw","_ref","hasMinVals","ch","peakIndexScale","bar","gap","barGap","step","peakIndex","peakIndexRange","floor","peakIndexEnd","newPeak","abs","barMinHeight","_this5","_ref2","reflectedPeaks","len","drawLine","_this6","_ref3","splitChannelsOptions","channelColors","setFillStyles","applyCanvasTransforms","drawLines","startCanvas","endCanvas","intersection","x1","y1","x2","y2","_ref4","fillRects","splitChannels","filterChannels","includes","fn","drawIndex","normalizedMax","_this7","Array","channels","overallAbsMax","filteredChannels","filter","c","hideChannel","overlay","setHeight","relativeNormalization","map","channelPeaks","absMax","indexOf","barHeight","normalize","val","all","getImage","images","_get","property","receiver","base","_superPropBase","object","MediaElementWebAudio","_MediaElement","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","createAnalyserNode","media","preload","createMediaElementSource","mediaElement","ac","connect","analyser","resumeAudioContext","destroyWebAudio","_mediaelement","_webaudio","MediaElement","_WebAudio","currentTime","duration","paused","playbackRate","play","pause","volume","mediaType","elementPosition","isMuted","buffer","onPlayEnd","mediaListeners","waiting","canplay","ended","seeked","event","volumechange","muted","removeEventListener","on","onAudioProcess","isPaused","getCurrentTime","url","controls","mediaControls","autoplay","prevMedia","querySelector","_load","elt","HTMLMediaElement","load","_setupMediaListeners","setVolume","explicitDuration","Infinity","seekable","getDuration","isNaN","clearPlayEnd","seekTo","promise","setPlayEnd","_onPlayEnd","time","un","deviceId","setSinkId","destroyed","removeMediaElementOnDestroy","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","item","arr","sort","a","b","uncachedRangePairs","peakCacheRangePairs","values","_max","_min","options","_observer","fetchHeaders","Headers","fetchRequest","Request","controller","AbortController","requestHeaders","header","append","responseType","fetchOptions","method","headers","mode","credentials","redirect","referrer","signal","fetch","response","progressAvailable","body","contentLength","onProgress","Response","ReadableStream","ProgressHandler","errMsg","ok","arrayBuffer","json","blob","text","status","_reader","getReader","total","parseInt","loaded","read","done","lengthComputable","close","byteLength","enqueue","func","_len","args","_key","_requestAnimationFrame","prefix","random","toString","substring","__unused_webpack_module","_absMax","_clamp","_debounce","_fetch","_frame","_silenceMode","_preventClick","_orientation","largest","smallest","_disabledEventEmissions","handlers","callback","splice","handler","setTimeout","eventNames","_len2","_key2","_isDisabledEventEmission","isProxy","prop","mapProp","verticalPropMap","offsetTop","offsetWidth","preventClickHandler","stopPropagation","_default","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","silentAC","AudioContext","silentBS","createBufferSource","createBuffer","destination","tmp","innerHTML","audioSilentMode","children","disableRemotePlayback","_peakcache","_mediaelementWebaudio","_defineProperty","WaveSurfer","audioContext","audioScriptProcessor","backend","backgroundColor","dragSelection","desynchronized","forceDecode","ignoreSilenceMode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","splitDragSelection","xhr","WebAudio","assign","defaultParams","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","supportsWebAudio","Backend","backends","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","drawBuffer","getPlayedPercents","newVolume","getVolume","seconds","skip","seekAndCenter","recenter","_this8","isFinite","isWebAudioBackend","oldScrollParent","getPlaybackRate","setMute","mute","filters","channelIdx","background","channelIndices","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","_this9","decodeArrayBuffer","data","loadDecodedBuffer","_this10","reader","FileReader","loadArrayBuffer","readAsArrayBuffer","empty","preloadIgnoreReasons","activeReasons","reason","console","warn","join","loadBuffer","loadMediaElement","_this11","action","once","getArrayBuffer","setPeaks","urlOrElt","_this12","loadElt","_this13","_this14","request","fetchFile","percentComplete","accuracy","noWindow","blobJSON","Blob","stringify","objURL","URL","createObjectURL","open","revokeObjectURL","cancel","abort","stop","disconnectSource","cancelAjax","clearTmpEvents","destroyAllPlugins","wavesurfer","PLAYING","PAUSED","FINISHED","_defineProperty2","_this$states","addOnAudioProcess","startPosition","getPlayedTime","getAudioContext","lastPlay","scheduledPause","states","stateBehaviors","gainNode","mergedPeaks","offlineAc","scriptNode","source","splitPeaks","state","sinkStreamDestination","sinkAudioElement","webkitAudioContext","WaveSurferAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","setState","setLength","disconnect","setFilters","disconnectFilters","reduce","prev","curr","loop","createAnalyser","createGain","createGainNode","Audio","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","getOfflineAudioContext","decodeAudioData","numberOfChannels","newBuffer","sampleSize","sampleStep","chan","getChannelData","closeAudioContext","createSource","noteGrainOn","noteOff","resume","adjustedTime","wait","later","Date","now","timestamp","timeout","context","debounced","callNow","clear","clearTimeout","flush","__webpack_module_cache__","moduleId","cachedModule","$f069a6f367b4d8a2$var$LOAD_STATE","IDLE","LOADING","LOADED","ERROR","$f069a6f367b4d8a2$var$getElementsFromOption","option","legacySelector","parent","elements","Element","NodeList","isArray","from","selector","querySelectorAll","$f069a6f367b4d8a2$var$isSafari","navigator","vendor","$f069a6f367b4d8a2$var$PhotoSwipeEvent","details","defaultPrevented","$f069a6f367b4d8a2$var$Eventable","_listeners","_filters","pswp","addFilter","priority","f1","f2","removeFilter","applyFilters","off","listener","dispatch","$f069a6f367b4d8a2$var$Placeholder","imageSrc","imgEl","decoding","alt","setAttribute","setDisplayedSize","propValue","transformOrigin","$f069a6f367b4d8a2$var$Content","itemData","placeholder","slide","displayedImageWidth","displayedImageHeight","isAttached","hasSlide","isDecoding","content","removePlaceholder","keepPlaceholder","isLazy","reload","usePlaceholder","placeholderEl","prepend","placeholderSrc","msrc","isFirstSlide","isImageContent","loadImage","html","updateContentSize","imageElement","updateSrcsetSizes","srcset","complete","onLoaded","onError","setSlide","isActive","heavyAppended","displayError","isError","isLoading","isInitialSizeUpdate","isZoomable","image","sizesWidth","dataset","largestUsedSize","sizes","lazyLoad","errorMsgEl","innerText","errorMsg","supportsDecode","decode","finally","appendImage","activate","holderElement","deactivate","$f069a6f367b4d8a2$var$parsePaddingOption","viewportSize","paddingValue","paddingFn","padding","legacyPropName","toUpperCase","slice","$f069a6f367b4d8a2$var$ZoomLevel","panAreaSize","fit","vFill","initial","secondary","update","maxWidth","maxHeight","hRatio","vRatio","_getInitial","_getSecondary","_getMax","zoomLevels","slideData","_parseZoomLevelOption","optionPrefix","optionValue","currZoomLevel","$f069a6f367b4d8a2$var$MAX_IMAGE_WIDTH","$f069a6f367b4d8a2$var$lazyLoadData","zoomLevel","createContentFromData","$f069a6f367b4d8a2$var$getViewportSize","getViewportSizeFn","newViewportSize","documentElement","innerHeight","$f069a6f367b4d8a2$var$PhotoSwipeBase","getNumItems","numItems","dataSource","items","_getGalleryDOMElements","gallery","getItemData","dataSourceItem","_domElementToItemData","galleryElement","childSelector","linkEl","pswpSrc","pswpSrcset","pswpWidth","pswpHeight","pswpType","thumbnailEl","currentSrc","getAttribute","pswpCropped","cropped","thumbCropped","lazyLoadData","$f069a6f367b4d8a2$export$2e2bcd8739ae039","_uid","shouldOpen","_preloadedContent","onThumbnailsClick","gallerySelector","$f069a6f367b4d8a2$var$specialKeyUsed","button","ctrlKey","metaKey","altKey","shiftKey","onLine","initialPoint","clickedIndex","getClickedIndex","currentTarget","loadAndOpen","getClickedIndexFn","clickedTarget","childElements","clickedChildIndex","findIndex","child","contains","initialPointerPos","promiseArray","pswpModuleType","pswpModule","goTo","openPromise","preloadFirstSlide","$f069a6f367b4d8a2$var$lazyLoadSlide","uid","iterableModules","mainModule","_openPhotoswipe","contentLoader","addToCache","$ef9759333dbb3e83$var$getRandomInt","List","valueNames","attr","img","innerWidth","classList","toggle","$ef9759333dbb3e83$var$lightboxInIt","lightbox","arrowPrevSVG","arrowNextSVG","closeSVG","zoomSVG","showHideAnimationType","bgOpacity","googleMapUrl","bunnyUrl","iframe","$ef9759333dbb3e83$var$lightboxListInIt","sources","lightroomImage","lightroomWidth","lightroomHeight","lightroomAlt","$ef9759333dbb3e83$var$audioPlayerInIt","audioPlayer","player","playButton","volumeButton","muteButton","vlm","$parcel$interopDefault","getComputedStyle","getPropertyValue","filePath","audio","startsWith","location","protocol","host","playPause","backgroundSize","toggleMute","getElementById","add","$ef9759333dbb3e83$var$menuInIt","$ef9759333dbb3e83$var$searchInIt","log","require","_createClass","getId","_createSuper","Derived","_createSuperInternal","resetScroll","getScrollX","getCacheRanges","utilMax","utilmin","reqAnimationFrame","setDisabledEventEmissions","preventClick","audioData","PluginClass","ws","getActivePlugins","setCurrentTime","isPlaying","skipBackward","skipForward","getMute","getFilters","toggleScroll","toggleInteraction","getWaveColor","setWaveColor","getProgressColor","setProgressColor","getBackgroundColor","getCursorColor","setCursorColor","getHeight","setFilteredChannels","zoom","loadBlob","exportPCM","exportImage","__VERSION__","setFilter"],"version":3,"file":"script.js.map"}